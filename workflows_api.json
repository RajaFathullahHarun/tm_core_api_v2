{
  "info": {
    "title": "Workflows Api",
    "version": "v1"
  },
  "paths": {
    "/v1/policies": {
      "get": {
        "summary": "Lists all of the available policies.",
        "operationId": "ListPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policiesListPoliciesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether or not to include inactive policies. Required.",
            "name": "include_inactive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order by fields. Optional.",
            "name": "order_by",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "ORDER_BY_CREATION_TIME_DESC": "Default sort field."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ORDER_BY_CREATION_TIME_DESC",
                  "ORDER_BY_CREATION_TIME_ASC",
                  "ORDER_BY_ID_DESC",
                  "ORDER_BY_ID_ASC"
                ]
              }
            }
          },
          {
            "description": "The number of results to be retrieved. Required.",
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, the first page of results will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The level of detail to be returned in the policies. Required.",
            "name": "view",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "POLICY_VIEW_BASIC": "Returned policies include only ID, description, is_active flag and creation timestamp.",
              "POLICY_VIEW_INCLUDE_ACTIONS": "Returned policies include everything from the basic view plus actions."
            },
            "schema": {
              "type": "string",
              "enum": [
                "POLICY_VIEW_BASIC",
                "POLICY_VIEW_INCLUDE_ACTIONS"
              ],
              "default": "POLICY_VIEW_BASIC"
            }
          }
        ],
        "tags": [
          "WorkflowsAPIPolicies"
        ],
        "x-section": "Policies"
      },
      "post": {
        "summary": "Creates a new policy.",
        "operationId": "CreatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policiesPolicy"
                }
              }
            }
          }
        },
        "tags": [
          "WorkflowsAPIPolicies"
        ],
        "x-section": "Policies",
        "requestBody": {
          "$ref": "#/components/requestBodies/policiesCreatePolicyRequest"
        }
      }
    },
    "/v1/policies/{id}": {
      "get": {
        "summary": "Retrieves a single policy based on its ID.",
        "operationId": "GetPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policiesPolicy"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Policy that is to be retrieved. Required.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The level of detail to include in the returned Policy. Required.",
            "name": "view",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "POLICY_VIEW_BASIC": "Returned policies include only ID, description, is_active flag and creation timestamp.",
              "POLICY_VIEW_INCLUDE_ACTIONS": "Returned policies include everything from the basic view plus actions."
            },
            "schema": {
              "type": "string",
              "enum": [
                "POLICY_VIEW_BASIC",
                "POLICY_VIEW_INCLUDE_ACTIONS"
              ],
              "default": "POLICY_VIEW_BASIC"
            }
          }
        ],
        "tags": [
          "WorkflowsAPIPolicies"
        ],
        "x-section": "Policies"
      }
    },
    "/v1/policies/{policy.id}": {
      "put": {
        "summary": "Updates an existing policy.",
        "operationId": "UpdatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policiesPolicy"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The unique ID of this Policy (scoped to an organisation ID).",
            "name": "policy.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkflowsAPIPolicies"
        ],
        "x-section": "Policies",
        "requestBody": {
          "$ref": "#/components/requestBodies/policiesUpdatePolicyRequest"
        }
      }
    },
    "/v1/policies:batchGet": {
      "get": {
        "summary": "Retrieves one or more policies based on their ID.",
        "operationId": "BatchGetPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policiesBatchGetPoliciesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "List of Policy IDs to get. Required.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The level of detail to include in the returned policy. Required.",
            "name": "view",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "POLICY_VIEW_BASIC": "Returned policies include only ID, description, is_active flag and creation timestamp.",
              "POLICY_VIEW_INCLUDE_ACTIONS": "Returned policies include everything from the basic view plus actions."
            },
            "schema": {
              "type": "string",
              "enum": [
                "POLICY_VIEW_BASIC",
                "POLICY_VIEW_INCLUDE_ACTIONS"
              ],
              "default": "POLICY_VIEW_BASIC"
            }
          }
        ],
        "tags": [
          "WorkflowsAPIPolicies"
        ],
        "x-section": "Policies"
      }
    },
    "/v1/policies:bulkEvaluate": {
      "post": {
        "summary": "Evaluates a batch of policy lists paired with access control data, deciding whether a specified action is allowed for each pairing.",
        "operationId": "BulkEvaluatePolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policiesBulkEvaluatePoliciesResponse"
                }
              }
            }
          }
        },
        "tags": [
          "WorkflowsAPIPolicies"
        ],
        "x-section": "Policies",
        "x-release-info": {
          "releaseVersion": {
            "major": 1,
            "minor": 5
          },
          "changeType": "ADD_METHOD"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/policiesBulkEvaluatePoliciesRequest"
        }
      }
    },
    "/v1/policies:evaluate": {
      "post": {
        "summary": "Evaluates policies with given access control data and determines whether a specified action is allowed.",
        "operationId": "EvaluatePolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/policiesEvaluatePoliciesResponse"
                }
              }
            }
          }
        },
        "tags": [
          "WorkflowsAPIPolicies"
        ],
        "x-section": "Policies",
        "requestBody": {
          "$ref": "#/components/requestBodies/policiesEvaluatePoliciesRequest"
        }
      }
    },
    "/v1/task/{id}": {
      "get": {
        "summary": "Retrieves a Task based on its ID.",
        "operationId": "GetTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tasksTask"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Task that is to be retrieved.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "Specifies the details of the user performing this call. Used to enforce access control on the resource."
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          },
          {
            "description": "The fields to include in the returned Task.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_UI_PANELS",
                  "INCLUDE_FIELD_UI_ACTIONS",
                  "INCLUDE_FIELD_PROVIDED_UI_INPUT"
                ]
              }
            }
          }
        ],
        "tags": [
          "WorkflowsAPITasks"
        ],
        "x-section": "Tasks"
      }
    },
    "/v1/task:batchGet": {
      "get": {
        "summary": "Retrieves one or more Tasks based on their IDs.",
        "operationId": "BatchGetTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tasksBatchGetTasksResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "Specifies the details of the user performing this call. Used to enforce access control on the resource."
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          },
          {
            "description": "A list of the IDs of the Tasks that are to be retrieved.\n\nRequired.\nMin length: 1 characters.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The fields to include in the returned Task.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_UI_PANELS",
                  "INCLUDE_FIELD_UI_ACTIONS",
                  "INCLUDE_FIELD_PROVIDED_UI_INPUT"
                ]
              }
            }
          }
        ],
        "tags": [
          "WorkflowsAPITasks"
        ],
        "x-section": "Tasks"
      }
    },
    "/v1/taskThread/{id}": {
      "get": {
        "summary": "Retrieves a Task Thread based on its ID.",
        "operationId": "GetTaskThread",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tasksTaskThread"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of Task Thread that is to be retrieved.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "Specifies the details of the user performing this call. Used to enforce access control on the resource."
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          },
          {
            "description": "The fields to include when retrieving the Task Threads.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_UI_PANELS"
                ]
              }
            }
          }
        ],
        "tags": [
          "WorkflowsAPITasks"
        ],
        "x-section": "Tasks"
      }
    },
    "/v1/taskThread/{task_thread_id}/history": {
      "get": {
        "summary": "Lists all the history entries for a specified Task Thread.",
        "operationId": "ListTaskThreadHistory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tasksListTaskThreadHistoryResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Task Thread the history entries are to be retrieved from.",
            "name": "task_thread_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "Specifies the details of the user performing this call. Used to enforce access control on the resource."
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          },
          {
            "description": "Options for ordering the list of results returned.",
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ORDER_BY_CREATE_TIMESTAMP_DESC",
                  "ORDER_BY_CREATE_TIMESTAMP_ASC"
                ]
              }
            }
          },
          {
            "description": "The number of Task Thread history entries that are to be retrieved.\n\nRequired.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from.\n",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkflowsAPITasks"
        ],
        "x-section": "Tasks"
      }
    },
    "/v1/taskThreads": {
      "get": {
        "summary": "Lists all the Task Threads in the system subject to filters and pagination.",
        "operationId": "ListTaskThreads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tasksListTaskThreadsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "Specifies the details of the user performing this call. Used to enforce access control on the resource."
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          },
          {
            "description": "Options for ordering the list of Task Threads returned.",
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ORDER_BY_CREATE_TIMESTAMP_DESC",
                  "ORDER_BY_CREATE_TIMESTAMP_ASC",
                  "ORDER_BY_PRIORITY_ASC",
                  "ORDER_BY_PRIORITY_DESC",
                  "ORDER_BY_LAST_UPDATE_TIMESTAMP_ASC",
                  "ORDER_BY_LAST_UPDATE_TIMESTAMP_DESC"
                ]
              }
            }
          },
          {
            "description": "A list of the statuses of the Task Threads that are to be retrieved.",
            "name": "statuses",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "TASK_THREAD_STATUS_NO_INPUT_REQUIRED",
                  "TASK_THREAD_STATUS_INPUT_REQUIRED"
                ]
              }
            }
          },
          {
            "description": "A list of the role IDs that are intended to work on the Task Threads that are to be retrieved.",
            "name": "intended_for_role_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "A list of the assigned employee IDs of the Task Threads that are to be retrieved.",
            "name": "assigned_employee_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "A list of the tags associated with the Task Threads that are to be retrieved.",
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The number of Task Threads that are to be retrieved.\n\nRequired.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from.\n",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkflowsAPITasks"
        ],
        "x-section": "Tasks"
      },
      "post": {
        "summary": "Creates a Task Thread.",
        "operationId": "CreateTaskThread",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tasksTaskThread"
                }
              }
            }
          }
        },
        "tags": [
          "WorkflowsAPITasks"
        ],
        "x-section": "Tasks",
        "requestBody": {
          "$ref": "#/components/requestBodies/tasksCreateTaskThreadRequest"
        }
      }
    },
    "/v1/taskThreads/{task_thread.id}": {
      "put": {
        "summary": "Updates a Task Thread.",
        "operationId": "UpdateTaskThread",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tasksTaskThread"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The unique identifier for the Task Thread.",
            "name": "task_thread.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkflowsAPITasks"
        ],
        "x-section": "Tasks",
        "requestBody": {
          "$ref": "#/components/requestBodies/tasksUpdateTaskThreadRequest"
        }
      }
    },
    "/v1/taskThreads:batchGet": {
      "get": {
        "summary": "Retrieves one or more Task Threads based on their IDs.",
        "operationId": "BatchGetTaskThreads",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tasksBatchGetTaskThreadsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "Specifies the details of the user performing this call. Used to enforce access control on the resource."
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          },
          {
            "description": "A list of the IDs of the Task Threads that are to be retrieved.\n\nRequired.\nMin length: 1 characters.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The fields to include when retrieving Task Threads.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_UI_PANELS"
                ]
              }
            }
          }
        ],
        "tags": [
          "WorkflowsAPITasks"
        ],
        "x-section": "Tasks"
      }
    },
    "/v1/tasks": {
      "get": {
        "summary": "Lists all the Tasks for a specified Task Thread. <br><br>n.b. Field `fields_to_include` will be available from Vault 2.8, but only take effect from Vault 4.0. This will be required to retrieve `ui_panels`, `ui_actions` and `provided_ui_input`. Up until Vault 4.0, these fields will always be returned. <br> It is advised that API calls are updated to correctly set `fields_to_include` with the relevant sub-fields before the release of Vault 4.0.",
        "operationId": "ListTasks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tasksListTasksResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "Specifies the details of the user performing this call. Used to enforce access control on the resource."
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          },
          {
            "description": "Options for ordering the list of results returned.",
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ORDER_BY_CREATE_TIMESTAMP_DESC",
                  "ORDER_BY_CREATE_TIMESTAMP_ASC"
                ]
              }
            }
          },
          {
            "description": "The ID of the Task Thread that Tasks are to be retrieved from.",
            "name": "task_thread_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Workflow instance that created the requested Tasks.",
            "name": "created_by_workflow_instance_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of Task Threads that are to be retrieved.\n\nRequired.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from.\n",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The fields to include in the returned Tasks. Takes effect from version 4.0.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 4
              },
              "changeType": "ADD_FIELD",
              "description": "Adds the ability to optionally include fields"
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_UI_PANELS",
                  "INCLUDE_FIELD_UI_ACTIONS",
                  "INCLUDE_FIELD_PROVIDED_UI_INPUT"
                ]
              }
            }
          }
        ],
        "tags": [
          "WorkflowsAPITasks"
        ],
        "x-section": "Tasks"
      },
      "post": {
        "summary": "Creates a Task.",
        "operationId": "CreateTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tasksTask"
                }
              }
            }
          }
        },
        "tags": [
          "WorkflowsAPITasks"
        ],
        "x-section": "Tasks",
        "requestBody": {
          "$ref": "#/components/requestBodies/tasksCreateTaskRequest"
        }
      }
    },
    "/v1/tasks/{task.id}": {
      "put": {
        "summary": "Updates a Task.",
        "operationId": "UpdateTask",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tasksTask"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The unique identifier of the specified Task.",
            "name": "task.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkflowsAPITasks"
        ],
        "x-section": "Tasks",
        "requestBody": {
          "$ref": "#/components/requestBodies/tasksUpdateTaskRequest"
        }
      }
    },
    "/v1/ticket-tags": {
      "get": {
        "summary": "Lists all of the available tags that can be assigned to tickets.",
        "operationId": "ListTicketTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ticketsListTicketTagsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of ticket tags to be retrieved. Required.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page to retrieve the results from. If empty, the first page of results will be returned. Optional.\n",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkflowsAPITickets"
        ],
        "x-section": "Tickets"
      }
    },
    "/v1/ticket-updates": {
      "get": {
        "summary": "Lists ticket updates.",
        "operationId": "ListTicketUpdates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ticketsListTicketUpdatesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The unique identifier for the ticket. Required.\n\nRequired.",
            "name": "ticket_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of ticket updates to be retrieved. Required.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page to retrieve the results from. If empty, the first page of results will be returned. Optional.\n",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Field to specify sorting.",
            "name": "order_by_direction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ORDER_BY_DESC",
                "ORDER_BY_ASC"
              ],
              "default": "ORDER_BY_DESC"
            }
          }
        ],
        "tags": [
          "WorkflowsAPITickets"
        ],
        "x-section": "Tickets"
      }
    },
    "/v1/tickets": {
      "get": {
        "summary": "Lists all of the tickets in the system subject to filters and pagination. By default, this only returns tickets assigned to roles which the caller is also assigned to.",
        "operationId": "ListTickets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ticketsListTicketsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Ordering direction of results by `create_timestamp`. Optional; default descending.",
            "name": "order_by_direction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ORDER_BY_DESC",
                "ORDER_BY_ASC"
              ],
              "default": "ORDER_BY_DESC"
            }
          },
          {
            "description": "Allows filter based on author ID. Optional.\n\nMin length: 1 characters.\nMax length: 50 characters.",
            "name": "author_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The IDs of employees to return assigned tickets. Optional.\n\nMin length: 1 characters.\nMax length: 50 characters.",
            "name": "assignee_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The tags to filter tickets by. Optional.\n\nMin length: 1 characters.",
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The IDs of the Workflow instances the tickets were created on. Optional.\n\nMin length: 10 characters.\nMax length: 300 characters.",
            "name": "workflow_instance_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Statuses that returned tickets may be in. Optional.",
            "name": "include_statuses",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "TICKET_STATUS_UNKNOWN",
                  "TICKET_STATUS_OPEN",
                  "TICKET_STATUS_CLOSED",
                  "TICKET_STATUS_IN_PROGRESS",
                  "TICKET_STATUS_CANCELLED"
                ]
              }
            }
          },
          {
            "description": "Allows filter based on customer ID. Optional.\n\nMin length: 1 characters.",
            "name": "customer_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The number of results to be retrieved. Required; non-zero.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page to retrieve the results from. If empty, the first page of results will be returned. Optional.\n",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "Specifies the details of the user performing this call. Used to enforce access control on the resource."
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          },
          {
            "description": "The IDs of the Roles the returned tickets are assigned to. Optional.",
            "name": "role_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "WorkflowsAPITickets"
        ],
        "x-section": "Tickets"
      },
      "post": {
        "summary": "Creates a ticket.",
        "operationId": "CreateTicket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ticketsTicket"
                }
              }
            }
          }
        },
        "tags": [
          "WorkflowsAPITickets"
        ],
        "x-section": "Tickets",
        "requestBody": {
          "$ref": "#/components/requestBodies/ticketsCreateTicketRequest"
        }
      }
    },
    "/v1/tickets/{ticket.id}": {
      "put": {
        "summary": "Updates a ticket.",
        "operationId": "UpdateTicket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ticketsTicket"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The unique identifier for this ticket.",
            "name": "ticket.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkflowsAPITickets"
        ],
        "x-section": "Tickets",
        "requestBody": {
          "$ref": "#/components/requestBodies/ticketsUpdateTicketRequest"
        }
      }
    },
    "/v1/tickets:batchGet": {
      "get": {
        "summary": "Retrieves one or more tickets based on their ID.",
        "operationId": "BatchGetTickets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ticketsBatchGetTicketsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of IDs of tickets to be retrieved. Required.\n\nRequired.\nMin length: 1 characters.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "Specifies the details of the user performing this call. Used to enforce access control on the resource."
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "WorkflowsAPITickets"
        ],
        "x-section": "Tickets"
      }
    },
    "/v1/workflow-definition-versions": {
      "get": {
        "summary": "Retrieves a Workflow Definition Version.",
        "operationId": "ListWorkflowDefinitionVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsListWorkflowDefinitionVersionsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "If not empty then only the Workflow Definition Versions with the given Workflow Definition ID will be returned. Optional.",
            "name": "workflow_definition_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates whether to include deleted Workflow Definition Versions.",
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Only Workflow Definition Versions that feature at least one of the given tags will be returned. Optional.",
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Indicates whether to only return Workflow Definition Versions that are the default (typically most-recent) version.",
            "name": "default_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The number of results to be listed.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page to retrieve the results from. If empty, the first page of results will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates whether to exclude disabled Workflow Definition Versions.",
            "name": "exclude_disabled",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD"
            },
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "A list of the 'omitted by default' fields that will be returned in the response.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Replaces the Workflow Definition Version view field"
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_SPECIFICATION",
                  "INCLUDE_FIELD_STATES",
                  "INCLUDE_FIELD_TRANSITIONS",
                  "INCLUDE_FIELD_END_STATES"
                ]
              }
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Replaces the order_by_direction field"
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ORDER_BY_CREATE_TIMESTAMP_ASC",
                  "ORDER_BY_CREATE_TIMESTAMP_DESC",
                  "ORDER_BY_NAME_ASC",
                  "ORDER_BY_NAME_DESC"
                ]
              }
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/workflowsListWorkflowDefinitionVersionsRequestNamePatternMatch",
              "description": "Pattern matching on the Workflow Definition name.",
              "x-release-info": {
                "releaseVersion": {
                  "major": 1,
                  "minor": 8
                },
                "changeType": "ADD_FIELD",
                "description": "Pattern matching on the Workflow Definition name."
              }
            },
            "name": "name_pattern_match",
            "in": "query",
            "required": false
          },
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "The access control context for the employee on whose behalf the call is to be made.",
              "x-release-info": {
                "releaseVersion": {
                  "major": 1,
                  "minor": 10
                },
                "changeType": "ADD_FIELD"
              }
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows"
      },
      "post": {
        "summary": "Creates a new Workflow Definition Version. If the `workflow_definition_id` is for a Workflow Definition that already exists, then the created Workflow Definition Version will be a new version of that Workflow Definition, otherwise a new Workflow Definition will be created. If a new Workflow Definition is created then its default version will be set as the created Workflow Definition Version.",
        "operationId": "CreateWorkflowDefinitionVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsWorkflowDefinitionVersion"
                }
              }
            }
          }
        },
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "requestBody": {
          "$ref": "#/components/requestBodies/workflowsCreateWorkflowDefinitionVersionRequest"
        }
      }
    },
    "/v1/workflow-definition-versions/{id}": {
      "delete": {
        "summary": "Soft deletes a Workflow Definition Version. The Workflow Definition Version will remain in the database and can be retrieved; however, Workflows can no longer be instantiated against this version because it is marked as deleted",
        "operationId": "DeleteWorkflowDefinitionVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {}
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Workflow Definition Version to delete.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows"
      }
    },
    "/v1/workflow-definition-versions:batchGet": {
      "get": {
        "summary": "Retrieves multiple Workflow Definition Versions.",
        "operationId": "BatchGetWorkflowDefinitionVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsBatchGetWorkflowDefinitionVersionsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of IDs of Workflow Definition Versions to be retrieved. Required; maximum of 100 IDs per request.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "A list of the 'omitted by default' fields that will be returned in the response.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Replaces the Workflow Definition Version view field"
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_SPECIFICATION",
                  "INCLUDE_FIELD_STATES",
                  "INCLUDE_FIELD_TRANSITIONS",
                  "INCLUDE_FIELD_END_STATES"
                ]
              }
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "The access control context for the employee on whose behalf the call is to be made.",
              "x-release-info": {
                "releaseVersion": {
                  "major": 1,
                  "minor": 10
                },
                "changeType": "ADD_FIELD"
              }
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows"
      }
    },
    "/v1/workflow-definition-versions:validate": {
      "post": {
        "summary": "Validates the specification of a Workflow Definition Version.",
        "operationId": "ValidateWorkflowDefinitionVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsValidateWorkflowDefinitionVersionResponse"
                }
              }
            }
          }
        },
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "x-release-info": {
          "releaseVersion": {
            "major": 1,
            "minor": 9
          },
          "changeType": "ADD_METHOD",
          "description": "This endpoint validates the specification of a Workflow Definition Version."
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/workflowsValidateWorkflowDefinitionVersionRequest"
        }
      }
    },
    "/v1/workflow-definitions": {
      "get": {
        "summary": "Retrieves a set of Workflow Definitions matching the criteria in the request. Each Workflow Definition will reference its default Workflow Definition Version, which is what can be instantiated via `CreateWorkflowInstance`.",
        "operationId": "ListWorkflowDefinitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsListWorkflowDefinitionsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The direction to order the results in. Default sort is by creation date of the default version.",
            "name": "order_by_direction",
            "in": "query",
            "required": false,
            "x-release-info": {
              "noticeVersion": {
                "major": 1,
                "minor": 8
              },
              "releaseVersion": {
                "major": 4
              },
              "changeType": "REMOVE_FIELD",
              "description": "The order_by_direction field is deprecated and will be replaced by a new order_by pattern where you can order_by on multiple fields"
            },
            "schema": {
              "type": "string",
              "enum": [
                "ORDER_BY_DESC",
                "ORDER_BY_ASC"
              ],
              "default": "ORDER_BY_DESC"
            }
          },
          {
            "description": "The number of results to be listed.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page to retrieve the results from. If empty, the first page of results will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates whether to exclude disabled Workflow Definitions.",
            "name": "exclude_disabled",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD"
            },
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Replaces the order_by_direction field"
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ORDER_BY_UPDATE_TIMESTAMP_ASC",
                  "ORDER_BY_UPDATE_TIMESTAMP_DESC",
                  "ORDER_BY_NAME_ASC",
                  "ORDER_BY_NAME_DESC"
                ]
              }
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/workflowsListWorkflowDefinitionsRequestNamePatternMatch",
              "description": "Pattern matching on the Workflow Definition name.",
              "x-release-info": {
                "releaseVersion": {
                  "major": 1,
                  "minor": 8
                },
                "changeType": "ADD_FIELD",
                "description": "Pattern matching on the Workflow Definition name."
              }
            },
            "name": "name_pattern_match",
            "in": "query",
            "required": false
          },
          {
            "description": "Only Workflow Definitions that have at least one of the given tags will be returned. Optional.",
            "name": "tags",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD"
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "The access control context for the employee on whose behalf the call is to be made.",
              "x-release-info": {
                "releaseVersion": {
                  "major": 1,
                  "minor": 10
                },
                "changeType": "ADD_FIELD"
              }
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows"
      }
    },
    "/v1/workflow-definitions/{workflow_definition.id}": {
      "put": {
        "summary": "Updates an existing Workflow Definition. Currently only the default_workflow_definition_version_id can be updated.",
        "operationId": "UpdateWorkflowDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsWorkflowDefinition"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The unique ID of this Workflow Definition.",
            "name": "workflow_definition.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "requestBody": {
          "$ref": "#/components/requestBodies/workflowsUpdateWorkflowDefinitionRequest"
        }
      }
    },
    "/v1/workflow-definitions:batchGet": {
      "get": {
        "summary": "Retrieves a specific set of Workflow Definitions.",
        "operationId": "BatchGetWorkflowDefinitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsBatchGetWorkflowDefinitionsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of IDs of Workflow Definitions to be retrieved. Required; maximum of 100 IDs per request.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "The access control context for the employee on whose behalf the call is to be made.",
              "x-release-info": {
                "releaseVersion": {
                  "major": 1,
                  "minor": 10
                },
                "changeType": "ADD_FIELD"
              }
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows"
      }
    },
    "/v1/workflow-instance-event/{id}": {
      "get": {
        "summary": "Retrieves a single Workflow instance event.",
        "operationId": "GetWorkflowInstanceEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsWorkflowInstanceEvent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Workflow instance Event.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of the 'omitted by default' fields that will be returned in the response.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_CONTEXT"
                ]
              }
            }
          }
        ],
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "x-release-info": {
          "releaseVersion": {
            "major": 1,
            "minor": 9
          },
          "changeType": "ADD_METHOD",
          "description": "This endpoint retrieves a single Workflow instance event"
        }
      }
    },
    "/v1/workflow-instance-events": {
      "get": {
        "summary": "Lists Workflow instance events.",
        "operationId": "ListWorkflowInstanceEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsListWorkflowInstanceEventsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Workflow instance ID that associated Workflow instance events will be included for.\n\nRequired.",
            "name": "workflow_instance_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of the 'omitted by default' fields that will be returned in the response.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_CONTEXT"
                ]
              }
            }
          },
          {
            "description": "The ordering direction of the results.",
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ORDER_BY_PROCESS_TIMESTAMP_ASC",
                  "ORDER_BY_PROCESS_TIMESTAMP_DESC",
                  "ORDER_BY_NAME_ASC",
                  "ORDER_BY_NAME_DESC"
                ]
              }
            }
          },
          {
            "description": "The number of results to be listed.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page to retrieve the results from. If empty, the first page of results will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "x-release-info": {
          "releaseVersion": {
            "major": 1,
            "minor": 9
          },
          "changeType": "ADD_METHOD",
          "description": "This endpoint lists Workflow Instance Events"
        }
      }
    },
    "/v1/workflow-instance-events:asyncCreate": {
      "post": {
        "summary": "Posts an event to a particular Workflow Instance. The operation will complete when the message has been processed and added to the history of the Workflow Instance.",
        "operationId": "CreateWorkflowInstanceEventAsync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/async_operationsAsyncOperation"
                }
              }
            }
          }
        },
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "x-release-info": {
          "noticeVersion": {
            "major": 2,
            "minor": 8
          },
          "releaseVersion": {
            "major": 4
          },
          "changeType": "REMOVE_METHOD",
          "description": "The CreateWorkflowInstanceEventAsync endpoint is being deprecated."
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/workflowsCreateWorkflowInstanceEventRequest"
        }
      }
    },
    "/v1/workflow-instance-events:batchGet": {
      "get": {
        "summary": "Retrieves multiple Workflow instance events.",
        "operationId": "BatchGetWorkflowInstanceEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsBatchGetWorkflowInstanceEventsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The IDs of the Workflow instance events.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "A list of the 'omitted by default' fields that will be returned in the response.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_CONTEXT"
                ]
              }
            }
          }
        ],
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "x-release-info": {
          "releaseVersion": {
            "major": 1,
            "minor": 9
          },
          "changeType": "ADD_METHOD",
          "description": "This endpoint retrieves Workflow Instance Events"
        }
      }
    },
    "/v1/workflow-instance-events:retryPrevious": {
      "post": {
        "summary": "Retries the previously-fired event for a given Workflow instance.",
        "operationId": "RetryPreviousWorkflowInstanceEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsWorkflowInstanceEventResponse"
                }
              }
            }
          }
        },
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 8
          },
          "changeType": "ADD_METHOD",
          "description": "This endpoint retries the previously-fired event for a given Workflow instance"
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/workflowsRetryPreviousWorkflowInstanceEventRequest"
        }
      }
    },
    "/v1/workflow-instance-events:retryWorkflowInTechnicalError": {
      "post": {
        "summary": "Retries the most recently submitted event which is not an error/retry event, for a given Workflow instance in technical error.",
        "operationId": "RetryWorkflowInTechnicalError",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsWorkflowInstanceEventResponse"
                }
              }
            }
          }
        },
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "x-release-info": {
          "releaseVersion": {
            "major": 3
          },
          "changeType": "ADD_METHOD",
          "description": "Retries the most recently submitted event which is not an error/retry event, for a given Workflow instance in technical error."
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/workflowsRetryWorkflowInTechnicalErrorRequest"
        }
      }
    },
    "/v1/workflow-instance-states": {
      "get": {
        "summary": "Lists Workflow instance states.",
        "operationId": "ListWorkflowInstanceStates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsListWorkflowInstanceStatesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Workflow instance ID that the listed Workflow instance states belong to.",
            "name": "workflow_instance_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "The employee on whose behalf the call is made."
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          },
          {
            "description": "The ordering direction of the results.",
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ORDER_BY_TIMESTAMP_ASC",
                  "ORDER_BY_TIMESTAMP_DESC"
                ]
              }
            }
          },
          {
            "description": "The number of results to be listed.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page to retrieve the results from. If empty, the first page of results will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "x-release-info": {
          "releaseVersion": {
            "major": 1,
            "minor": 9
          },
          "changeType": "ADD_METHOD",
          "description": "This endpoint retrieves Workflow Instance States"
        }
      }
    },
    "/v1/workflow-instance-states/{id}": {
      "get": {
        "summary": "Retrieves a Workflow instance state.",
        "operationId": "GetWorkflowInstanceState",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsWorkflowInstanceState"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Workflow instance state.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "x-release-info": {
          "releaseVersion": {
            "major": 1,
            "minor": 9
          },
          "changeType": "ADD_METHOD",
          "description": "This endpoint retrieves Workflow Instance States"
        }
      }
    },
    "/v1/workflow-instance-states:batchGet": {
      "get": {
        "summary": "Retrieves multiple Workflow instance states.",
        "operationId": "BatchGetWorkflowInstanceStates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsBatchGetWorkflowInstanceStatesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The IDs of the Workflow instance states.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "x-release-info": {
          "releaseVersion": {
            "major": 1,
            "minor": 9
          },
          "changeType": "ADD_METHOD",
          "description": "This endpoint retrieves Workflow Instance States"
        }
      }
    },
    "/v1/workflow-instances": {
      "get": {
        "summary": "Lists Workflow Instances in Vault.",
        "operationId": "ListWorkflowInstances",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsListWorkflowInstancesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "The employee on whose behalf the call is to be made."
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          },
          {
            "description": "The Workflow Definition ID that associated Workflow instances will be included for. Optional.",
            "name": "workflow_definition_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The Workflow Definition Version ID that associated Workflow instances will be included for. Should not be used if the `workflow_definition_id` has been set. Optional.",
            "name": "workflow_definition_version_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The customer IDs that associated Workflow instances will be included for. Optional.",
            "name": "customer_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The statuses that included Workflow instances may have. Optional.",
            "name": "include_statuses",
            "in": "query",
            "required": false,
            "x-enum-value-release-info": {
              "WORKFLOW_INSTANCE_STATUS_SUSPENDED": {
                "releaseVersion": {
                  "major": 1,
                  "minor": 9
                },
                "changeType": "ADD_ENUM_VALUE"
              }
            },
            "x-enum-value-descriptions": {
              "WORKFLOW_INSTANCE_STATUS_CLOSED": "The Workflow instance is closed and is no longer running.",
              "WORKFLOW_INSTANCE_STATUS_INSTANTIATED": "The Workflow instance is instantiated and running.",
              "WORKFLOW_INSTANCE_STATUS_SUSPENDED": "The Workflow instance is suspended and will not run until the corresponding Workflow Definition is enabled.",
              "WORKFLOW_INSTANCE_STATUS_UNKNOWN": "Unknown Workflow instance status."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "WORKFLOW_INSTANCE_STATUS_UNKNOWN",
                  "WORKFLOW_INSTANCE_STATUS_INSTANTIATED",
                  "WORKFLOW_INSTANCE_STATUS_CLOSED",
                  "WORKFLOW_INSTANCE_STATUS_SUSPENDED"
                ]
              }
            }
          },
          {
            "description": "The parent Workflow instance IDs that associated Workflow instances will be included for. Optional.",
            "name": "parent_ids",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD",
              "description": "Allows Workflow Instances to be filtered by parent IDs"
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The ordering direction of results by create_timestamp. Optional; default descending.",
            "name": "order_by_direction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ORDER_BY_DESC",
                "ORDER_BY_ASC"
              ],
              "default": "ORDER_BY_DESC"
            }
          },
          {
            "description": "The number of results to be listed.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page to retrieve the results from. If empty, the first page of results will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of the 'omitted by default' fields that will be returned in the response.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Replaces the Workflow Instance view field"
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_ADDITIONAL_DETAILS",
                  "INCLUDE_FIELD_GLOBAL_UI_DESCRIPTORS",
                  "INCLUDE_FIELD_CURRENT_STATE_UI_DESCRIPTORS"
                ]
              }
            }
          }
        ],
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows"
      },
      "post": {
        "summary": "Creates an instance of a Workflow Definition Version.",
        "operationId": "CreateWorkflowInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsWorkflowInstance"
                }
              }
            }
          }
        },
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "requestBody": {
          "$ref": "#/components/requestBodies/workflowsCreateWorkflowInstanceRequest"
        }
      }
    },
    "/v1/workflow-instances:batchGet": {
      "get": {
        "summary": "Retrieves multiple Workflow Instances using their IDs.",
        "operationId": "BatchGetWorkflowInstances",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsBatchGetWorkflowInstancesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/commonAccessControlContext",
              "description": "Specifies the employee the call is made on behalf of."
            },
            "name": "access_control_context",
            "in": "query",
            "required": false
          },
          {
            "description": "A list of IDs of Workflow instances to be retrieved. Required; maximum number of IDs per request 100.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "A list of the 'omitted by default' fields that will be returned in the response.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Replaces the Workflow instance view field"
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_ADDITIONAL_DETAILS",
                  "INCLUDE_FIELD_GLOBAL_UI_DESCRIPTORS",
                  "INCLUDE_FIELD_CURRENT_STATE_UI_DESCRIPTORS"
                ]
              }
            }
          }
        ],
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows"
      }
    },
    "/v1/workflow-instances:simulate": {
      "post": {
        "summary": "Simulates sending events to a Workflow Instance and receives a list of side effects.",
        "operationId": "SimulateWorkflowInstance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsSimulateWorkflowInstanceResponse"
                }
              }
            }
          }
        },
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "x-release-info": {
          "releaseVersion": {
            "major": 1,
            "minor": 7
          },
          "changeType": "ADD_METHOD",
          "description": "This endpoint simulates sending events to a Workflow Instance."
        },
        "requestBody": {
          "$ref": "#/components/requestBodies/workflowsSimulateWorkflowInstanceRequest"
        }
      }
    },
    "/v1/workflow-instantiation-schedules": {
      "post": {
        "summary": "Creates a Workflow Instantiation Schedule.",
        "operationId": "CreateWorkflowInstantiationSchedule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflowsWorkflowInstantiationSchedule"
                }
              }
            }
          }
        },
        "tags": [
          "WorkflowsAPIWorkflows"
        ],
        "x-section": "Workflows",
        "requestBody": {
          "$ref": "#/components/requestBodies/workflowsCreateWorkflowInstantiationScheduleRequest"
        }
      }
    }
  },
  "x-sections": {
    "Policies": {},
    "Tasks": {},
    "Tickets": {},
    "Workflows": {}
  },
  "openapi": "3.0.1",
  "components": {
    "schemas": {
      "AccessControlAttributeStringList": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ListPoliciesRequestOrderBy": {
        "type": "string",
        "enum": [
          "ORDER_BY_CREATION_TIME_DESC",
          "ORDER_BY_CREATION_TIME_ASC",
          "ORDER_BY_ID_DESC",
          "ORDER_BY_ID_ASC"
        ],
        "default": "ORDER_BY_CREATION_TIME_DESC",
        "title": "Ordering",
        "x-enum-value-descriptions": {
          "ORDER_BY_CREATION_TIME_DESC": "Default sort field."
        }
      },
      "commonAccessControlAttribute": {
        "type": "object",
        "properties": {
          "string_list": {
            "$ref": "#/components/schemas/AccessControlAttributeStringList",
            "required": true
          }
        },
        "description": "Lists details about either the resource accessed or the caller trying to access the resource."
      },
      "policiesAction": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/policiesPolicyActionType",
            "description": "The type of action to be authorised.",
            "x-release-info": {
              "noticeVersion": {
                "major": 1,
                "minor": 6
              },
              "releaseVersion": {
                "major": 5
              },
              "changeType": "REMOVE_FIELD",
              "description": "Deprecated in favour of action_type."
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The set of permissions required to execute the action. Required."
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/policiesRule"
            },
            "description": "Rules define additional constraints for the action. Optional."
          },
          "action_type": {
            "type": "string",
            "description": "The type of action to be authorised. Optional.\n",
            "x-release-info": {
              "noticeVersion": {
                "major": 1,
                "minor": 6
              },
              "releaseVersion": {
                "major": 2
              },
              "changeType": "MAKE_FIELD_REQUIRED",
              "description": "Will become mandatory when type is removed."
            }
          }
        }
      },
      "policiesBatchGetPoliciesResponse": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/policiesPolicy"
            },
            "title": "map<policy id -> Policy>"
          }
        }
      },
      "policiesBulkEvaluatePoliciesRequest": {
        "type": "object",
        "properties": {
          "evaluation_entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/policiesEvaluationEntity"
            },
            "description": "Container messages specifying which lists of policies to evaluate for which actions and with which access control data."
          }
        }
      },
      "policiesBulkEvaluatePoliciesResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/policiesEvaluationResult"
            },
            "description": "A map of `entity_id` to the evaluation result."
          }
        }
      },
      "policiesCreatePolicyRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 512 characters."
          },
          "policy": {
            "$ref": "#/components/schemas/policiesPolicy",
            "description": "The policy to create. Required."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "policiesEvaluatePoliciesRequest": {
        "type": "object",
        "properties": {
          "action_type": {
            "type": "string",
            "description": "The type of action to be authorised. Required.\n\nRequired."
          },
          "policy_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of policy IDs used to evaluate and authorise the action. Required."
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonAccessControlAttribute"
            },
            "description": "The attributes which define details about both the accessed resource and the caller. Required."
          }
        },
        "required": [
          "action_type"
        ]
      },
      "policiesEvaluatePoliciesResponse": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/policiesEvaluationResult",
            "description": "The result of the evaluation."
          }
        }
      },
      "policiesEvaluationEntity": {
        "type": "object",
        "properties": {
          "entity_id": {
            "type": "string",
            "description": "The ID of the entity that will be used in the map in the response. Required."
          },
          "policy_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of policy IDs used to evaluate and authorise the action. Required."
          },
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonAccessControlAttribute"
            },
            "description": "The attributes which define details about the accessed resource as well as the caller. Required."
          },
          "action_type": {
            "type": "string",
            "title": "The type of the action"
          }
        }
      },
      "policiesEvaluationResult": {
        "type": "string",
        "enum": [
          "DENY",
          "ALLOW"
        ],
        "default": "DENY"
      },
      "policiesListPoliciesResponse": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/policiesPolicy"
            },
            "title": "A list of policies for the current page"
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "policiesPolicy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of this Policy (scoped to an organisation ID)."
          },
          "description": {
            "type": "string",
            "description": "A brief description of the policy."
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/policiesAction"
            },
            "description": "A list of actions this policy controls."
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether this Policy is active or inactive."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When this policy was last created/updated. Output only.",
            "x-output-only": true
          }
        }
      },
      "policiesPolicyActionType": {
        "type": "string",
        "enum": [
          "POLICY_ACTION_TYPE_UNKNOWN",
          "POLICY_ACTION_TYPE_READ",
          "POLICY_ACTION_TYPE_UPDATE",
          "POLICY_ACTION_TYPE_CREATE",
          "POLICY_ACTION_TYPE_DELETE"
        ],
        "default": "POLICY_ACTION_TYPE_UNKNOWN"
      },
      "policiesPolicyView": {
        "type": "string",
        "enum": [
          "POLICY_VIEW_BASIC",
          "POLICY_VIEW_INCLUDE_ACTIONS"
        ],
        "default": "POLICY_VIEW_BASIC",
        "description": "The view of the data to return. Optional; default POLICY_VIEW_BASIC.",
        "x-enum-value-descriptions": {
          "POLICY_VIEW_BASIC": "Returned policies include only ID, description, is_active flag and creation timestamp.",
          "POLICY_VIEW_INCLUDE_ACTIONS": "Returned policies include everything from the basic view plus actions."
        }
      },
      "policiesRule": {
        "type": "object",
        "properties": {
          "left_operand_attribute_key": {
            "type": "string",
            "description": "The attribute key on the left hand side of the comparison. The corresponding value will be taken from the access control context of the call.\n\nRequired.\nMin length: 1 characters.\nMax length: 512 characters."
          },
          "operator": {
            "$ref": "#/components/schemas/policiesRuleOperator",
            "description": "Operator defining how the attribute values are compared."
          },
          "right_operand_attribute_key": {
            "$ref": "#/components/schemas/right_operand_attribute_key",
            "required": true
          }
        },
        "description": "A rule defines an additional action constraint in the format `LEFT_OPERAND OPERATOR RIGHT_OPERAND`. An example to check that the author is not the caller would be `AUTHOR NOT EQUAL CALLER`.",
        "required": [
          "left_operand_attribute_key",
          "right_operand_attribute_key"
        ]
      },
      "policiesRuleOperator": {
        "type": "string",
        "enum": [
          "RULE_OPERATOR_UNKNOWN",
          "RULE_OPERATOR_NOT_EQUAL",
          "RULE_OPERATOR_NOT_IN"
        ],
        "default": "RULE_OPERATOR_UNKNOWN"
      },
      "policiesUpdatePolicyRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 512 characters."
          },
          "policy": {
            "$ref": "#/components/schemas/policiesPolicy",
            "description": "The policy to update. Required."
          },
          "update_mask": {
            "$ref": "#/components/schemas/protobufFieldMask",
            "description": "The fields of the policy to update. Supported: description, actions, is_active. Required."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "protobufFieldMask": {
        "type": "object",
        "properties": {
          "paths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The set of field mask paths."
          }
        },
        "description": "\"paths\": [\"f.a\", \"f.b.d\"]\n\nHere `f` represents a field in some root message, `a` and `b` fields in the message found in `f`, and `d` a field found in the message in `f.b`.\n\nFields are represented by their JSON field names.\n\n   \"paths\": [\"f.field1\", \"f.field_on_f.some_field_name\"]\n\nField masks are used to specify a subset of fields that should be, or have been, modified by an update operation.\n\nField masks are JSON encoding as a string array.",
        "title": "FieldMask represents a set of symbolic field paths, for example:"
      },
      "TaskThreadReferences": {
        "type": "object",
        "properties": {
          "references": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "A list of resource IDs referenced by the Task Thread."
      },
      "commonAccessControlContext": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "string"
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Specifies the data required for policy evaluation."
      },
      "formsFileInput": {
        "type": "object",
        "description": "An input that is a file."
      },
      "formsInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name or key of the input.",
            "x-output-only": true
          },
          "label": {
            "type": "string",
            "description": "Input label.",
            "x-output-only": true
          },
          "description": {
            "type": "string",
            "description": "Label description.",
            "x-output-only": true
          },
          "optional": {
            "type": "boolean",
            "description": "Whether the field is optional.",
            "x-output-only": true
          },
          "metadata": {
            "type": "string",
            "description": "JSON string containing information about the input for the view. Its content will be defined by each application. Some standard information is defined by Vault, including account and schedule.",
            "x-output-only": true
          },
          "string_input": {
            "$ref": "#/components/schemas/formsStringInput",
            "required": false
          },
          "number_input": {
            "$ref": "#/components/schemas/formsNumberInput",
            "required": false
          },
          "file_input": {
            "$ref": "#/components/schemas/formsFileInput",
            "required": false
          }
        },
        "description": "Input represents a generic form input and contains rendering and validation information."
      },
      "formsNumberInput": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value of the input. Optional. We use the type \"string\" even though this is a number. This is because JS doesn't handle big numbers (or floats) very well and can lose precision. Therefore it is safer to transmit any numbers as strings and have the front end code deal with it with specialised libraries.",
            "x-output-only": true
          },
          "default_value": {
            "type": "string",
            "description": "Default value of the input. Suggested value that may be used if value is blank. Optional.",
            "x-output-only": true
          },
          "min_value": {
            "type": "string",
            "description": "The minimum value for this number. Optional.",
            "x-output-only": true
          },
          "max_value": {
            "type": "string",
            "description": "The maximum value for this number. Optional.",
            "x-output-only": true
          },
          "precision": {
            "type": "string",
            "description": "Number of decimal places. Optional.",
            "x-output-only": true
          },
          "step": {
            "type": "string",
            "description": "Step by which the value can be incremented. Optional.",
            "x-output-only": true
          }
        },
        "description": "An input of type number."
      },
      "formsStringInput": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value of the input. Populated if input was previously filled out. Optional.",
            "x-output-only": true
          },
          "default_value": {
            "type": "string",
            "description": "Default value of the input. Suggested value that may be used if value is blank. Optional.",
            "x-output-only": true
          },
          "min_length": {
            "type": "string",
            "description": "Minimum length of the string. Optional.",
            "x-output-only": true
          },
          "max_length": {
            "type": "string",
            "description": "Maximum length of the string. Optional.",
            "x-output-only": true
          },
          "multiline": {
            "type": "boolean",
            "description": "Indicates if multiline strings are allowed as value. Optional.",
            "x-output-only": true
          },
          "regex": {
            "type": "string",
            "description": "A regex that the value is required to match. Optional.",
            "x-output-only": true
          }
        },
        "description": "An input of type string."
      },
      "tasksBatchGetTaskThreadsRequestIncludeField": {
        "type": "string",
        "enum": [
          "INCLUDE_FIELD_UI_PANELS"
        ],
        "default": "INCLUDE_FIELD_UI_PANELS"
      },
      "tasksBatchGetTaskThreadsResponse": {
        "type": "object",
        "properties": {
          "task_threads": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/tasksTaskThread"
            },
            "description": "A map of the Task Thread ID to the Task Thread."
          }
        }
      },
      "tasksBatchGetTasksRequestIncludeField": {
        "type": "string",
        "enum": [
          "INCLUDE_FIELD_UI_PANELS",
          "INCLUDE_FIELD_UI_ACTIONS",
          "INCLUDE_FIELD_PROVIDED_UI_INPUT"
        ],
        "default": "INCLUDE_FIELD_UI_PANELS",
        "description": "Defines which fields to include when retrieving Tasks."
      },
      "tasksBatchGetTasksResponse": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/tasksTask"
            },
            "title": "A map of the Task IDs to the Tasks to be retrieved"
          }
        }
      },
      "tasksCreateTaskRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent.\n\nRequired."
          },
          "task": {
            "$ref": "#/components/schemas/tasksTask",
            "description": "The Task to be created.\n\nRequired."
          },
          "access_control_context": {
            "$ref": "#/components/schemas/commonAccessControlContext",
            "description": "Specifies the details of the user performing this call. This is used to enforce access control on the resource.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 4
              },
              "changeType": "ADD_FIELD",
              "description": "Added accessControlContext for policy integration",
              "featureFlag": "WFLOW_191_ACCESS_CONTROL_FOR_TASK_THREADS"
            }
          }
        },
        "required": [
          "request_id",
          "task"
        ]
      },
      "tasksCreateTaskThreadRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent.\n\nRequired."
          },
          "task_thread": {
            "$ref": "#/components/schemas/tasksTaskThread",
            "description": "The Task Thread to be created.\n\nRequired."
          }
        },
        "required": [
          "request_id",
          "task_thread"
        ]
      },
      "tasksGetTaskRequestIncludeField": {
        "type": "string",
        "enum": [
          "INCLUDE_FIELD_UI_PANELS",
          "INCLUDE_FIELD_UI_ACTIONS",
          "INCLUDE_FIELD_PROVIDED_UI_INPUT"
        ],
        "default": "INCLUDE_FIELD_UI_PANELS",
        "description": "Defines which fields to include when retrieving Tasks."
      },
      "tasksGetTaskThreadRequestIncludeField": {
        "type": "string",
        "enum": [
          "INCLUDE_FIELD_UI_PANELS"
        ],
        "default": "INCLUDE_FIELD_UI_PANELS"
      },
      "tasksListTaskThreadHistoryRequestOrderBy": {
        "type": "string",
        "enum": [
          "ORDER_BY_CREATE_TIMESTAMP_DESC",
          "ORDER_BY_CREATE_TIMESTAMP_ASC"
        ],
        "default": "ORDER_BY_CREATE_TIMESTAMP_DESC",
        "description": "Defines options for ordering Task resources."
      },
      "tasksListTaskThreadHistoryResponse": {
        "type": "object",
        "properties": {
          "task_thread_history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tasksTaskThreadHistoryEntry"
            },
            "description": "The Task Thread history entries that are retrieved."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page of results. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page of results. If empty, this is the last page of results."
          }
        }
      },
      "tasksListTaskThreadsRequestOrderBy": {
        "type": "string",
        "enum": [
          "ORDER_BY_CREATE_TIMESTAMP_DESC",
          "ORDER_BY_CREATE_TIMESTAMP_ASC",
          "ORDER_BY_PRIORITY_ASC",
          "ORDER_BY_PRIORITY_DESC",
          "ORDER_BY_LAST_UPDATE_TIMESTAMP_ASC",
          "ORDER_BY_LAST_UPDATE_TIMESTAMP_DESC"
        ],
        "default": "ORDER_BY_CREATE_TIMESTAMP_DESC",
        "description": "Defines options for ordering Task Threads."
      },
      "tasksListTaskThreadsResponse": {
        "type": "object",
        "properties": {
          "task_threads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tasksTaskThread"
            },
            "description": "A list of the Task Threads that are to be returned."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page of results. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page of results. If empty, this is the last page of results."
          }
        }
      },
      "tasksListTasksRequestIncludeField": {
        "type": "string",
        "enum": [
          "INCLUDE_FIELD_UI_PANELS",
          "INCLUDE_FIELD_UI_ACTIONS",
          "INCLUDE_FIELD_PROVIDED_UI_INPUT"
        ],
        "default": "INCLUDE_FIELD_UI_PANELS",
        "description": "Defines which fields to include when retrieving Tasks."
      },
      "tasksListTasksRequestOrderBy": {
        "type": "string",
        "enum": [
          "ORDER_BY_CREATE_TIMESTAMP_DESC",
          "ORDER_BY_CREATE_TIMESTAMP_ASC"
        ],
        "default": "ORDER_BY_CREATE_TIMESTAMP_DESC",
        "description": "Defines options for ordering Task resources."
      },
      "tasksListTasksResponse": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tasksTask"
            },
            "description": "The list of the Tasks to be retrieved."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page of results. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page of results. If empty, returns this is last page of results."
          }
        }
      },
      "tasksTask": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the specified Task.",
            "x-output-only": true
          },
          "task_thread_id": {
            "type": "string",
            "description": "The ID of the Task Thread the Task belongs to.",
            "x-create-only": true
          },
          "title": {
            "type": "string",
            "description": "The title of the Task. Valid titles have a maximum length of 256 characters, must not include newlines, must not consist only of whitespace and must not begin with whitespace.\n\nMin length: 1 characters.\nMax length: 256 characters.",
            "x-create-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 2
              },
              "changeType": "ADD_FIELD",
              "description": "This field adds a new 'title' field to tasks"
            }
          },
          "status": {
            "$ref": "#/components/schemas/tasksTaskStatus",
            "description": "The current status of the Task.",
            "x-update-only": true
          },
          "created_by_workflow_instance_id": {
            "type": "string",
            "description": "The ID of the Workflow instance that created the Task.\n",
            "x-create-only": true
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the Task was created.",
            "x-output-only": true
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the Task was updated.",
            "x-output-only": true
          },
          "ui_panels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ui_descriptorsPanel"
            },
            "description": "Additional information that is to be displayed.\n",
            "x-create-only": true
          },
          "ui_actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ui_descriptorsAction"
            },
            "description": "The actions that are to be taken for this Task.",
            "x-create-only": true
          },
          "provided_ui_input": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Data input provided by the user via the UI.",
            "x-update-only": true
          },
          "selected_ui_action_id": {
            "type": "string",
            "description": "The action that was selected by the user on the UI.",
            "x-update-only": true
          },
          "updated_by": {
            "$ref": "#/components/schemas/tasksTaskActor",
            "description": "The reference of the entity which updated this Task.",
            "x-update-only": true
          }
        }
      },
      "tasksTaskActor": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/tasksTaskActorType"
          },
          "actor_id": {
            "type": "string"
          }
        }
      },
      "tasksTaskActorType": {
        "type": "string",
        "enum": [
          "ACTOR_TYPE_UNKNOWN",
          "ACTOR_TYPE_EMPLOYEE",
          "ACTOR_TYPE_WORKFLOW_INSTANCE",
          "ACTOR_TYPE_SERVICE"
        ],
        "default": "ACTOR_TYPE_UNKNOWN"
      },
      "tasksTaskStatus": {
        "type": "string",
        "enum": [
          "TASK_STATUS_OPEN",
          "TASK_STATUS_CLOSED"
        ],
        "default": "TASK_STATUS_OPEN",
        "description": "Defines the permitted statuses of a Task."
      },
      "tasksTaskThread": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the Task Thread.",
            "x-output-only": true
          },
          "title": {
            "type": "string",
            "description": "The title of the Task Thread."
          },
          "status": {
            "$ref": "#/components/schemas/tasksTaskThreadStatus",
            "description": "The current status of the Task Thread.",
            "x-output-only": true
          },
          "priority": {
            "$ref": "#/components/schemas/tasksTaskThreadPriority",
            "description": "The priority of the Task Thread."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the Task Thread was created.",
            "x-output-only": true
          },
          "last_update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the Thread was last updated.",
            "x-output-only": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The tags applied to the Task Thread; these are used for sorting.\n\nMin length: 1 characters."
          },
          "access_control_policy_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the policies assigned to this Task Thread.",
            "x-create-only": true
          },
          "access_control_metadata": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonAccessControlAttribute"
            },
            "description": "Data used during policy evaluation.",
            "x-create-only": true
          },
          "created_by_employee_id": {
            "type": "string",
            "description": "The ID of the employee who created the Task Thread.\n",
            "x-create-only": true
          },
          "created_by_workflow_instance_id": {
            "type": "string",
            "description": "The ID of the Workflow instance that created the Task Thread.\n",
            "x-create-only": true
          },
          "header_panels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ui_descriptorsPanel"
            },
            "description": "The header elements to be displayed in the UI."
          },
          "intended_for_role_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The employee roles that can be assigned to work on Tasks in the Thread.",
            "x-create-only": true
          },
          "assigned_employee_id": {
            "type": "string",
            "description": "The ID of employee the Thread is assigned to.\n"
          },
          "additional_references": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TaskThreadReferences"
            },
            "description": "A field used to stored references to other resources such as customers and accounts. The key of the map defines the resource type.\n"
          }
        }
      },
      "tasksTaskThreadHistoryEntry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the Thread history entry.",
            "x-output-only": true
          },
          "task_thread_id": {
            "type": "string",
            "description": "The ID of the Task Thread the entry belongs to.",
            "x-output-only": true
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the entry was updated.",
            "x-output-only": true
          },
          "updated_by": {
            "$ref": "#/components/schemas/tasksTaskThreadHistoryEntryActor",
            "description": "The reference of the entity which updated this Task Thread history entry.",
            "x-output-only": true
          },
          "task_thread": {
            "$ref": "#/components/schemas/tasksTaskThread",
            "description": "The snapshot of the Thread at the given time.",
            "x-output-only": true
          },
          "update_mask": {
            "$ref": "#/components/schemas/protobufFieldMask",
            "description": "The field mask indicating which fields got updated at this point in time.",
            "x-output-only": true
          }
        }
      },
      "tasksTaskThreadHistoryEntryActor": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/tasksTaskThreadHistoryEntryActorType"
          },
          "actor_id": {
            "type": "string"
          }
        }
      },
      "tasksTaskThreadHistoryEntryActorType": {
        "type": "string",
        "enum": [
          "ACTOR_TYPE_UNKNOWN",
          "ACTOR_TYPE_EMPLOYEE",
          "ACTOR_TYPE_WORKFLOW_INSTANCE",
          "ACTOR_TYPE_SERVICE",
          "ACTOR_TYPE_TASK"
        ],
        "default": "ACTOR_TYPE_UNKNOWN"
      },
      "tasksTaskThreadPriority": {
        "type": "string",
        "enum": [
          "TASK_THREAD_PRIORITY_LOW",
          "TASK_THREAD_PRIORITY_MEDIUM",
          "TASK_THREAD_PRIORITY_HIGH",
          "TASK_THREAD_PRIORITY_CRITICAL"
        ],
        "default": "TASK_THREAD_PRIORITY_LOW",
        "description": "Defines the priorities that can be assigned to a Task Thread."
      },
      "tasksTaskThreadStatus": {
        "type": "string",
        "enum": [
          "TASK_THREAD_STATUS_NO_INPUT_REQUIRED",
          "TASK_THREAD_STATUS_INPUT_REQUIRED"
        ],
        "default": "TASK_THREAD_STATUS_NO_INPUT_REQUIRED",
        "description": "Defines the permitted statuses of a Task Thread."
      },
      "tasksUpdateTaskRequest": {
        "type": "object",
        "properties": {
          "access_control_context": {
            "$ref": "#/components/schemas/commonAccessControlContext",
            "description": "Specifies the details of the user performing this call. This is used to enforce access control on the resource."
          },
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent.\n\nRequired."
          },
          "task": {
            "$ref": "#/components/schemas/tasksTask",
            "description": "The Task to be updated.\n\nRequired."
          },
          "update_mask": {
            "$ref": "#/components/schemas/protobufFieldMask",
            "description": "The field mask used to indicate which fields in the resource are to be updated.\n\nRequired."
          }
        },
        "required": [
          "request_id",
          "task",
          "update_mask"
        ]
      },
      "tasksUpdateTaskThreadRequest": {
        "type": "object",
        "properties": {
          "access_control_context": {
            "$ref": "#/components/schemas/commonAccessControlContext",
            "description": "Specifies the details of the user performing this call. This is used to enforce access control on the resource."
          },
          "actor": {
            "$ref": "#/components/schemas/tasksUpdateTaskThreadRequestActor",
            "description": "The reference of the entity intending to update the Task Thread.\n\nRequired."
          },
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent.\n\nRequired."
          },
          "task_thread": {
            "$ref": "#/components/schemas/tasksTaskThread",
            "description": "The Task Thread to be updated.\n\nRequired."
          },
          "update_mask": {
            "$ref": "#/components/schemas/protobufFieldMask",
            "description": "The field mask used to indicate which fields in the resource are to be updated.\n\nRequired."
          }
        },
        "required": [
          "actor",
          "request_id",
          "task_thread",
          "update_mask"
        ]
      },
      "tasksUpdateTaskThreadRequestActor": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/tasksUpdateTaskThreadRequestActorType",
            "description": "\n\nRequired."
          },
          "actor_id": {
            "type": "string",
            "description": "\n\nRequired."
          }
        },
        "required": [
          "type",
          "actor_id"
        ]
      },
      "tasksUpdateTaskThreadRequestActorType": {
        "type": "string",
        "enum": [
          "ACTOR_TYPE_UNKNOWN",
          "ACTOR_TYPE_EMPLOYEE",
          "ACTOR_TYPE_WORKFLOW_INSTANCE",
          "ACTOR_TYPE_SERVICE"
        ],
        "default": "ACTOR_TYPE_UNKNOWN"
      },
      "ui_descriptorsAction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "title": "The id key for the Action",
            "x-output-only": true
          },
          "label": {
            "type": "string",
            "description": "The name that will be used when rendering the Action title.",
            "x-output-only": true
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/formsInput"
            },
            "description": "The action specific inputs that must be rendered.",
            "x-output-only": true
          },
          "metadata": {
            "type": "string",
            "description": "Metadata is a JSON string that contains arbitrary information about this action for the purposes of the view. The content it will have will be defined by each application using these APIs.",
            "x-output-only": true
          },
          "event": {
            "$ref": "#/components/schemas/event",
            "required": false
          },
          "target_status": {
            "$ref": "#/components/schemas/target_status",
            "required": false
          }
        },
        "description": "An Action represents an actionable field in the UI. It contains the information needed to render it as well as the inputs that it will contain."
      },
      "ui_descriptorsPanel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id key for the Panel.",
            "x-output-only": true
          },
          "label": {
            "type": "string",
            "description": "The name that will be used when rendering the Panel title.",
            "x-output-only": true
          },
          "metadata": {
            "type": "string",
            "description": "Metadata is a JSON string that contains arbitrary information about this panel for the purposes of the view. The content it will have will be defined by each application using these APIs.",
            "x-output-only": true
          }
        },
        "description": "A Panel represents a generic display field in the UI. It contains the information needed to render it."
      },
      "commonTicketPriority": {
        "type": "string",
        "enum": [
          "TICKET_PRIORITY_UNKNOWN",
          "TICKET_PRIORITY_NORMAL",
          "TICKET_PRIORITY_LOW",
          "TICKET_PRIORITY_HIGH",
          "TICKET_PRIORITY_CRITICAL"
        ],
        "default": "TICKET_PRIORITY_UNKNOWN",
        "description": "Defines the priorities that can be assigned to a ticket."
      },
      "commonTicketStatus": {
        "type": "string",
        "enum": [
          "TICKET_STATUS_UNKNOWN",
          "TICKET_STATUS_OPEN",
          "TICKET_STATUS_CLOSED",
          "TICKET_STATUS_IN_PROGRESS",
          "TICKET_STATUS_CANCELLED"
        ],
        "default": "TICKET_STATUS_UNKNOWN",
        "description": "Defines the statuses that a ticket can have."
      },
      "orderingOrderByDirection": {
        "type": "string",
        "enum": [
          "ORDER_BY_DESC",
          "ORDER_BY_ASC"
        ],
        "default": "ORDER_BY_DESC",
        "description": "The OrderByDirection controls how the results are ordered. This enum is deprecated. Ordering should now be implemented using a repeated enum of field names. See change https://phabricator.iap.tmachine.io/D39490 for details."
      },
      "ticketsBatchGetTicketsResponse": {
        "type": "object",
        "properties": {
          "tickets": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ticketsTicket"
            },
            "description": "Map of ticket ID to ticket."
          }
        }
      },
      "ticketsCreateTicketRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          },
          "ticket": {
            "$ref": "#/components/schemas/ticketsTicket",
            "description": "The ticket to create. Required.",
            "x-excluded-fields": [
              "create_timestamp",
              "access_control_metadata"
            ]
          }
        },
        "required": [
          "request_id"
        ]
      },
      "ticketsListTicketTagsResponse": {
        "type": "object",
        "properties": {
          "ticket_tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of matching ticket tags."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "ticketsListTicketUpdatesResponse": {
        "type": "object",
        "properties": {
          "ticket_updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ticketsTicketUpdate"
            }
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "ticketsListTicketsResponse": {
        "type": "object",
        "properties": {
          "tickets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ticketsTicket"
            },
            "description": "A list of matching tickets."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "ticketsTicket": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for this ticket."
          },
          "title": {
            "type": "string",
            "description": "The title of the ticket."
          },
          "description": {
            "type": "string",
            "description": "A verbose description and details needed to resolve the ticket."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the ticket was created."
          },
          "due_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the ticket should be resolved by."
          },
          "snoozed_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Work and notifications on a ticket can be delayed till a later time. When the ticket will be reactivated."
          },
          "author_id": {
            "type": "string",
            "description": "The ID of the author. Links to an Employee or System."
          },
          "assignee_id": {
            "type": "string",
            "description": "The ID of the Employee the ticket is assigned to."
          },
          "customer_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The ID of the Customer(s) the ticket is associated with."
          },
          "status": {
            "$ref": "#/components/schemas/commonTicketStatus",
            "description": "The current status of the ticket. Can be updated."
          },
          "priority": {
            "$ref": "#/components/schemas/commonTicketPriority",
            "description": "The priority of the ticket."
          },
          "attachment_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of all Documents attached to the ticket."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata of the ticket. Can be updated. Note that the `UpdateTicket` call will completely override the metadata with the one provided in the Update call."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The tags that the ticket has applied. Used for sorting."
          },
          "ui": {
            "$ref": "#/components/schemas/ui_descriptorsDescriptors",
            "description": "A description of the Ticket's UI elements."
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the roles this ticket is assigned to."
          },
          "policy_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the policies assigned to this ticket."
          },
          "access_control_metadata": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonAccessControlAttribute"
            },
            "description": "Data used during policy evaluation."
          }
        },
        "title": "Representation of a Ticket"
      },
      "ticketsTicketUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the update."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The creation time of the update."
          },
          "author_id": {
            "type": "string",
            "description": "The author ID of the update."
          },
          "comment": {
            "type": "string",
            "description": "Generic update comments."
          },
          "ticket_id": {
            "type": "string",
            "description": "The ID of the updated ticket."
          },
          "ticket": {
            "$ref": "#/components/schemas/ticketsUpdatedTicket",
            "description": "The updated ticket."
          },
          "update_mask": {
            "$ref": "#/components/schemas/protobufFieldMask",
            "description": "Indicates which fields on the resource were updated."
          }
        }
      },
      "ticketsUpdateTicketRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          },
          "ticket": {
            "$ref": "#/components/schemas/ticketsTicket",
            "description": "The ticket to update. Only the fields shown can be updated. Required.",
            "x-excluded-fields": [
              "create_timestamp",
              "access_control_metadata",
              "id",
              "title",
              "description",
              "due_timestamp",
              "author_id",
              "customer_ids",
              "attachment_ids",
              "tags",
              "ui",
              "role_ids",
              "policy_ids"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/protobufFieldMask",
            "description": "The field mask used to indicate which fields in the resource are to be updated. Required."
          },
          "access_control_context": {
            "$ref": "#/components/schemas/commonAccessControlContext",
            "description": "Specifies the details of the user performing this call. Used to enforce access control on the resource."
          },
          "ticket_update_comment": {
            "type": "string",
            "description": "A comment to include on the associated Ticket Update."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "ticketsUpdatedTicket": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the ticket."
          },
          "description": {
            "type": "string",
            "description": "A description of the ticket."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Ticket metadata."
          },
          "snoozed_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "If set ticket is snoozed until the defined point in time."
          },
          "status": {
            "$ref": "#/components/schemas/commonTicketStatus",
            "description": "The ticket status."
          },
          "assignee_id": {
            "type": "string",
            "description": "Assignee ID. If not set ticket is not assigned."
          },
          "priority": {
            "$ref": "#/components/schemas/commonTicketPriority",
            "description": "The ticket priority."
          }
        }
      },
      "ui_descriptorsDescriptors": {
        "type": "object",
        "properties": {
          "panels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ui_descriptorsPanel"
            },
            "description": "Panels that are in this UI.",
            "x-output-only": true
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ui_descriptorsAction"
            },
            "description": "Actions that are in this UI.",
            "x-output-only": true
          },
          "inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/formsInput"
            },
            "description": "Inputs that are in this UI.",
            "x-output-only": true
          }
        },
        "title": "The Descriptors define what Panels, Actions and Inputs are in the given UI"
      },
      "SimulateWorkflowInstanceRequestAutoFireEvent": {
        "type": "string",
        "enum": [
          "AUTO_FIRE_EVENT_UNKNOWN",
          "AUTO_FIRE_EVENT_TECHNICAL_ERRORS",
          "AUTO_FIRE_EVENT_TRANSFORMS",
          "AUTO_FIRE_EVENT_SCHEDULED",
          "AUTO_FIRE_EVENT_CALLBACKS"
        ],
        "default": "AUTO_FIRE_EVENT_UNKNOWN"
      },
      "VaultEndpointMethod": {
        "type": "string",
        "enum": [
          "METHOD_GET",
          "METHOD_PUT",
          "METHOD_POST",
          "METHOD_DELETE"
        ],
        "default": "METHOD_GET"
      },
      "WorkflowInstanceSimulationSideEffectCallbackWorkflowCallbackExecutor": {
        "type": "string",
        "enum": [
          "CALLBACK_API",
          "CORE_API",
          "WORKFLOWS_API",
          "AUDIT_API",
          "XPL_API",
          "PAYMENT_HUB_API",
          "EXTERNAL_OPERATION_CONSUMER"
        ],
        "default": "CALLBACK_API"
      },
      "async_operationsAsyncOperation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID that can be used to retrieve this operation."
          },
          "metadata": {
            "$ref": "#/components/schemas/protobufAny",
            "description": "Metadata of the operation.",
            "x-third-party": "GOOGLE_PROTOBUF_ANY"
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When this operation was created.",
            "x-third-party": "GOOGLE_PROTOBUF_TIMESTAMP"
          },
          "done_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When this operation was completed.",
            "x-third-party": "GOOGLE_PROTOBUF_TIMESTAMP"
          },
          "done": {
            "type": "boolean",
            "description": "Whether the operation is completed or not."
          },
          "response": {
            "$ref": "#/components/schemas/protobufAny",
            "required": false
          },
          "error": {
            "$ref": "#/components/schemas/rpcStatus",
            "required": false
          }
        },
        "description": "Represents a long-running or asynchronous operation in a service. It contains the status of this operation and, upon successful completion, the resource that was created or mutated as part of this operation."
      },
      "async_operationsBatchGetAsyncOperationsResponse": {
        "type": "object",
        "properties": {
          "async_operations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/async_operationsAsyncOperation"
            },
            "description": "Map of ID to the Async Operation with that ID."
          }
        },
        "description": "BatchGetAsyncOperationsResponse is a response containing multiple Async Operation resources."
      },
      "protobufAny": {
        "type": "object",
        "properties": {
          "type_url": {
            "type": "string",
            "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.)\n\nNote: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
          },
          "value": {
            "type": "string",
            "format": "byte",
            "description": "Must be a valid serialized protocol buffer of the above specified type."
          }
        },
        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      }\n\nThe pack methods provided by protobuf library will by default use 'type.googleapis.com/full.type.name' as the type URL and the unpack methods only use the fully qualified type name after the last '/' in the type URL, for example \"foo.bar.com/x/y.z\" will yield type name \"y.z\".\n\n\nJSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:\n\n    package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }\n\n    {       \"@type\": \"type.googleapis.com/google.profile.Person\",       \"firstName\": <string>,       \"lastName\": <string>     }\n\nIf the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):\n\n    {       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",       \"value\": \"1.212s\"     }"
      },
      "rpcStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
          },
          "message": {
            "type": "string",
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [thoughtmachine.rpc.Status.details][thoughtmachine.rpc.Status.details] field, or localized by the client."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/protobufAny"
            },
            "description": "A list of messages that carry the error details.  There will be a common set of message types for APIs to use."
          }
        },
        "description": "- Simple to use and understand for most users - Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message, and error details. The error code should be an enum value of [google.rpc.Code][google.rpc.Code], but it may accept additional error codes if needed.  The error message should be a developer-facing English message that helps developers *understand* and *resolve* the error. If a localized user-facing error message is needed, put the localized message in the error details or localize it in the client. The optional error details may contain arbitrary information about the error. There is a predefined set of error detail types in the package `google.rpc` which can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it is not necessarily the actual wire format. When the `Status` message is exposed in different client libraries and different wire protocols, it can be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of environments, either with or without APIs, to provide a consistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,     it may embed the `Status` in the normal response to indicate the partial     errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may     have a `Status` message for error reporting purpose.\n\n- Batch operations. If a client uses batch request and batch response, the     `Status` message should be used directly inside batch response, one for     each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation     results in its response, the status of those operations should be     represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could     be used directly after any stripping needed for security/privacy reasons.",
        "title": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). The error model is designed to be:"
      },
      "versionSemVer": {
        "type": "object",
        "properties": {
          "major": {
            "type": "integer",
            "format": "int32",
            "description": "The major version number."
          },
          "minor": {
            "type": "integer",
            "format": "int32",
            "description": "The minor version number."
          },
          "patch": {
            "type": "integer",
            "format": "int32",
            "description": "The patch version number."
          },
          "label": {
            "type": "string",
            "description": "The version label. Example: \"-beta\"."
          }
        },
        "description": "Minimal representation of a Semantic Versioning Specification (SemVer) version. For more information go to http://semver.org. If you require a Semantic Versioning representation in your proto you MUST use this common proto."
      },
      "workflowsAdditionalDetail": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "workflowsBatchGetWorkflowDefinitionVersionsResponse": {
        "type": "object",
        "properties": {
          "workflow_definition_versions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/workflowsWorkflowDefinitionVersion"
            },
            "description": "A map of Workflow Definition Version ID to Workflow Definition Version."
          }
        }
      },
      "workflowsBatchGetWorkflowDefinitionsResponse": {
        "type": "object",
        "properties": {
          "workflow_definitions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/workflowsWorkflowDefinition"
            },
            "description": "A map of Workflow Definition ID to Workflow Definition."
          }
        }
      },
      "workflowsBatchGetWorkflowInstanceEventsResponse": {
        "type": "object",
        "properties": {
          "workflow_instance_events": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceEvent"
            },
            "description": "A map of Workflow Instance Event IDs to Workflow instance events."
          }
        }
      },
      "workflowsBatchGetWorkflowInstanceStatesResponse": {
        "type": "object",
        "properties": {
          "workflow_instance_states": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceState"
            },
            "description": "A map of Workflow instance state IDs to Workflow instance states."
          }
        }
      },
      "workflowsBatchGetWorkflowInstancesResponse": {
        "type": "object",
        "properties": {
          "workflow_instances": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/workflowsWorkflowInstance"
            },
            "description": "A map of Workflow instance ID to Workflow instance."
          }
        }
      },
      "workflowsBusinessResult": {
        "type": "string",
        "enum": [
          "BUSINESS_RESULT_NO_RESULT",
          "BUSINESS_RESULT_SUCCESSFUL",
          "BUSINESS_RESULT_FAILED",
          "BUSINESS_RESULT_CANCELLED"
        ],
        "default": "BUSINESS_RESULT_NO_RESULT",
        "description": "The possible business results a particular WorkflowInstance can end in.",
        "x-enum-value-descriptions": {
          "BUSINESS_RESULT_CANCELLED": "The Workflow was cancelled.",
          "BUSINESS_RESULT_FAILED": "The Workflow failed in terms of its business objective.",
          "BUSINESS_RESULT_NO_RESULT": "There was no result.",
          "BUSINESS_RESULT_SUCCESSFUL": "The Workflow was successful in terms of its business objective."
        }
      },
      "workflowsCreateWorkflowDefinitionVersionRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          },
          "workflow_definition_version": {
            "$ref": "#/components/schemas/workflowsWorkflowDefinitionVersion",
            "description": "The Workflow Definition Version to create. Required."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "workflowsCreateWorkflowInstanceEventRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          },
          "access_control_context": {
            "$ref": "#/components/schemas/commonAccessControlContext",
            "description": "The employee on whose behalf the call is made."
          },
          "workflow_instance_event": {
            "$ref": "#/components/schemas/workflowsWorkflowInstanceEvent",
            "description": "The Workflow instance Event to create. Required."
          }
        },
        "required": [
          "request_id"
        ],
        "x-message-release-info": {
          "noticeVersion": {
            "major": 2,
            "minor": 8
          },
          "releaseVersion": {
            "major": 4
          },
          "changeType": "REMOVE_MESSAGE",
          "description": "The CreateWorkflowInstanceEventAsync endpoint is being deprecated."
        }
      },
      "workflowsCreateWorkflowInstanceRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent. Required, and must be 10-256 alphanumeric characters including \"+-=|_\".\n\nRequired.\nMin length: 10 characters.\nMax length: 256 characters."
          },
          "access_control_context": {
            "$ref": "#/components/schemas/commonAccessControlContext",
            "description": "The employee on whose behalf the call is to be made."
          },
          "workflow_instance": {
            "$ref": "#/components/schemas/workflowsWorkflowInstance",
            "description": "The Workflow instance to create. Required."
          },
          "instantiation_context": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The initial context to use to instantiate the Workflow. Optional; required fields dependent on Workflow."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "workflowsCreateWorkflowInstantiationScheduleRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          },
          "access_control_context": {
            "$ref": "#/components/schemas/commonAccessControlContext",
            "description": "Specifies the employee the call is made on behalf of."
          },
          "workflow_instantiation_schedule": {
            "$ref": "#/components/schemas/workflowsWorkflowInstantiationSchedule",
            "description": "The Workflow Instantiation Schedule to create. Required."
          },
          "instantiation_context": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The initial context to use to instantiate the Workflow. Optional."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "workflowsExternalEndpoint": {
        "type": "object",
        "properties": {
          "target": {
            "type": "string"
          }
        },
        "description": "A callback endpoint external to Vault."
      },
      "workflowsListWorkflowDefinitionVersionsRequestNamePatternMatch": {
        "type": "object",
        "properties": {
          "pattern": {
            "type": "string"
          },
          "match_type": {
            "$ref": "#/components/schemas/workflowsListWorkflowDefinitionVersionsRequestNamePatternMatchMatchType"
          }
        }
      },
      "workflowsListWorkflowDefinitionVersionsRequestNamePatternMatchMatchType": {
        "type": "string",
        "enum": [
          "MATCH_TYPE_UNKNOWN",
          "MATCH_TYPE_TEXT_REGEX",
          "MATCH_TYPE_TEXT_EXACT_CASE_SENSITIVE",
          "MATCH_TYPE_TEXT_EXACT_CASE_INSENSITIVE",
          "MATCH_TYPE_TEXT_SUBSTRING_CASE_SENSITIVE",
          "MATCH_TYPE_TEXT_SUBSTRING_CASE_INSENSITIVE",
          "MATCH_TYPE_TEXT_PREFIX_CASE_SENSITIVE",
          "MATCH_TYPE_TEXT_PREFIX_CASE_INSENSITIVE"
        ],
        "default": "MATCH_TYPE_UNKNOWN"
      },
      "workflowsListWorkflowDefinitionVersionsRequestOrderBy": {
        "type": "string",
        "enum": [
          "ORDER_BY_CREATE_TIMESTAMP_ASC",
          "ORDER_BY_CREATE_TIMESTAMP_DESC",
          "ORDER_BY_NAME_ASC",
          "ORDER_BY_NAME_DESC"
        ],
        "default": "ORDER_BY_CREATE_TIMESTAMP_ASC"
      },
      "workflowsListWorkflowDefinitionVersionsResponse": {
        "type": "object",
        "properties": {
          "workflow_definition_versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowDefinitionVersion"
            },
            "description": "A list of matching Workflow Definition Versions."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "workflowsListWorkflowDefinitionsRequestNamePatternMatch": {
        "type": "object",
        "properties": {
          "pattern": {
            "type": "string"
          },
          "match_type": {
            "$ref": "#/components/schemas/workflowsListWorkflowDefinitionsRequestNamePatternMatchMatchType"
          }
        }
      },
      "workflowsListWorkflowDefinitionsRequestNamePatternMatchMatchType": {
        "type": "string",
        "enum": [
          "MATCH_TYPE_UNKNOWN",
          "MATCH_TYPE_TEXT_REGEX",
          "MATCH_TYPE_TEXT_EXACT_CASE_SENSITIVE",
          "MATCH_TYPE_TEXT_EXACT_CASE_INSENSITIVE",
          "MATCH_TYPE_TEXT_SUBSTRING_CASE_SENSITIVE",
          "MATCH_TYPE_TEXT_SUBSTRING_CASE_INSENSITIVE",
          "MATCH_TYPE_TEXT_PREFIX_CASE_SENSITIVE",
          "MATCH_TYPE_TEXT_PREFIX_CASE_INSENSITIVE"
        ],
        "default": "MATCH_TYPE_UNKNOWN"
      },
      "workflowsListWorkflowDefinitionsRequestOrderBy": {
        "type": "string",
        "enum": [
          "ORDER_BY_UPDATE_TIMESTAMP_ASC",
          "ORDER_BY_UPDATE_TIMESTAMP_DESC",
          "ORDER_BY_NAME_ASC",
          "ORDER_BY_NAME_DESC"
        ],
        "default": "ORDER_BY_UPDATE_TIMESTAMP_ASC"
      },
      "workflowsListWorkflowDefinitionsResponse": {
        "type": "object",
        "properties": {
          "workflow_definitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowDefinition"
            },
            "description": "A list of matching Workflow Definitions."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "workflowsListWorkflowInstanceEventsRequestOrderBy": {
        "type": "string",
        "enum": [
          "ORDER_BY_PROCESS_TIMESTAMP_ASC",
          "ORDER_BY_PROCESS_TIMESTAMP_DESC",
          "ORDER_BY_NAME_ASC",
          "ORDER_BY_NAME_DESC"
        ],
        "default": "ORDER_BY_PROCESS_TIMESTAMP_ASC"
      },
      "workflowsListWorkflowInstanceEventsResponse": {
        "type": "object",
        "properties": {
          "workflow_instance_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceEvent"
            },
            "description": "A list of matching Workflow instance events."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "workflowsListWorkflowInstanceStatesRequestOrderBy": {
        "type": "string",
        "enum": [
          "ORDER_BY_TIMESTAMP_ASC",
          "ORDER_BY_TIMESTAMP_DESC"
        ],
        "default": "ORDER_BY_TIMESTAMP_ASC"
      },
      "workflowsListWorkflowInstanceStatesResponse": {
        "type": "object",
        "properties": {
          "workflow_instance_states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceState"
            },
            "description": "A list of matching Workflow instance states."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this returns the last page of results."
          }
        }
      },
      "workflowsListWorkflowInstancesResponse": {
        "type": "object",
        "properties": {
          "workflow_instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstance"
            },
            "description": "A list of matching Workflow instances."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "workflowsRetryPreviousWorkflowInstanceEventRequest": {
        "type": "object",
        "properties": {
          "instance_id": {
            "type": "string",
            "description": "The Workflow Instance ID for which the previous associated Workflow Event will be retried."
          }
        }
      },
      "workflowsRetryWorkflowInTechnicalErrorRequest": {
        "type": "object",
        "properties": {
          "instance_id": {
            "type": "string",
            "description": "The Workflow Instance ID of a Workflow in technical error, for which the the most recently submitted event which is not an error/retry event will be retried."
          }
        }
      },
      "workflowsSimulateWorkflowInstanceRequest": {
        "type": "object",
        "properties": {
          "specification": {
            "type": "string",
            "description": "The YAML Workflow Definition specification, from which the instance will be created. Required.\n\nRequired.\nMin length: 1 characters."
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationEvent"
            },
            "description": "The events to simulate being sent to the instance. Optional.\n"
          },
          "environment_variables": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Values the instance can read using $$ syntax. Optional.\n"
          },
          "instantiation_context": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The context to instantiate the Workflow instance with. If both `instantiation_context` and `starting_state` are present, a user error will be returned. Optional.\n"
          },
          "starting_state": {
            "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationState",
            "description": "The state to begin the instance simulation from. If both `instantiation_context` and `starting_state` are present, a user error will be returned. Optional.\n"
          },
          "auto_fire_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimulateWorkflowInstanceRequestAutoFireEvent"
            },
            "description": "This automatically fires Workflow simulation events. Each simulation step can produce events as side effects; if the event type is included in this field, these simulation events will be included. The simulation will then continue using events in the simulation input list. Optional.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Auto fire workflow simulation events"
            }
          },
          "callbacks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationExpectedCallback"
            },
            "description": "Callbacks that are expected to be fired by the instance in the correct order. Any callbacks specified will be validated against callbacks in the Workflow when they are fired. A callback in the list that does not match a callback triggered in the Workflow will return an error. Optional.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD",
              "description": "Expected workflow simulation callbacks"
            }
          }
        },
        "required": [
          "specification"
        ]
      },
      "workflowsSimulateWorkflowInstanceResponse": {
        "type": "object",
        "properties": {
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationStep"
            },
            "description": "The steps taken by a Workflow instance during its simulation."
          }
        }
      },
      "workflowsUpdateWorkflowDefinitionRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          },
          "workflow_definition": {
            "$ref": "#/components/schemas/workflowsWorkflowDefinition",
            "description": "The Workflow Definition to update. Required."
          },
          "update_mask": {
            "$ref": "#/components/schemas/protobufFieldMask",
            "description": "The fields of the definition to update. Supported: `default_workflow_definition_version_id`. Required."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "workflowsValidateWorkflowDefinitionVersionRequest": {
        "type": "object",
        "properties": {
          "workflow_definition_version": {
            "$ref": "#/components/schemas/workflowsWorkflowDefinitionVersion",
            "description": "The Workflow Definition Version that is to be validated. Required."
          }
        }
      },
      "workflowsValidateWorkflowDefinitionVersionResponse": {
        "type": "object",
        "properties": {
          "is_valid": {
            "type": "boolean",
            "description": "Indicates whether the syntax of the Workflow Definition Version is valid."
          },
          "validation_errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Communicates the reason the Workflow Definition Version failed validation."
          }
        }
      },
      "workflowsVaultEndpoint": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "method": {
            "$ref": "#/components/schemas/VaultEndpointMethod"
          }
        },
        "description": "A callback endpoint in Vault specified in terms of an HTTP request."
      },
      "workflowsWorkflowDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of this Workflow Definition."
          },
          "name": {
            "type": "string",
            "description": "The name of this Workflow Definition, sourced from the specification of the default version.",
            "x-output-only": true
          },
          "default_workflow_definition_version_id": {
            "type": "string",
            "description": "The ID of the default Workflow Definition Version.",
            "x-update-only": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of free-form strings associated with this Workflow Definition, sourced from the specification of the default version.",
            "x-output-only": true
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the default version was updated at, i.e., when this Workflow Definition's default version was changed to a different Workflow Definition Version.",
            "x-output-only": true
          },
          "policy_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the policies assigned to this Workflow Definition."
          },
          "is_disabled": {
            "type": "boolean",
            "description": "Indicates whether this Workflow Definition is disabled.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD"
            }
          }
        }
      },
      "workflowsWorkflowDefinitionVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the Workflow Definition Version.",
            "x-output-only": true
          },
          "workflow_definition_id": {
            "type": "string",
            "description": "The ID of the Workflow Definition. See `CreateWorkflowDefinitionVersion` for details of how this field is used.\n\nMax length: 512 characters.",
            "x-create-only": true
          },
          "specification": {
            "type": "string",
            "description": "YAML spec of this Workflow Definition Version.",
            "x-create-only": true
          },
          "name": {
            "type": "string",
            "description": "The name of this Workflow Definition Version, sourced from the spec.",
            "x-output-only": true
          },
          "version": {
            "$ref": "#/components/schemas/versionSemVer",
            "description": "The semantic version of the Workflow Definition Version, sourced from the specification.",
            "x-output-only": true
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time this Workflow Definition Version was created.",
            "x-output-only": true
          },
          "starting_state_name": {
            "type": "string",
            "description": "The name of this Workflow Definition Version's starting state, sourced from the specification.",
            "x-output-only": true
          },
          "is_deleted": {
            "type": "boolean",
            "description": "Indicates whether this Workflow Definition Version has been deleted.",
            "x-update-only": true
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of free-form strings associated with this Workflow Definition Version, sourced from the specification.",
            "x-output-only": true
          },
          "states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowState"
            },
            "description": "All states contained in this Workflow Definition Version.",
            "x-output-only": true
          },
          "transitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowTransition"
            },
            "description": "All transitions contained in this Workflow Definition Version.",
            "x-output-only": true
          },
          "end_states": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowEndState"
            },
            "description": "All end-states contained in this Workflow Definition Version.",
            "x-output-only": true
          },
          "is_disabled": {
            "type": "boolean",
            "description": "Indicates whether this Workflow Definition Version is disabled.",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD"
            }
          }
        }
      },
      "workflowsWorkflowDefinitionVersionIncludeField": {
        "type": "string",
        "enum": [
          "INCLUDE_FIELD_SPECIFICATION",
          "INCLUDE_FIELD_STATES",
          "INCLUDE_FIELD_TRANSITIONS",
          "INCLUDE_FIELD_END_STATES"
        ],
        "default": "INCLUDE_FIELD_SPECIFICATION"
      },
      "workflowsWorkflowEndState": {
        "type": "object",
        "properties": {
          "state_name": {
            "type": "string",
            "description": "The name of the state that is an end-state.",
            "x-output-only": true
          },
          "result": {
            "$ref": "#/components/schemas/workflowsBusinessResult",
            "description": "The type of business result achieved by reaching this end-state.",
            "x-output-only": true
          }
        },
        "description": "A valid end state for a Workflow, along with the business result for that end state."
      },
      "workflowsWorkflowInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for this Workflow instance."
          },
          "workflow_definition_id": {
            "type": "string",
            "description": "The ID of the Workflow Definition this is an instance of. Optional field for `CreateWorkflowInstance`.\n\nMax length: 512 characters.",
            "x-create-only": true
          },
          "workflow_definition_version_id": {
            "type": "string",
            "description": "The ID of the Workflow Definition Version this is an instance of. Optional field for `CreateWorkflowInstance`. If omitted, the default version of the Workflow will be used.\n\nMax length: 512 characters.",
            "x-create-only": true
          },
          "status": {
            "$ref": "#/components/schemas/workflowsWorkflowInstanceStatus",
            "description": "The current status of the Workflow instance.",
            "x-output-only": true
          },
          "display_name": {
            "type": "string",
            "description": "The display name of this instance.",
            "x-output-only": true
          },
          "current_state_name": {
            "type": "string",
            "description": "The name of the state this Workflow instance is currently in.",
            "x-output-only": true
          },
          "current_state_expiry_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The expiry timestamp of the current state the Workflow instance is in.",
            "x-output-only": true
          },
          "global_state": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map of global state key to value for the Workflow instance.",
            "x-output-only": true,
            "x-release-info": {
              "noticeVersion": {
                "major": 2,
                "minor": 8
              },
              "releaseVersion": {
                "major": 4
              },
              "changeType": "MAKE_FIELD_OMITTED_BY_DEFAULT",
              "description": "global_state will need to be included in fields_to_include."
            }
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp of when the Workflow instance was instantiated.",
            "x-output-only": true
          },
          "customer_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of customer IDs this Workflow instance relates to."
          },
          "additional_details": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/workflowsAdditionalDetail"
            },
            "description": "Arbitrary key-value data associated with the Workflow instance. Multiple string values are allowed per key. Optional.",
            "x-release-info": {
              "noticeVersion": {
                "major": 2,
                "minor": 8
              },
              "releaseVersion": {
                "major": 4
              },
              "changeType": "MAKE_FIELD_OMITTED_BY_DEFAULT",
              "description": "additional_details fields will need to be included in fields_to_include."
            }
          },
          "parent_id": {
            "type": "string",
            "description": "The ID of the parent Workflow instance.",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD",
              "description": "The ID of the Workflow Instance's parent"
            }
          },
          "creator_id": {
            "type": "string",
            "description": "The ID of the employee who created the Workflow instance. This only gets populated if an employee directly interacts with the Workflow instance.",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD",
              "description": "The ID of the Workflow instance's creator"
            }
          },
          "last_updated_by_user_id": {
            "type": "string",
            "description": "The ID of the employee who last updated the Workflow instance. This only gets populated if an employee directly interacts with the Workflow instance.",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD",
              "description": "The ID of the user who last updated this Workflow instance"
            }
          },
          "end_result": {
            "$ref": "#/components/schemas/workflowsBusinessResult",
            "description": "Information about the business result (successful or failed) of a Workflow after it has closed.",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD",
              "description": "Business result of the Workflow"
            }
          },
          "global_ui_descriptors": {
            "$ref": "#/components/schemas/ui_descriptorsDescriptors",
            "description": "The global UI descriptors for a Workflow instance.",
            "x-output-only": true
          },
          "current_state_ui_descriptors": {
            "$ref": "#/components/schemas/ui_descriptorsDescriptors",
            "description": "The current state's UI descriptors for a Workflow instance.",
            "x-output-only": true
          }
        },
        "description": "An instance of a Workflow Definition Version."
      },
      "workflowsWorkflowInstanceEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for this event."
          },
          "workflow_instance_id": {
            "type": "string",
            "description": "The ID of the Workflow instance this is being / was sent to.",
            "x-create-only": true
          },
          "name": {
            "type": "string",
            "description": "The name of the event, which must match the `trigger_event_name` for one of the Workflow Instance's current state's transitions in order for this event to be valid. The name values `technical_error` and `cancel_workflow` have predefined meanings. A `technical_error` event will move a Workflow instance into a technical error state. A `cancel_workflow` event will cancel the Workflow instance.",
            "x-create-only": true
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key-value pairs, containing parameters, that are passed to the Workflow Iistance.",
            "x-create-only": true
          },
          "process_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time this event was processed at.",
            "x-output-only": true
          },
          "from_state_name": {
            "type": "string",
            "description": "The name of the Workflow State the Workflow instance transitioned from as a result of this event.",
            "x-output-only": true
          },
          "to_state_name": {
            "type": "string",
            "description": "The name of the Workflow State the Workflow instance transitioned to as a result of this event.",
            "x-output-only": true
          },
          "transition_name": {
            "type": "string",
            "description": "The name of the Workflow transition this event triggered.",
            "x-output-only": true
          },
          "from_state_id": {
            "type": "string",
            "description": "The ID of the Workflow state that the Workflow instance transitioned from as a result of this event.",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD",
              "description": "Introduces a reference to a workflow instance state resource"
            }
          },
          "to_state_id": {
            "type": "string",
            "description": "The ID of the Workflow state that the Workflow instance transitioned to as a result of this event.",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD",
              "description": "Introduces a reference to a workflow instance state resource"
            }
          }
        }
      },
      "workflowsWorkflowInstanceEventIncludeField": {
        "type": "string",
        "enum": [
          "INCLUDE_FIELD_CONTEXT"
        ],
        "default": "INCLUDE_FIELD_CONTEXT"
      },
      "workflowsWorkflowInstanceEventResponse": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "description": "The Workflow Instance Event ID."
          },
          "processed": {
            "type": "boolean",
            "description": "Indicates whether the Workflow Instance Event was successfully processed."
          }
        }
      },
      "workflowsWorkflowInstanceIncludeField": {
        "type": "string",
        "enum": [
          "INCLUDE_FIELD_ADDITIONAL_DETAILS",
          "INCLUDE_FIELD_GLOBAL_UI_DESCRIPTORS",
          "INCLUDE_FIELD_CURRENT_STATE_UI_DESCRIPTORS"
        ],
        "default": "INCLUDE_FIELD_ADDITIONAL_DETAILS"
      },
      "workflowsWorkflowInstanceSimulationEvent": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the transition to follow. Required.\n\nRequired.\nMin length: 1 characters."
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The context provided to the actions executed by the transition. Optional.\n"
          }
        },
        "description": "An event in a Workflow instance simulation.",
        "required": [
          "name"
        ]
      },
      "workflowsWorkflowInstanceSimulationExpectedCallback": {
        "type": "object",
        "properties": {
          "response_payload": {
            "type": "string",
            "description": "The expected API response payload. The fields contained in the response are automatically included according to the fields in the request; the response will contain at least one field. Required.",
            "x-example-override": "{'accounts': [{'id': 'value1','name': 'value1','product_id': 'value1','product_version_id': 'value1'}]}"
          }
        },
        "description": "A callback that is expected to be triggered by a Workflow transition."
      },
      "workflowsWorkflowInstanceSimulationSideEffectCallback": {
        "type": "object",
        "properties": {
          "executor": {
            "$ref": "#/components/schemas/WorkflowInstanceSimulationSideEffectCallbackWorkflowCallbackExecutor",
            "description": "The name of the API."
          },
          "target": {
            "type": "string",
            "description": "The name of the API endpoint."
          },
          "payload": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The API call payload."
          }
        },
        "description": "Any callback request triggered by a Workflow transition."
      },
      "workflowsWorkflowInstanceSimulationSideEffectEvent": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the transition to execute."
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The context attached to the event."
          },
          "target_is_self": {
            "type": "boolean",
            "description": "True if the target of the event is the Workflow instance that produced it."
          },
          "cron_expression": {
            "type": "string",
            "description": "The `cron expression` if the Workflow Event is scheduled for execution at a specific date and time in the future."
          }
        },
        "description": "An event produced by simulating a Workflow transition."
      },
      "workflowsWorkflowInstanceSimulationSideEffectExternalCallback": {
        "type": "object",
        "properties": {
          "external_endpoint": {
            "$ref": "#/components/schemas/workflowsExternalEndpoint"
          },
          "payload": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The API call payload."
          }
        },
        "description": "Any external callback request triggered by a Workflow transition."
      },
      "workflowsWorkflowInstanceSimulationSideEffectGlobalUI": {
        "type": "object",
        "properties": {
          "ui_panels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ui_descriptorsPanel"
            },
            "description": "The new or replacement global UI panels."
          }
        },
        "description": "An addition to, or replacement of, global UI panels that is triggered by a Workflow transition."
      },
      "workflowsWorkflowInstanceSimulationSideEffectInstantiation": {
        "type": "object",
        "properties": {
          "workflow_definition_id": {
            "type": "string",
            "description": "The ID of the Workflow Definition."
          },
          "workflow_definition_version": {
            "type": "string",
            "description": "The Workflow Definition Version that is used when the Workflow is instantiated. If empty indicates that the default version was instantiated."
          },
          "instantiation_context": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The context that is passed to the Workflow during the instantiation event."
          },
          "customer_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The customer IDs associated with the Workflow."
          },
          "cron_expression": {
            "type": "string",
            "description": "The cron expression if the Workflow is to be instantiated at a specific date and time in the future."
          }
        },
        "description": "Workflow instantiation request produced from a simulated transition."
      },
      "workflowsWorkflowInstanceSimulationSideEffectStateUI": {
        "type": "object",
        "properties": {
          "ui_panels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ui_descriptorsPanel"
            },
            "description": "The state UI panels.",
            "x-output-only": true
          },
          "ui_actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ui_descriptorsAction"
            },
            "description": "The state UI actions.",
            "x-output-only": true
          },
          "ui_inputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/formsInput"
            },
            "description": "The state UI inputs.",
            "x-output-only": true
          }
        },
        "description": "State UI panels that is triggered by a Workflow transition."
      },
      "workflowsWorkflowInstanceSimulationSideEffectTicketClosure": {
        "type": "object",
        "properties": {
          "target_status": {
            "$ref": "#/components/schemas/commonTicketStatus",
            "description": "The ticket status that the ticket will be closed with."
          }
        },
        "description": "The closure of a ticket that is triggered by a Workflow transition."
      },
      "workflowsWorkflowInstanceSimulationSideEffectTicketCreation": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "The title of the created ticket."
          },
          "description": {
            "type": "string",
            "description": "The description of the ticket."
          },
          "due_time": {
            "type": "string",
            "format": "date-time",
            "description": "The time the ticket needs to be actioned by."
          },
          "status": {
            "$ref": "#/components/schemas/commonTicketStatus",
            "description": "The status of the ticket."
          },
          "priority": {
            "$ref": "#/components/schemas/commonTicketPriority",
            "description": "The priority of the ticket."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags associated with the ticket."
          },
          "role_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Roles associated with the ticket."
          },
          "attachment_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Attachment IDs associated with the ticket."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata associated with the ticket."
          },
          "ui": {
            "$ref": "#/components/schemas/ui_descriptorsDescriptors",
            "description": "UI descriptors associated with the ticket."
          },
          "customer_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Customer IDs set for the ticket."
          },
          "policy_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Policy IDs set for the ticket."
          },
          "access_control_metadata": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonAccessControlAttribute"
            },
            "description": "Access control metadata set for the ticket."
          }
        },
        "description": "The creation of a ticket that is triggered by a Workflow transition."
      },
      "workflowsWorkflowInstanceSimulationSideEffectTicketUpdate": {
        "type": "object",
        "properties": {
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The updated metadata associated with the ticket."
          },
          "priority": {
            "$ref": "#/components/schemas/commonTicketPriority",
            "description": "The updated ticket priority."
          },
          "status": {
            "$ref": "#/components/schemas/commonTicketStatus",
            "description": "The updated ticket status."
          },
          "assignee_id": {
            "type": "string",
            "description": "The updated ticket assignee ID."
          }
        },
        "description": "The update of a ticket that is triggered by a Workflow transition."
      },
      "workflowsWorkflowInstanceSimulationSideEffectVaultCallback": {
        "type": "object",
        "properties": {
          "vault_endpoint": {
            "$ref": "#/components/schemas/workflowsVaultEndpoint"
          },
          "payload": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The API call payload."
          }
        },
        "description": "Any vault callback request triggered by a Workflow transition."
      },
      "workflowsWorkflowInstanceSimulationState": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the state the instance is in. Required.\n\nRequired.\nMin length: 1 characters."
          },
          "global_state": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The contents of the global state before/after simulating a transition. Optional.\n"
          }
        },
        "description": "The state of the simulated instance before/after simulating a transition.",
        "required": [
          "name"
        ]
      },
      "workflowsWorkflowInstanceSimulationStep": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationState",
            "description": "The overall state of the simulated Workflow instance, immediately after simulating the transition. This can be fed back into the SimulateWorkflowInstanceRequest to resume from this point in a new simulation."
          },
          "triggering_event": {
            "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationEvent",
            "description": "The event which triggered the Workflow instance to enter this state."
          },
          "side_effect_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationSideEffectEvent"
            },
            "description": "Any events produced from the simulated transition, such as transform events or technical error events.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Any events produced from the simulated transition such as transform events, or technical error events."
            }
          },
          "side_effect_ticket_creations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationSideEffectTicketCreation"
            },
            "description": "Tickets that were created as part of the transition.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Tickets that were created as part of the transition."
            }
          },
          "side_effect_ticket_updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationSideEffectTicketUpdate"
            },
            "description": "Tickets that were updated as part of the transition.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Tickets that were updated as part of the transition."
            }
          },
          "side_effect_ticket_closures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationSideEffectTicketClosure"
            },
            "description": "Tickets that were closed as part of the transition.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Tickets that were closed as part of the transition."
            }
          },
          "side_effect_callbacks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationSideEffectCallback"
            },
            "description": "Callback requests made as part of the transition.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Callback requests made as part of the transition."
            }
          },
          "side_effect_global_uis": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationSideEffectGlobalUI"
            },
            "description": "The global UI panels that were added or replaced as part of the Workflow transition.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Global UI panels that were added or replaced as part of the transition."
            }
          },
          "side_effect_instantiations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationSideEffectInstantiation"
            },
            "description": "Workflow instantiation requests produced from the simulated transition.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Workflow instantiation requests produced from the simulated transition."
            }
          },
          "side_effect_state_ui": {
            "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationSideEffectStateUI",
            "description": "The state UI that were added as part of the Workflow transition.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "State UI that were added as part of the Workflow transition.."
            }
          },
          "side_effect_vault_callbacks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationSideEffectVaultCallback"
            },
            "description": "Vault callback requests made as part of the transition.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 4
              },
              "changeType": "ADD_FIELD",
              "description": "Vault callback requests made as part of the transition."
            }
          },
          "side_effect_external_callbacks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/workflowsWorkflowInstanceSimulationSideEffectExternalCallback"
            },
            "description": "External callback requests made as part of the transition.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 4
              },
              "changeType": "ADD_FIELD",
              "description": "External callback requests made as part of the transition."
            }
          }
        },
        "description": "Details of a single simulation step, as a result of sending a single event to a Workflow Instance."
      },
      "workflowsWorkflowInstanceState": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for this state."
          },
          "workflow_instance_id": {
            "type": "string",
            "description": "The ID of the Workflow instance."
          },
          "state_name": {
            "type": "string",
            "description": "The name of the state to which this global state refers."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which this state was entered.",
            "x-output-only": true
          },
          "global_state": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map of global state key to value for the Workflow instance at the time when the Workflow instance state was entered."
          }
        }
      },
      "workflowsWorkflowInstanceStatus": {
        "type": "string",
        "enum": [
          "WORKFLOW_INSTANCE_STATUS_UNKNOWN",
          "WORKFLOW_INSTANCE_STATUS_INSTANTIATED",
          "WORKFLOW_INSTANCE_STATUS_CLOSED",
          "WORKFLOW_INSTANCE_STATUS_SUSPENDED"
        ],
        "default": "WORKFLOW_INSTANCE_STATUS_UNKNOWN",
        "description": "The possible states a particular Workflow instance can be in.",
        "x-enum-value-release-info": {
          "WORKFLOW_INSTANCE_STATUS_SUSPENDED": {
            "releaseVersion": {
              "major": 1,
              "minor": 9
            },
            "changeType": "ADD_ENUM_VALUE"
          }
        },
        "x-enum-value-descriptions": {
          "WORKFLOW_INSTANCE_STATUS_CLOSED": "The Workflow instance is closed and is no longer running.",
          "WORKFLOW_INSTANCE_STATUS_INSTANTIATED": "The Workflow instance is instantiated and running.",
          "WORKFLOW_INSTANCE_STATUS_SUSPENDED": "The Workflow instance is suspended and will not run until the corresponding Workflow Definition is enabled.",
          "WORKFLOW_INSTANCE_STATUS_UNKNOWN": "Unknown Workflow instance status."
        }
      },
      "workflowsWorkflowInstantiationSchedule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for this Workflow Instantiation Schedule. Automatically generated.",
            "x-output-only": true
          },
          "workflow_definition_id": {
            "type": "string",
            "description": "The ID of the Workflow Definition that will be instantiated.",
            "x-output-only": true
          },
          "workflow_definition_version_id": {
            "type": "string",
            "description": "The ID of the Workflow Definition Version that will be instantiated. Used for instantiating a Workflow with a specific version of the Workflow Definition. Required field for `CreateWorkflowInstantiationSchedule`.\n\nRequired.\nMax length: 512 characters.",
            "x-create-only": true
          },
          "cron_expression": {
            "type": "string",
            "description": "Cron expression for this Workflow Instantiation Schedule. Required for `CreateWorkflowInstantiationSchedule`.\n\nRequired.\nMax length: 512 characters.",
            "x-create-only": true
          },
          "next_run_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time that a Workflow instance will next be created.",
            "x-output-only": true
          }
        },
        "required": [
          "workflow_definition_version_id",
          "cron_expression"
        ]
      },
      "workflowsWorkflowState": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the state. Unique only within its Workflow Definition Version.",
            "x-output-only": true
          },
          "display_name": {
            "type": "string",
            "description": "A human-readable description of the state.",
            "x-output-only": true
          },
          "spawns_children": {
            "type": "boolean",
            "description": "Indicates whether this state spawns child Workflow instances.",
            "x-output-only": true
          },
          "child_workflow_definition_version_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the Workflow Definition Versions this state may instantiate.",
            "x-output-only": true
          },
          "ui": {
            "$ref": "#/components/schemas/ui_descriptorsDescriptors",
            "x-output-only": true
          },
          "required_context_keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The parameters that are required to successfully transition into this state.",
            "x-output-only": true
          },
          "expiry_event_name": {
            "type": "string",
            "description": "The name of the Workflow event that will trigger if the state expires.",
            "x-output-only": true
          }
        }
      },
      "workflowsWorkflowTransition": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the transition. Unique only within its \"from\" state.",
            "x-output-only": true
          },
          "display_name": {
            "type": "string",
            "description": "A human-readable description of the transition.",
            "x-output-only": true
          },
          "from_state_name": {
            "type": "string",
            "description": "The name of the state this transition is from.",
            "x-output-only": true
          },
          "to_state_name": {
            "type": "string",
            "description": "The name of the state this transition is to.",
            "x-output-only": true
          },
          "trigger_event_name": {
            "type": "string",
            "description": "The name of the event that triggers this transition.",
            "x-output-only": true
          }
        },
        "description": "A Workflow transition represents a possible path from one Workflow state to another. Only end-states do not have any outgoing Workflow transitions."
      },
      "right_operand_attribute_key": {
        "type": "string",
        "description": "The attribute key on the right hand side of the comparison. The corresponding value will be taken from the access control context of the call.\n\nRequired.\nMin length: 1 characters.\nMax length: 512 characters."
      },
      "event": {
        "type": "string",
        "description": "Used for workflows."
      },
      "target_status": {
        "type": "string",
        "title": "Used for tickets"
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Auth-Token"
      }
    },
    "requestBodies": {
      "policiesCreatePolicyRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/policiesCreatePolicyRequest"
            }
          }
        }
      },
      "policiesUpdatePolicyRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/policiesUpdatePolicyRequest"
            }
          }
        }
      },
      "policiesBulkEvaluatePoliciesRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/policiesBulkEvaluatePoliciesRequest"
            }
          }
        }
      },
      "policiesEvaluatePoliciesRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/policiesEvaluatePoliciesRequest"
            }
          }
        }
      },
      "tasksCreateTaskThreadRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/tasksCreateTaskThreadRequest"
            }
          }
        }
      },
      "tasksUpdateTaskThreadRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/tasksUpdateTaskThreadRequest"
            }
          }
        }
      },
      "tasksCreateTaskRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/tasksCreateTaskRequest"
            }
          }
        }
      },
      "tasksUpdateTaskRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/tasksUpdateTaskRequest"
            }
          }
        }
      },
      "ticketsCreateTicketRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ticketsCreateTicketRequest"
            }
          }
        }
      },
      "ticketsUpdateTicketRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ticketsUpdateTicketRequest"
            }
          }
        }
      },
      "workflowsCreateWorkflowDefinitionVersionRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/workflowsCreateWorkflowDefinitionVersionRequest"
            }
          }
        }
      },
      "workflowsValidateWorkflowDefinitionVersionRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/workflowsValidateWorkflowDefinitionVersionRequest"
            }
          }
        }
      },
      "workflowsUpdateWorkflowDefinitionRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/workflowsUpdateWorkflowDefinitionRequest"
            }
          }
        }
      },
      "workflowsCreateWorkflowInstanceEventRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/workflowsCreateWorkflowInstanceEventRequest"
            }
          }
        }
      },
      "workflowsRetryPreviousWorkflowInstanceEventRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/workflowsRetryPreviousWorkflowInstanceEventRequest"
            }
          }
        }
      },
      "workflowsRetryWorkflowInTechnicalErrorRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/workflowsRetryWorkflowInTechnicalErrorRequest"
            }
          }
        }
      },
      "workflowsCreateWorkflowInstanceRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/workflowsCreateWorkflowInstanceRequest"
            }
          }
        }
      },
      "workflowsSimulateWorkflowInstanceRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/workflowsSimulateWorkflowInstanceRequest"
            }
          }
        }
      },
      "workflowsCreateWorkflowInstantiationScheduleRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/workflowsCreateWorkflowInstantiationScheduleRequest"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}