{
  "info": {
    "title": "Data Loader Api",
    "version": "v1"
  },
  "paths": {
    "/v1/dependency-groups": {
      "get": {
        "summary": "Retrieves all the dependency groups, filtered by status.",
        "operationId": "ListDependencyGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListDependencyGroupsResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The statuses of the data to be returned. Optional.",
            "name": "dependency_group_statuses",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "DEPENDENCY_GROUP_STATUS_UNKNOWN": "Default value."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DEPENDENCY_GROUP_STATUS_UNKNOWN",
                  "DEPENDENCY_GROUP_STATUS_PENDING",
                  "DEPENDENCY_GROUP_STATUS_COMPLETE",
                  "DEPENDENCY_GROUP_STATUS_FAILED",
                  "DEPENDENCY_GROUP_STATUS_REJECTED"
                ]
              }
            }
          },
          {
            "description": "The number of results to be listed. Required; must be non-zero.",
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "last_updated_timestamp_range.from",
            "in": "query",
            "required": false,
            "description": "The timestamp range within which the data to be returned must have been last updated. This range is from `last_updated_timestamp_range.from` up to and not including `last_updated_timestamp_range.to`. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "last_updated_timestamp_range.to",
            "in": "query",
            "required": false,
            "description": "The timestamp range within which the data to be returned must have been last updated. This range is from `last_updated_timestamp_range.from` up to and not including `last_updated_timestamp_range.to`. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          }
        ],
        "tags": [
          "DataLoaderAPI"
        ],
        "x-section": "Data loader",
        "x-release-info": {
          "noticeVersion": {
            "major": 4,
            "minor": 6
          },
          "releaseVersion": {
            "major": 6
          },
          "changeType": "REMOVE_METHOD",
          "description": "Dependency Group resources are deprecated."
        },
        "x-permission-scopes": [
          "data_loader:read",
          "data_loader.dependency_groups:read"
        ]
      }
    },
    "/v1/dependency-groups:batchGet": {
      "get": {
        "summary": "Retrieves one or more dependency groups based on their dependency group IDs.",
        "operationId": "BatchGetDependencyGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1BatchGetDependencyGroupsResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of dependency groups that are to be retrieved. Required; must be non-empty.\n\nRequired.\nMin length: 1 characters.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "DataLoaderAPI"
        ],
        "x-section": "Data loader",
        "x-release-info": {
          "noticeVersion": {
            "major": 4,
            "minor": 6
          },
          "releaseVersion": {
            "major": 6
          },
          "changeType": "REMOVE_METHOD",
          "description": "Dependency Group resources are deprecated."
        },
        "x-permission-scopes": [
          "data_loader:read",
          "data_loader.dependency_groups:read"
        ]
      }
    },
    "/v1/resource-batches": {
      "get": {
        "summary": "Retrieves all the resource batches filtered by status.",
        "operationId": "ListResourceBatches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListResourceBatchesResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The statuses of the data to be returned. Optional.",
            "name": "resource_batch_statuses",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "RESOURCE_BATCH_STATUS_COMPLETE": "All resources within the batch have been successfully loaded.",
              "RESOURCE_BATCH_STATUS_FAILED": "At least one resource within the batch has failed loading.",
              "RESOURCE_BATCH_STATUS_PENDING": "There are resources within the batch still in progress.",
              "RESOURCE_BATCH_STATUS_REJECTED": "At least one resource within the batch has been rejected during validation.",
              "RESOURCE_BATCH_STATUS_REJECTED_RESOURCE_DUPLICATED": "At least one resource within the batch has been previously loaded.",
              "RESOURCE_BATCH_STATUS_UNKNOWN": "Default value."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "RESOURCE_BATCH_STATUS_UNKNOWN",
                  "RESOURCE_BATCH_STATUS_PENDING",
                  "RESOURCE_BATCH_STATUS_COMPLETE",
                  "RESOURCE_BATCH_STATUS_FAILED",
                  "RESOURCE_BATCH_STATUS_REJECTED",
                  "RESOURCE_BATCH_STATUS_REJECTED_RESOURCE_DUPLICATED"
                ]
              }
            }
          },
          {
            "description": "The number of results to be listed. Required; must be non-zero.",
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "last_updated_timestamp_range.from",
            "in": "query",
            "required": false,
            "description": "The timestamp range within which the data to be returned must have been last updated. This range is from `last_updated_timestamp_range.from` up to and not including `last_updated_timestamp_range.to`. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          },
          {
            "schema": {
              "type": "string"
            },
            "name": "last_updated_timestamp_range.to",
            "in": "query",
            "required": false,
            "description": "The timestamp range within which the data to be returned must have been last updated. This range is from `last_updated_timestamp_range.from` up to and not including `last_updated_timestamp_range.to`. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          }
        ],
        "tags": [
          "DataLoaderAPI"
        ],
        "x-section": "Data loader",
        "x-permission-scopes": [
          "data_loader:read",
          "data_loader.resource_batches:read"
        ]
      }
    },
    "/v1/resource-batches/{id}": {
      "get": {
        "summary": "Retrieves a specific resource batch by resource batch ID.",
        "operationId": "GetResourceBatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ResourceBatch"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the resource batch to be retrieved. Required.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "DataLoaderAPI"
        ],
        "x-section": "Data loader",
        "x-permission-scopes": [
          "data_loader:read",
          "data_loader.resource_batches:read"
        ]
      }
    },
    "/v1/resource-batches:batchGet": {
      "get": {
        "summary": "Retrieves one or more resource batches based on their resource batch IDs.",
        "operationId": "BatchGetResourceBatches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1BatchGetResourceBatchesResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of resource batches that are to be retrieved. Required; must be non-empty.\n\nRequired.\nMin length: 1 characters.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "DataLoaderAPI"
        ],
        "x-section": "Data loader",
        "x-permission-scopes": [
          "data_loader:read",
          "data_loader.resource_batches:read"
        ]
      }
    },
    "/v1/resources": {
      "get": {
        "summary": "Retrieves and filters resources by status, dependency group ID or resource batch ID.",
        "operationId": "ListResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ListResourcesResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The dependency group IDs of the data to be returned. Optional.",
            "name": "dependency_group_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The resource batch IDs of the data to be returned. Optional.",
            "name": "resource_batch_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The statuses of the data to be returned. Optional.",
            "name": "resource_statuses",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "RESOURCE_STATUS_ASYNC_COMPLETE": "The results of all asynchronous operations have been received and were successful",
              "RESOURCE_STATUS_FAILED": "Loading the resource has failed.",
              "RESOURCE_STATUS_LOADED": "The resource has been successfully loaded.",
              "RESOURCE_STATUS_PENDING": "The resource hasn't been picked up by the committer or is in progress.",
              "RESOURCE_STATUS_REJECTED": "The resource has been rejected during validation.",
              "RESOURCE_STATUS_SENT": "The resource has been sent to Vault and the committer is waiting on the result of an asynchronous operation (no longer in use).",
              "RESOURCE_STATUS_UNKNOWN": "Default value."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "RESOURCE_STATUS_UNKNOWN",
                  "RESOURCE_STATUS_PENDING",
                  "RESOURCE_STATUS_LOADED",
                  "RESOURCE_STATUS_FAILED",
                  "RESOURCE_STATUS_REJECTED",
                  "RESOURCE_STATUS_SENT",
                  "RESOURCE_STATUS_ASYNC_COMPLETE"
                ]
              }
            }
          },
          {
            "description": "The resource types of the data to be returned. Optional.",
            "name": "resource_types",
            "in": "query",
            "required": false,
            "x-enum-value-release-info": {
              "RESOURCE_TYPE_PARAMETER_VALUE": {
                "releaseVersion": {
                  "major": 5
                },
                "changeType": "ADD_ENUM_VALUE",
                "featureFlag": "TM_77187_DATA_LOADER_PARAMETERS_V2"
              }
            },
            "x-enum-value-descriptions": {
              "RESOURCE_TYPE_ACCOUNT": "Resource type describing an account object.",
              "RESOURCE_TYPE_ACCOUNT_PLAN_ASSOC": "Resource type describing an account plan association object.",
              "RESOURCE_TYPE_CUSTOMER": "Resource type describing a customer object.",
              "RESOURCE_TYPE_FLAG": "Resource type describing a flag object.",
              "RESOURCE_TYPE_PARAMETER_VALUE": "Resource type describing a parameter value object.",
              "RESOURCE_TYPE_PAYMENT_DEVICE": "Resource type describing a payment device object.",
              "RESOURCE_TYPE_PAYMENT_DEVICE_LINK": "Resource type describing a payment device link object.",
              "RESOURCE_TYPE_PAYMENT_HUB_BANK_ACCOUNT": "Resource type describing a payments hub bank account object.",
              "RESOURCE_TYPE_PAYMENT_HUB_DIRECT_DEBIT": "Resource type describing a payments hub direct debit object.",
              "RESOURCE_TYPE_PAYMENT_HUB_FUTURE_PAYMENT_INSTRUCTION": "Resource type describing a payments hub future payment instruction object.",
              "RESOURCE_TYPE_PAYMENT_HUB_MANDATE": "Resource type describing a payments hub mandate object.",
              "RESOURCE_TYPE_PAYMENT_HUB_PAYMENT": "Resource type describing a payments hub payment object.",
              "RESOURCE_TYPE_PAYMENT_HUB_STANDING_ORDER_INSTRUCTION": "Resource type describing a payments hub standing order instruction object.",
              "RESOURCE_TYPE_PAYMENT_HUB_UK_BBAN": "Resource type describing a payments hub uk BBAN object.",
              "RESOURCE_TYPE_PAYMENT_HUB_UK_IBAN": "Resource type describing a payments hub uk IBAN object",
              "RESOURCE_TYPE_PLAN": "Resource type describing a plan object.",
              "RESOURCE_TYPE_RESTRICTION_SET": "Resource type describing a restriction set object.",
              "RESOURCE_TYPE_UNKNOWN": "Default value.",
              "RESOURCE_TYPE_XPL_PAYEE": "Resource type describing a payments hub payee object."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "RESOURCE_TYPE_UNKNOWN",
                  "RESOURCE_TYPE_CUSTOMER",
                  "RESOURCE_TYPE_ACCOUNT",
                  "RESOURCE_TYPE_PAYMENT_DEVICE",
                  "RESOURCE_TYPE_PAYMENT_DEVICE_LINK",
                  "RESOURCE_TYPE_FLAG",
                  "RESOURCE_TYPE_RESTRICTION_SET",
                  "RESOURCE_TYPE_PLAN",
                  "RESOURCE_TYPE_ACCOUNT_PLAN_ASSOC",
                  "RESOURCE_TYPE_PAYMENT_HUB_BANK_ACCOUNT",
                  "RESOURCE_TYPE_PAYMENT_HUB_PAYMENT",
                  "RESOURCE_TYPE_PAYMENT_HUB_UK_BBAN",
                  "RESOURCE_TYPE_PAYMENT_HUB_UK_IBAN",
                  "RESOURCE_TYPE_XPL_PAYEE",
                  "RESOURCE_TYPE_PAYMENT_HUB_STANDING_ORDER_INSTRUCTION",
                  "RESOURCE_TYPE_PAYMENT_HUB_FUTURE_PAYMENT_INSTRUCTION",
                  "RESOURCE_TYPE_PAYMENT_HUB_MANDATE",
                  "RESOURCE_TYPE_PAYMENT_HUB_DIRECT_DEBIT",
                  "RESOURCE_TYPE_PARAMETER_VALUE"
                ]
              }
            }
          },
          {
            "description": "The number of results to be listed. Required; must be non-zero.",
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "DataLoaderAPI"
        ],
        "x-section": "Data loader",
        "x-permission-scopes": [
          "data_loader:read",
          "data_loader.resources:read"
        ]
      }
    },
    "/v1/resources/{id}": {
      "get": {
        "summary": "Retrieves a specific resource by resource ID.",
        "operationId": "GetResource",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1Resource"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the resource to be retrieved. Required.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "DataLoaderAPI"
        ],
        "x-section": "Data loader",
        "x-permission-scopes": [
          "data_loader:read",
          "data_loader.resources:read"
        ]
      }
    }
  },
  "x-sections": {
    "Data loader": {}
  },
  "openapi": "3.0.1",
  "components": {
    "schemas": {
      "GlobalErrorsDEADLINE_EXCEEDED_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "DEADLINE_EXCEEDED"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "GlobalErrorsINTERNAL_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "INTERNAL"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "GlobalErrorsRESOURCE_EXHAUSTED_2": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "RESOURCE_EXHAUSTED"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "GlobalErrorsUNAVAILABLE_3": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "UNAVAILABLE"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "GlobalErrorsUNKNOWN_4": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "UNKNOWN"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "PublicAPIErrorsPERMISSION_DENIED_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "PERMISSION_DENIED"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "PublicAPIErrorsUNAUTHENTICATED_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "UNAUTHENTICATED"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "accountingTside": {
        "type": "string",
        "enum": [
          "TSIDE_UNKNOWN",
          "TSIDE_ASSET",
          "TSIDE_LIABILITY"
        ],
        "default": "TSIDE_UNKNOWN",
        "description": "The side of the balance sheet where an account balance is counted. Determines the sign with which a credit/debit posting affects a balance.",
        "x-enum-value-descriptions": {
          "TSIDE_ASSET": "Debit postings increase balances for asset accounts.",
          "TSIDE_LIABILITY": "Credit postings increase balances for liability accounts.",
          "TSIDE_UNKNOWN": "Default Value, invalid."
        }
      },
      "accountsAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for an account. Optional for create requests.\n\nMax length: 36 characters."
          },
          "name": {
            "type": "string",
            "description": "The account name."
          },
          "product_id": {
            "type": "string",
            "description": "The ID of the product the account is associated with. Can be obtained using the /v1/products endpoint. Required for create requests if `product_version_id` is not provided."
          },
          "product_version_id": {
            "type": "string",
            "description": "The ID of the product version matching the product ID. Required for create requests if `product_id` is not provided."
          },
          "permitted_denominations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "title": "A set of denominations accessible from within the Smart Contract:<br><br> - If the Product Version specifies supported denominations, then this set must be a subset of those (if none are specified here then the field will be set to the Product Version's supported denominations).<br> - If the Product Version does not specify denominations, then it will be set to the permitted_denominations entry of values.yaml<br><br> Incoming postings are not required to specify a denomination contained in this list; if this functionality is required then it must be implemented in the Smart Contract.<br><br> **Warning: This field is not automatically validated on postings made against an account; this must be enforced in the contracts language.**"
          },
          "status": {
            "$ref": "#/components/schemas/accounts_commonAccountStatus",
            "description": "The status of the account. Optional for creation. Valid updates are from ACCOUNT_STATUS_PENDING to ACCOUNT_STATUS_OPEN or ACCOUNT_STATUS_CANCELLED, ACCOUNT_STATUS_OPEN to ACCOUNT_STATUS_PENDING_CLOSURE or ACCOUNT_STATUS_CLOSED, ACCOUNT_STATUS_PENDING_CLOSURE to ACCOUNT_STATUS_CLOSED. Updating the status to ACCOUNT_STATUS_OPEN will trigger the creation of an account update with an `activation_update` field and run the contract activation code. Updating the status to ACCOUNT_STATUS_PENDING_CLOSURE will trigger the creation of an account update with a closure_update field and run the contract close code. Accounts with the status ACCOUNT_STATUS_PENDING_CLOSURE can only be updated to ACCOUNT_STATUS_CLOSED. Accounts can only be updated to ACCOUNT_STATUS_CLOSED once the `closure_update` account update had the status ACCOUNT_UPDATE_STATUS_COMPLETED and the account has a zero balance. The account status can be updated directly to CLOSED from OPEN if the closing timestamp is provided and is also updated in the same call."
          },
          "opening_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the account was opened. Optional for create. If supplied during account creation, the account must be created with status ACCOUNT_STATUS_OPEN and the opening_timestamp value must not be a time in the future."
          },
          "closing_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the account was closed. Can be updated to a time in the past directly if the account status is updated to CLOSED in the same call. The account status must be OPEN or PENDING_CLOSURE to update the closing timestamp."
          },
          "stakeholder_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The customer IDs that can access the account. Required for create requests."
          },
          "instance_param_vals": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The instance-level parameters for the associated product; a map of the parameter name to value. The instance-level parameters provided (which must be non-derived instance-level parameters when provided in create requests) that have been defined in the account's Smart Contract code; a map of the parameter name to value. Optional for create requests. When the account GetAccount request `fields_to_include` field is set to INCLUDE_FIELD_DERIVED_INSTANCE_PARAM_VALS, derived instance-level parameters will be displayed in the`derived_instance_param_vals` field of the account. Non-derived instance parameters will only ever appear in the account`instance_param_vals` field."
          },
          "derived_instance_param_vals": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The derived instance-level parameters for the associated product that have been defined in the account's Smart Contract code; a map of the parameter name to value.",
            "x-output-only": true
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map of unstructured fields that hold instance-specific account details, for example, the source of funds. Optional for create requests.<br> <br>The details must not include:<br> - Any image data, including any KYC collateral such as passport, licence or other images. These must be stored in a separate repository outside of Vault.<br> - Any data that is classified as PII data.<br> The details cannot be utilised by Smart Contracts to drive any type of product behaviour.<br><br> Max size: 1MB (but it is strongly recommended to keep below this size)."
          },
          "accounting": {
            "$ref": "#/components/schemas/accounts_commonAccounting",
            "description": "The accounting data that Vault supports as first-class fields."
          }
        }
      },
      "accounts_commonAccountStatus": {
        "type": "string",
        "enum": [
          "ACCOUNT_STATUS_UNKNOWN",
          "ACCOUNT_STATUS_OPEN",
          "ACCOUNT_STATUS_CLOSED",
          "ACCOUNT_STATUS_CANCELLED",
          "ACCOUNT_STATUS_PENDING_CLOSURE",
          "ACCOUNT_STATUS_PENDING"
        ],
        "default": "ACCOUNT_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "ACCOUNT_STATUS_CANCELLED": "Account was requested but was never approved, it is now permanently closed.",
          "ACCOUNT_STATUS_CLOSED": "Account was previously open but is now permanently closed.",
          "ACCOUNT_STATUS_OPEN": "Account has been approved and transactions are allowed.",
          "ACCOUNT_STATUS_PENDING": "Account and contract record has been created, it is waiting for another call to be made open.",
          "ACCOUNT_STATUS_PENDING_CLOSURE": "Account was requested closure but contract and account closure are not finished.",
          "ACCOUNT_STATUS_UNKNOWN": "Default value."
        }
      },
      "accounts_commonAccounting": {
        "type": "object",
        "properties": {
          "tside": {
            "$ref": "#/components/schemas/accountingTside",
            "description": "The side of the balance sheet where the account balance is counted. Can be optionally provided when creating Internal Accounts. Has no effect if provided when creating Customer Accounts."
          }
        }
      },
      "authIdentifier": {
        "type": "object",
        "properties": {
          "identifier_type": {
            "$ref": "#/components/schemas/authIdentifierType",
            "description": "The type of identifier."
          },
          "identifier": {
            "type": "string",
            "description": "The string value of the identifier. Must be unique."
          }
        },
        "description": "Identifiers associated with a user."
      },
      "authIdentifierType": {
        "type": "string",
        "enum": [
          "IDENTIFIER_TYPE_UNKNOWN",
          "IDENTIFIER_TYPE_USERNAME",
          "IDENTIFIER_TYPE_EMAIL",
          "IDENTIFIER_TYPE_PHONE"
        ],
        "default": "IDENTIFIER_TYPE_UNKNOWN",
        "x-enum-value-descriptions": {
          "IDENTIFIER_TYPE_EMAIL": "An email identifier.",
          "IDENTIFIER_TYPE_PHONE": "A phone number identifier.",
          "IDENTIFIER_TYPE_UNKNOWN": "An unknown identifier type.",
          "IDENTIFIER_TYPE_USERNAME": "A username identifier."
        }
      },
      "bank_accountsBankAccountStatus": {
        "type": "string",
        "enum": [
          "BANK_ACCOUNT_STATUS_UNKNOWN",
          "BANK_ACCOUNT_STATUS_ACTIVE",
          "BANK_ACCOUNT_STATUS_INACTIVE"
        ],
        "default": "BANK_ACCOUNT_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "BANK_ACCOUNT_STATUS_ACTIVE": "When a `BankAccount` is ACTIVE, it is possible to route [Payments](/api/payments_hub_api/#Payments), [Scheduled Payments](/api/payments_hub_api/#Scheduled_payments) and [Direct Debits](/api/payments_hub_api/#Direct_Debits) via it. Invalid for use with Update.",
          "BANK_ACCOUNT_STATUS_INACTIVE": "When a `BankAccount` is INACTIVE, it is not possible to route [Payments](/api/payments_hub_api/#Payments), [Scheduled Payments](/api/payments_hub_api/#Scheduled_payments) or [Direct Debits](/api/payments_hub_api/#Direct_Debits) via it. This is a terminal status.",
          "BANK_ACCOUNT_STATUS_UNKNOWN": "Default value. Invalid for use with Update."
        }
      },
      "bank_accountsRoutingAddress": {
        "type": "object",
        "properties": {
          "bank_id_code": {
            "type": "string",
            "description": "The Bank ID Code identifies the country in which this `BankAccount` is located. Required if `iban` is not populated on creation.",
            "x-example-override": "GBDSC"
          },
          "bank_id": {
            "type": "string",
            "description": "The Bank ID identifies a particular bank branch. Required if `iban` is not populated on creation.",
            "x-example-override": "123456"
          },
          "account_number": {
            "type": "string",
            "description": "The Account Number identifies the account within the bank. Required if `iban` is not populated on creation.",
            "x-example-override": "12345678"
          }
        }
      },
      "customersCustomer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the customer. Defaults to a generated string ID if not provided.\n",
            "x-release-info": {
              "noticeVersion": {
                "major": 3,
                "minor": 3
              },
              "releaseVersion": {
                "major": 5
              },
              "changeType": "UPDATE_DEFAULT_FIELD_BEHAVIOUR",
              "description": "Defaults to a generated UUID instead of a string representation of an int64",
              "featureFlag": "TMV_215_STRING_CUSTOMER_IDS"
            },
            "x-example-override": "86d86f07-7ba6-466e-9f41-f72c24e9b13b"
          },
          "status": {
            "$ref": "#/components/schemas/customersCustomerStatus",
            "description": "The status of the customer. Optional for creation; can be PROSPECT or ACTIVE. Defaults to ACTIVE for creation.",
            "x-example-override": "CUSTOMER_STATUS_ACTIVE"
          },
          "identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/authIdentifier"
            },
            "description": "The registered identifiers of the customer. A customer could have multiple identifiers associated with them, for example, a phone number, email address or username.",
            "x-example-override": "[{\"identifier_type\": \"IDENTIFIER_TYPE_EMAIL\", \"identifier\": \"api_user@domain.com\"}, {\"identifier_type\": \"IDENTIFIER_TYPE_USERNAME\", \"identifier\": \"api_user\"}, {\"identifier_type\": \"IDENTIFIER_TYPE_PHONE\", \"identifier\": \"+447700900796\"}]"
          },
          "customer_details": {
            "$ref": "#/components/schemas/customersCustomerDetails",
            "description": "Current details. Optional for create requests. This field will be replaced by a more general details object in a future release."
          },
          "additional_details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key value map of additional, non-structured customer details.<br> <br>The details must not include:<br> - Any image data, including any KYC collateral such as passport, licence or other images. These must be stored in a separate repository outside of Vault.<br> - Any data that is classified as PII data.<br> The details cannot be utilised by Smart Contracts to drive any type of product behaviour.<br><br> Max size: 1MB (but it is strongly recommended to keep below this size).",
            "x-example-override": "{\"key1\": \"value1\"}"
          }
        }
      },
      "customersCustomerAccessibility": {
        "type": "string",
        "enum": [
          "CUSTOMER_ACCESSIBILITY_UNKNOWN",
          "CUSTOMER_ACCESSIBILITY_AUDIO",
          "CUSTOMER_ACCESSIBILITY_LARGE_PRINT",
          "CUSTOMER_ACCESSIBILITY_BRAILLE",
          "CUSTOMER_ACCESSIBILITY_DEAF"
        ],
        "default": "CUSTOMER_ACCESSIBILITY_UNKNOWN",
        "description": "The customer's accessibility requirements.",
        "x-enum-value-descriptions": {
          "CUSTOMER_ACCESSIBILITY_AUDIO": "Audio required.",
          "CUSTOMER_ACCESSIBILITY_BRAILLE": "Braille required.",
          "CUSTOMER_ACCESSIBILITY_DEAF": "User is deaf.",
          "CUSTOMER_ACCESSIBILITY_LARGE_PRINT": "Large print required.",
          "CUSTOMER_ACCESSIBILITY_UNKNOWN": "Unknown accessibility."
        }
      },
      "customersCustomerContactMethod": {
        "type": "string",
        "enum": [
          "CUSTOMER_CONTACT_METHOD_UNKNOWN",
          "CUSTOMER_CONTACT_METHOD_NONE",
          "CUSTOMER_CONTACT_METHOD_EMAIL",
          "CUSTOMER_CONTACT_METHOD_SMS",
          "CUSTOMER_CONTACT_METHOD_NOTIFICATION"
        ],
        "default": "CUSTOMER_CONTACT_METHOD_UNKNOWN",
        "description": "The customer's preferred method of contact."
      },
      "customersCustomerDetails": {
        "type": "object",
        "properties": {
          "title": {
            "$ref": "#/components/schemas/customersCustomerTitle",
            "description": "The customer's title. Optional for create requests.",
            "x-example-override": "CUSTOMER_TITLE_MR"
          },
          "first_name": {
            "type": "string",
            "description": "The customer's first name. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "Daniel"
          },
          "middle_name": {
            "type": "string",
            "description": "The customer's middle name. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "Abbas"
          },
          "last_name": {
            "type": "string",
            "description": "The customer's last name. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "Chorley"
          },
          "dob": {
            "type": "string",
            "description": "The customer's date of birth. Optional for create requests.\nThis field must contain a valid ISO-formatted date, e.g. 2018-06-03.",
            "x-example-override": "1980-12-25"
          },
          "gender": {
            "$ref": "#/components/schemas/customersCustomerGender",
            "description": "The customer's gender. Optional for create requests.",
            "x-example-override": "CUSTOMER_GENDER_MALE"
          },
          "nationality": {
            "type": "string",
            "description": "The customer's nationality. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "British"
          },
          "email_address": {
            "type": "string",
            "description": "The customer's email address. Optional for create requests.\nThis field must contain a valid email address.",
            "x-example-override": "api_user@domain.com"
          },
          "mobile_phone_number": {
            "type": "string",
            "description": "The customer's mobile phone number. Optional for create requests.\nThis field must contain a valid telephone number.",
            "x-example-override": "+447700900796"
          },
          "home_phone_number": {
            "type": "string",
            "description": "The customer's home phone number. Optional for create requests.\nThis field must contain a valid telephone number.",
            "x-example-override": "+441632960138"
          },
          "business_phone_number": {
            "type": "string",
            "description": "The customer's business phone number. Optional for create requests.\nThis field must contain a valid telephone number.",
            "x-example-override": "+442079460933"
          },
          "contact_method": {
            "$ref": "#/components/schemas/customersCustomerContactMethod",
            "description": "The customer's preferred method of contact. Optional for create requests.",
            "x-example-override": "CUSTOMER_CONTACT_METHOD_EMAIL"
          },
          "country_of_residence": {
            "type": "string",
            "description": "The customer's country of residence. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "GB"
          },
          "country_of_taxation": {
            "type": "string",
            "description": "The customer's country of taxation. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "GB"
          },
          "accessibility": {
            "$ref": "#/components/schemas/customersCustomerAccessibility",
            "description": "The customer's accessibility requirements. Optional for create requests.",
            "x-example-override": "CUSTOMER_ACCESSIBILITY_LARGE_PRINT"
          },
          "external_customer_id": {
            "type": "string",
            "description": "An external customer ID. May be used to associate a customer in Vault with an existing customer ID. Vault does not use this for any other purpose. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "b29ebe57-fbcd-4377-95b5-b0e3f3cf95d7"
          }
        },
        "description": "Customer details. This details object will be replaced by a more general object in the future."
      },
      "customersCustomerGender": {
        "type": "string",
        "enum": [
          "CUSTOMER_GENDER_UNKNOWN",
          "CUSTOMER_GENDER_FEMALE",
          "CUSTOMER_GENDER_MALE"
        ],
        "default": "CUSTOMER_GENDER_UNKNOWN",
        "description": "The customer's gender."
      },
      "customersCustomerStatus": {
        "type": "string",
        "enum": [
          "CUSTOMER_STATUS_UNKNOWN",
          "CUSTOMER_STATUS_ACTIVE",
          "CUSTOMER_STATUS_FROZEN",
          "CUSTOMER_STATUS_DECEASED",
          "CUSTOMER_STATUS_PROSPECT"
        ],
        "default": "CUSTOMER_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "CUSTOMER_STATUS_ACTIVE": "The customer status is active. To open an account, the customer status must be active; accounts cannot be opened for a customer with any other customer status. The status of an active customer could change to either frozen or deceased but cannot change to prospect.",
          "CUSTOMER_STATUS_DECEASED": "The customer status is deceased. Accounts cannot be opened for the customer but may still be active. The status of a deceased customer could change to either active or frozen but cannot change to prospect.",
          "CUSTOMER_STATUS_FROZEN": "The customer status is frozen. Accounts cannot be opened for the customer. The status of a frozen customer could change to either active or deceased but cannot change to prospect.",
          "CUSTOMER_STATUS_PROSPECT": "The customer status is not yet active. Accounts cannot be opened. The status of a prospect customer can only change to active. Once the status has changed from prospect, it cannot be changed back to prospect.",
          "CUSTOMER_STATUS_UNKNOWN": "The customer status is unknown."
        }
      },
      "customersCustomerTitle": {
        "type": "string",
        "enum": [
          "CUSTOMER_TITLE_UNKNOWN",
          "CUSTOMER_TITLE_MISS",
          "CUSTOMER_TITLE_MR",
          "CUSTOMER_TITLE_MRS",
          "CUSTOMER_TITLE_MS"
        ],
        "default": "CUSTOMER_TITLE_UNKNOWN",
        "description": "The customer's title."
      },
      "direct_debitsDirectDebit": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the resource in the PaymentHub (UUID). Optional on resource creation; if it is not set, a UUID will be generated.",
            "x-example-override": "3b595fb4-3f7e-4dbb-a1b5-e59db8d5ee77"
          },
          "scheme_id": {
            "type": "string",
            "description": "The payment [Scheme](/api/payments_hub_api/#Schemes) that the Direct Debit belongs to. The scheme must be `ACTIVE` for the resource to be created. Required on resource creation.",
            "x-example-override": "BACS"
          },
          "identifiers": {
            "$ref": "#/components/schemas/direct_debitsPaymentIdentifiers",
            "description": "Payment identifiers provides means of referencing a Direct Debit transaction."
          },
          "mandate_id": {
            "type": "string",
            "description": "The ID of the [Mandate](/api/payments_hub_api/#Mandates) this Direct Debit belongs to.",
            "x-example-override": "5c35ad08-6c81-4584-a5e3-38448a6fdb4e"
          },
          "mandate_reference": {
            "type": "string",
            "description": "The reference of the [Mandate](/api/payments_hub_api/#Mandates). This field is used during mandate validation to match a Direct Debit with an existing active mandate. Upon successful mandate resolution, `mandate_id` will be populated with the mandate ID. Required.\n\nNote that this field may not be the exact match of the actual mandate reference as some schemes support partial matching. For example, a Bacs Direct Debit collection which relates to a mandate with reference `ABCD1234` may have this field set to `ABCD1234/1-JAN`, `ABCD1234/2-FEB`, etc.",
            "x-example-override": "ABCD1234/1-JAN"
          },
          "debitor_party": {
            "$ref": "#/components/schemas/v1partyParty",
            "description": "The details of the party receiving the Direct Debit (the party sending the funds). Required on resource creation."
          },
          "creditor_party": {
            "$ref": "#/components/schemas/v1partyParty",
            "description": "The details of the party sending the Direct Debit (the party receiving the funds). Required on resource creation."
          },
          "creditor_scheme_id": {
            "type": "string",
            "description": "The unique ID of the creditor within the scheme. Required on resource creation.",
            "x-example-override": "112233"
          },
          "amount": {
            "type": "string",
            "description": "The amount of the Direct Debit. This is an unsigned floating point number with an optional decimal point, for example, \"10.00\", \"10.1\", \"0.0123\", \"5\". It must be positive and non-zero."
          },
          "currency": {
            "type": "string",
            "description": "The three-letter alphabetic currency code based on ISO 4217, for example GBP or USD. Required on resource creation."
          },
          "direction": {
            "$ref": "#/components/schemas/direct_debitsDirectDebitDirection",
            "description": "The direction of the Direct Debit. Required on resource creation.",
            "x-example-override": "DIRECT_DEBIT_DIRECTION_OUTBOUND"
          },
          "type": {
            "$ref": "#/components/schemas/direct_debitsDirectDebitType",
            "description": "The type of the Direct Debit. Required on resource creation."
          },
          "status": {
            "$ref": "#/components/schemas/direct_debitsDirectDebitStatus",
            "description": "The current status of the resource. It can be either empty or set to `RETURNED` on creation if the user wants to record returned inbound direct debits. If left empty on creation, the resource is returned with status `RECEIVED` on successful initial validation of the field syntax."
          },
          "metadata": {
            "$ref": "#/components/schemas/protobufStruct",
            "description": "Metadata related to the Direct Debit. Optional.",
            "x-third-party": "GOOGLE_PROTOBUF_STRUCT",
            "x-example-override": "{\"Example key\": \"Example value\"}"
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The logical time indicating when the Direct Debit was created. For non-migrated Direct Debits, this is the time the Direct Debit was created within Vault and it should not be manually set on mutation requests. In the case of migrated Direct Debits, the `created_timestamp` value should be set on create requests to the time that the Direct Debit was created in the legacy system, and the `migration_info.migration_timestamp` field should contain the time the Direct Debit was migrated to Vault.",
            "x-third-party": "GOOGLE_PROTOBUF_TIMESTAMP"
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the last change to the Direct Debit occurred.",
            "x-third-party": "GOOGLE_PROTOBUF_TIMESTAMP"
          },
          "scheme_status_code": {
            "type": "string",
            "description": "A scheme-specific code whose meaning in the scheme explains the current resource status. Optional.",
            "x-example-override": "6"
          },
          "settlement_date": {
            "type": "string",
            "description": "A string representation of the date that the payment is settled. Validation is performed on the YYYY-MM-DD format of this value.",
            "x-example-override": "2020-02-20"
          },
          "status_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1direct_debitsStatusDetails"
            },
            "description": "Provides information about why the Direct Debit has a specific `status`. Optional.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 5
              },
              "changeType": "ADD_FIELD",
              "description": "Field added so client can have the reason for the Direct Debit `status`"
            }
          },
          "migration_info": {
            "$ref": "#/components/schemas/v1direct_debitsMigrationInfo",
            "description": "Migration information for Direct Debits that have been migrated into Vault from another platform.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 5
              },
              "changeType": "ADD_FIELD",
              "description": "Field added so client can migrate Direct Debit from legacy system"
            }
          },
          "returned_by_direct_debit_id": {
            "$ref": "#/components/schemas/returned_by_direct_debit_id",
            "required": false
          },
          "reversed_by_direct_debit_id": {
            "$ref": "#/components/schemas/reversed_by_direct_debit_id",
            "required": false
          },
          "refunded_by_claim_id": {
            "$ref": "#/components/schemas/refunded_by_claim_id",
            "required": false
          }
        }
      },
      "direct_debitsDirectDebitDirection": {
        "type": "string",
        "enum": [
          "DIRECT_DEBIT_DIRECTION_UNKNOWN",
          "DIRECT_DEBIT_DIRECTION_INBOUND",
          "DIRECT_DEBIT_DIRECTION_OUTBOUND"
        ],
        "default": "DIRECT_DEBIT_DIRECTION_UNKNOWN",
        "x-enum-value-descriptions": {
          "DIRECT_DEBIT_DIRECTION_INBOUND": "Incoming Direct Debit processed by the debitor party's bank.",
          "DIRECT_DEBIT_DIRECTION_OUTBOUND": "Outgoing Direct Debit generated by the creditor party's bank.",
          "DIRECT_DEBIT_DIRECTION_UNKNOWN": "Default Direct Debit direction."
        }
      },
      "direct_debitsDirectDebitStatus": {
        "type": "string",
        "enum": [
          "DIRECT_DEBIT_STATUS_UNKNOWN",
          "DIRECT_DEBIT_STATUS_RECEIVED",
          "DIRECT_DEBIT_STATUS_INITIATED",
          "DIRECT_DEBIT_STATUS_SUBMITTED",
          "DIRECT_DEBIT_STATUS_COMPLETED",
          "DIRECT_DEBIT_STATUS_RETURNED",
          "DIRECT_DEBIT_STATUS_CANCELLED",
          "DIRECT_DEBIT_STATUS_COMPLETED_WITH_FAILURE",
          "DIRECT_DEBIT_STATUS_COMPLETED_UNMATCHED"
        ],
        "default": "DIRECT_DEBIT_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "DIRECT_DEBIT_STATUS_CANCELLED": "The Direct Debit has been cancelled by the originator.",
          "DIRECT_DEBIT_STATUS_COMPLETED": "The Direct Debit cycle has been completed (the transaction has been accepted by the counterparty).",
          "DIRECT_DEBIT_STATUS_COMPLETED_UNMATCHED": "The Direct Debit cycle has been completed but it has not been possible to match the resource to the original Direct Debit.",
          "DIRECT_DEBIT_STATUS_COMPLETED_WITH_FAILURE": "The Direct Debit cycle has been completed but the original posting has failed so an alternative posting to a unapplied account has been made.",
          "DIRECT_DEBIT_STATUS_INITIATED": "The Direct Debit processing has been initiated.",
          "DIRECT_DEBIT_STATUS_RECEIVED": "The Direct Debit has been received and further actions are required to trigger its processing.",
          "DIRECT_DEBIT_STATUS_RETURNED": "The Direct Debit has been returned by the counterparty due to validation failure.",
          "DIRECT_DEBIT_STATUS_SUBMITTED": "The Direct Debit has been submitted to the counterparty and is waiting to be confirmed or returned.",
          "DIRECT_DEBIT_STATUS_UNKNOWN": "Default Direct Debit status."
        }
      },
      "direct_debitsDirectDebitStatusReason": {
        "type": "string",
        "enum": [
          "DIRECT_DEBIT_STATUS_REASON_UNKNOWN",
          "DIRECT_DEBIT_STATUS_REASON_ACCOUNT_NOT_PRESENT",
          "DIRECT_DEBIT_STATUS_REASON_ACCOUNT_STATUS_INVALID",
          "DIRECT_DEBIT_STATUS_REASON_INSUFFICIENT_FUNDS",
          "DIRECT_DEBIT_STATUS_REASON_CONTRACT_TERMS_AND_CONDITIONS",
          "DIRECT_DEBIT_STATUS_REASON_RESTRICTIONS_PREVENT",
          "DIRECT_DEBIT_STATUS_REASON_MANDATE_NOT_PRESENT",
          "DIRECT_DEBIT_STATUS_REASON_MANDATE_STATUS_INACTIVE",
          "DIRECT_DEBIT_STATUS_REASON_SCHEME_SUBMISSION_FAILED"
        ],
        "default": "DIRECT_DEBIT_STATUS_REASON_UNKNOWN",
        "x-enum-value-descriptions": {
          "DIRECT_DEBIT_STATUS_REASON_ACCOUNT_NOT_PRESENT": "The Vault account is not present.",
          "DIRECT_DEBIT_STATUS_REASON_ACCOUNT_STATUS_INVALID": "The Vault account has an invalid status.",
          "DIRECT_DEBIT_STATUS_REASON_CONTRACT_TERMS_AND_CONDITIONS": "Movement of funds has failed because the Direct Debit violates the terms and conditions of the Smart Contract associated with the Vault account.",
          "DIRECT_DEBIT_STATUS_REASON_INSUFFICIENT_FUNDS": "Movement of funds has failed because the Vault account has insufficient funds.",
          "DIRECT_DEBIT_STATUS_REASON_MANDATE_NOT_PRESENT": "There is no matching Mandate for the Direct Debit in the system.",
          "DIRECT_DEBIT_STATUS_REASON_MANDATE_STATUS_INACTIVE": "The corresponding Mandate has a `status` that is not `ACTIVE` and the Direct Debit cannot be processed.",
          "DIRECT_DEBIT_STATUS_REASON_RESTRICTIONS_PREVENT": "Movement of funds has failed because the Direct Debit violates the restrictions set on the Vault account.",
          "DIRECT_DEBIT_STATUS_REASON_SCHEME_SUBMISSION_FAILED": "Scheme Submission failed for Outbound Direct Debit.",
          "DIRECT_DEBIT_STATUS_REASON_UNKNOWN": "Default Direct Debit status reason."
        }
      },
      "direct_debitsDirectDebitType": {
        "type": "string",
        "enum": [
          "DIRECT_DEBIT_TYPE_UNKNOWN",
          "DIRECT_DEBIT_TYPE_FIRST",
          "DIRECT_DEBIT_TYPE_RECURRING",
          "DIRECT_DEBIT_TYPE_FINAL",
          "DIRECT_DEBIT_TYPE_REPRESENTED",
          "DIRECT_DEBIT_TYPE_ONE_OFF",
          "DIRECT_DEBIT_TYPE_RETURN",
          "DIRECT_DEBIT_TYPE_REVERSAL",
          "DIRECT_DEBIT_TYPE_REFUND"
        ],
        "default": "DIRECT_DEBIT_TYPE_UNKNOWN",
        "x-enum-value-descriptions": {
          "DIRECT_DEBIT_TYPE_FINAL": "Final Direct Debit.",
          "DIRECT_DEBIT_TYPE_FIRST": "First Direct Debit.",
          "DIRECT_DEBIT_TYPE_ONE_OFF": "One-off Direct Debit.",
          "DIRECT_DEBIT_TYPE_RECURRING": "Recurring Direct Debit.",
          "DIRECT_DEBIT_TYPE_REFUND": "Direct Debit refund.",
          "DIRECT_DEBIT_TYPE_REPRESENTED": "Re-presented Direct Debit; for example, when the originally presented Direct Debit is returned for some reason, it can be re-presented.",
          "DIRECT_DEBIT_TYPE_RETURN": "Direct Debit return.",
          "DIRECT_DEBIT_TYPE_REVERSAL": "Direct Debit reversal.",
          "DIRECT_DEBIT_TYPE_UNKNOWN": "Default Direct Debit type."
        }
      },
      "direct_debitsPaymentIdentifiers": {
        "type": "object",
        "properties": {
          "end_to_end_id": {
            "type": "string",
            "description": "This provides unique identification of the transaction, as assigned by the initiating party. It is passed on, unchanged, throughout the entire end-to-end chain. Optional."
          },
          "transaction_id": {
            "type": "string",
            "description": "This provides unique identification of the transaction, as assigned by the first instructing agent. It is passed on, unchanged, throughout the entire interbank chain. Optional."
          },
          "instruction_id": {
            "type": "string",
            "description": "This provides unique identification of the instruction, as assigned by an instructing party for an instructed party. Optional."
          },
          "clearing_system_ref": {
            "type": "string",
            "description": "This provides unique identification of the instruction in the form of a reference, as assigned by a clearing system. Optional."
          },
          "uetr": {
            "type": "string",
            "description": "This is a universally unique end-to-end transaction reference (UETR). Optional."
          }
        },
        "description": "`PaymentIdentifiers` provides means of referencing a payment transaction. Constraints: - `transaction` or `uetr` must be present. Both may be present. - All fields except `uetr` and `instruction` are strings with a maximum length of 35 characters."
      },
      "flagsFlag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the flag. Output only."
          },
          "flag_definition_id": {
            "type": "string",
            "description": "The ID of the flag definition. Required for create requests."
          },
          "description": {
            "type": "string",
            "description": "The description of the flag. Required for create requests."
          },
          "creation_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the flag was created. Output only.",
            "x-output-only": true
          },
          "effective_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the flag was activated. Optional for create requests; must be set to a future time.\n"
          },
          "expiry_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the flag was deactivated. Optional for create requests; must be set to after the effective timestamp time.\n"
          },
          "is_active": {
            "type": "boolean",
            "description": "Indicates if the flag is active. Update only."
          },
          "customer_id": {
            "$ref": "#/components/schemas/customer_id",
            "required": false
          },
          "account_id": {
            "$ref": "#/components/schemas/account_id",
            "required": false
          },
          "payment_device_id": {
            "$ref": "#/components/schemas/payment_device_id",
            "required": false
          }
        }
      },
      "googleprotobufValue": {
        "type": "object",
        "properties": {
          "null_value": {
            "$ref": "#/components/schemas/protobufNullValue",
            "required": false
          },
          "number_value": {
            "$ref": "#/components/schemas/number_value",
            "required": false
          },
          "string_value": {
            "$ref": "#/components/schemas/string_value",
            "required": false
          },
          "bool_value": {
            "$ref": "#/components/schemas/bool_value",
            "required": false
          },
          "struct_value": {
            "$ref": "#/components/schemas/protobufStruct",
            "required": false
          },
          "list_value": {
            "$ref": "#/components/schemas/protobufListValue",
            "required": false
          }
        },
        "description": "`Value` represents a dynamically typed value which can be either null, a number, a string, a boolean, a recursive struct value, or a list of values. A producer of value is expected to set one of that variants, absence of any variant indicates an error.\n\nThe JSON representation for `Value` is JSON value."
      },
      "mandatesMandate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of the Mandate in the PaymentHub (UUID); if not provided, this is generated on creation.",
            "x-create-only": true,
            "x-example-override": "3b595fb4-3f7e-4dbb-a1b5-e59db8d5ee77"
          },
          "scheme_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the Mandate was received by the scheme. This is inferred from the scheme (for example, from `scheme_processing_date` for Bacs).",
            "x-create-only": true
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the Mandate was created.",
            "x-output-only": true
          },
          "scheme_id": {
            "type": "string",
            "description": "Identifies the scheme that the Mandate belongs to.",
            "x-create-only": true,
            "x-example-override": "BACS"
          },
          "debitor_party": {
            "$ref": "#/components/schemas/v1partyParty",
            "description": "The details of the party receiving the Mandate (the party paying the funds). Required on resource creation."
          },
          "creditor_party": {
            "$ref": "#/components/schemas/v1partyParty",
            "description": "The details of the party sending the Mandate (the party collecting the funds). Required on resource creation for Mandates with direction `MANDATE_DIRECTION_OUTBOUND`.",
            "x-create-only": true
          },
          "status": {
            "$ref": "#/components/schemas/mandatesMandateStatus",
            "description": "The current status of the Mandate."
          },
          "direction": {
            "$ref": "#/components/schemas/mandatesMandateDirection",
            "description": "The direction of the Mandate. Required.",
            "x-create-only": true
          },
          "source": {
            "$ref": "#/components/schemas/mandatesMandateSource",
            "description": "The source of the Mandate. Required.",
            "x-create-only": true
          },
          "metadata": {
            "$ref": "#/components/schemas/protobufStruct",
            "description": "Metadata related to the Mandate. Optional.",
            "x-example-override": "{\"Example key\": \"Example value\"}"
          },
          "reference": {
            "type": "string",
            "description": "The reference of the Mandate that is assigned by the creditor. Optional.",
            "x-create-only": true,
            "x-example-override": "ExampleReference"
          },
          "frequency": {
            "type": "string",
            "description": "The frequency of direct debit collections against the Mandate. Optional.",
            "x-create-only": true,
            "x-example-override": "monthly"
          },
          "creditor_scheme_id": {
            "type": "string",
            "description": "Unique ID of the creditor within the scheme. Required on resource creation.",
            "x-create-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 1
              },
              "changeType": "ADD_FIELD",
              "description": "Field added so resource can record creditor scheme id"
            },
            "x-example-override": "ExampleCreditorSchemeID"
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the last change to the Mandate occurred. Output-only.",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 1
              },
              "changeType": "ADD_FIELD",
              "description": "Field added to record update time on existing resource"
            }
          },
          "scheme_code": {
            "type": "string",
            "description": "The most recent scheme-specific code set by the scheme or submitted to the scheme.",
            "x-update-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 4
              },
              "changeType": "ADD_FIELD",
              "description": "Field added to record the scheme reason code for a previous change in status."
            },
            "x-example-override": "H"
          },
          "cancellation_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "If the Mandate has status `CANCELLED` this field contains the timestamp indicating when the Mandate was cancelled.",
            "x-update-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 4
              },
              "changeType": "ADD_FIELD",
              "description": "Field added to record the cancellation timestamp for a mandate cancellation."
            }
          },
          "migration_info": {
            "$ref": "#/components/schemas/v1mandatesMigrationInfo",
            "description": "Migration information for Mandates that have been migrated into Vault from another platform.",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 5
              },
              "changeType": "ADD_FIELD",
              "description": "Field added so client can migrate a Mandate from legacy system"
            }
          }
        }
      },
      "mandatesMandateDirection": {
        "type": "string",
        "enum": [
          "MANDATE_DIRECTION_UNKNOWN",
          "MANDATE_DIRECTION_INBOUND",
          "MANDATE_DIRECTION_OUTBOUND"
        ],
        "default": "MANDATE_DIRECTION_UNKNOWN",
        "x-enum-value-descriptions": {
          "MANDATE_DIRECTION_INBOUND": "A Mandate whose origin is external; not Vault.",
          "MANDATE_DIRECTION_OUTBOUND": "A Mandate whose origin is Vault.",
          "MANDATE_DIRECTION_UNKNOWN": "Default value."
        }
      },
      "mandatesMandateSource": {
        "type": "string",
        "enum": [
          "MANDATE_SOURCE_UNKNOWN",
          "MANDATE_SOURCE_ELECTRONIC",
          "MANDATE_SOURCE_PAPER"
        ],
        "default": "MANDATE_SOURCE_UNKNOWN",
        "x-enum-value-descriptions": {
          "MANDATE_SOURCE_ELECTRONIC": "The Mandate was issued in electronic form.",
          "MANDATE_SOURCE_PAPER": "The Mandate was issued in paper form. Note that paper Mandates are currently not supported.",
          "MANDATE_SOURCE_UNKNOWN": "Default value."
        }
      },
      "mandatesMandateStatus": {
        "type": "string",
        "enum": [
          "MANDATE_STATUS_UNKNOWN",
          "MANDATE_STATUS_RECEIVED",
          "MANDATE_STATUS_ACTIVE",
          "MANDATE_STATUS_REJECTED",
          "MANDATE_STATUS_CANCELLED"
        ],
        "default": "MANDATE_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "MANDATE_STATUS_ACTIVE": "The Mandate is active.",
          "MANDATE_STATUS_CANCELLED": "The Mandate has been cancelled.",
          "MANDATE_STATUS_RECEIVED": "The Mandate has been received.",
          "MANDATE_STATUS_REJECTED": "The Mandate has been rejected.",
          "MANDATE_STATUS_UNKNOWN": "Default value."
        }
      },
      "parametersDateOffset": {
        "type": "object",
        "properties": {
          "years": {
            "type": "integer",
            "format": "int32",
            "description": "Year offset. Depending on constraints may be positive or negative."
          },
          "months": {
            "type": "integer",
            "format": "int32",
            "description": "Month offset. Depending on constraints may be positive or negative."
          },
          "days": {
            "type": "integer",
            "format": "int32",
            "description": "Day offset. Depending on constraints may be positive or negative."
          }
        }
      },
      "parametersParameterValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique UUID identifier for the ParameterValue. Read-only and set to a random UUID on creation."
          },
          "parameter_id": {
            "type": "string",
            "description": "The ID of the Parameter for which this is a value. Mandatory."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the ParameterValue was created. Read-only and set to the current time on creation."
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the ParameterValue was last updated: either it was cancelled or its effective_to_timestamp changed. Read-only and set to the current time on update."
          },
          "effective_from_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time from which the ParameterValue is effective (including this time). Optional and set to the current time on creation if it is not set. Immutable once set. If specified, must be in the future, unless the is-backdated flag is set to true."
          },
          "effective_to_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time until which the ParameterValue is effective (excluding this time). It will automatically update when the ParameterValue is cancelled or is superseded by another ParameterValue for the same Parameter. Can be explicitly set to a future time via a PUT request."
          },
          "is_cancelled": {
            "type": "boolean",
            "description": "Indicates whether this ParameterValue has been cancelled before it became effective. This field can be explicitly set to true via an update, as long as the effective_from_timestamp is in the future."
          },
          "is_backdated": {
            "type": "boolean",
            "description": "Indicates whether this ParameterValue was a back-dated change, meaning its effective_from was set to a time earlier than when it was created. This must be explicitly set to true when creating ParameterValues in order to allow the effective-from timestamp to be in the past."
          },
          "value": {
            "$ref": "#/components/schemas/v1parametersValue",
            "description": "The value of the Parameter, which must satisfy the constraints defined in the Parameter. Mandatory. Cannot be changed, instead a new ParameterValue must be created."
          },
          "account_config_group_id": {
            "$ref": "#/components/schemas/account_config_group_id",
            "required": false
          },
          "account_config_entity_id": {
            "$ref": "#/components/schemas/account_config_entity_id",
            "required": false
          },
          "account_id": {
            "$ref": "#/components/schemas/account_id",
            "required": false
          }
        }
      },
      "payeesPayee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the payee."
          },
          "created_by_customer_id": {
            "type": "string",
            "description": "The ID of the customer who created or is creating this payee."
          },
          "account_id": {
            "type": "string",
            "description": "The ID of the account associated with this payee. Note that the account may have multiple stakeholders, in which case the `created_by_customer_id` field will tell you which of the stakeholders created the payee. This field is required on CreatePayee."
          },
          "payee_label": {
            "type": "string",
            "description": "The display label for this payee. This field is required on CreatePayee."
          },
          "deleted": {
            "type": "boolean",
            "description": "Set to `true` if the payee has been marked as deleted, otherwise `false`. Deleted payees will only appear in a `ListPayeesResponse` if the `include_deleted` parameter was set to true on the `ListPayeesRequest`. Deleted payees are always included in a `BatchGetPayeesResponse`."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A UTC timestamp recording when the payee was created."
          },
          "default_payment_reference": {
            "type": "string",
            "description": "The reference for this payment. Allowed characters are: * alphanumeric (A-Z, a-z, 0-9) * / - ? : ( ) . , ' + # = ! \" % & * < > ; { @ * space If a default payment reference is not provided then a payment reference is always required when submitting a payment to this payee.\n\nMax length: 18 characters."
          },
          "last_update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A UTC timestamp recording when the payee was last updated. If the payee has never been updated, this field will contain the same value as `create_timestamp`."
          },
          "migration_info": {
            "$ref": "#/components/schemas/v1payeesMigrationInfo",
            "description": "Stores migration-specific information.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 5
              },
              "changeType": "ADD_FIELD"
            }
          },
          "uk_bank_identifier": {
            "$ref": "#/components/schemas/payeesUKBankIdentifier",
            "required": true
          }
        },
        "description": "Object that represents a payee."
      },
      "payeesUKBankIdentifier": {
        "type": "object",
        "properties": {
          "beneficiary_name": {
            "type": "string",
            "description": "The full name of the beneficiary account holder.\n\nRequired.\nMax length: 64 characters."
          },
          "account_number": {
            "type": "string",
            "description": "The account number of the beneficiary account.\nThis field must contain a UK bank account number of between 6 and 10 digits, e.g. 12345678.\nRequired."
          },
          "sort_code": {
            "type": "string",
            "description": "The sort code of the bank that holds the beneficiary account.\nThis field must contain a UK sort code in a strictly numeric string of 6 digits, e.g. 123456.\nRequired."
          }
        },
        "description": "Routing information for the payee's UK bank account.",
        "required": [
          "beneficiary_name",
          "account_number",
          "sort_code"
        ]
      },
      "payment_devicesPaymentDevice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Caller injected or Vault auto-generated unique ID for payment device. Optional. When auto-generated, this is a UUID in the canonical 8-4-4-4-12 form.\n\nMax length: 36 characters.",
            "x-create-only": true
          },
          "routing_info": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key -> value map for caller to reference when receiving/originating payment. Optional.\n",
            "x-create-only": true
          },
          "status": {
            "$ref": "#/components/schemas/payment_devicesPaymentDeviceStatus",
            "description": "Incremental payment device status. Required."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Create timestamp. Differs from effective timestamp if created in pending. Output only.",
            "x-output-only": true
          },
          "start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the payment device became active if the value is historic, or when the payment device will become active if the value is in the future. Defaults to current time when creating a payment device in `PAYMENT_DEVICE_STATUS_ACTIVE` status. Required for creating a payment device with status `PAYMENT_DEVICE_STATUS_INACTIVE`, optional for other create requests, and output only otherwise.\n"
          },
          "end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the payment device became inactive if the value is historic, or when the payment device will become inactive if the value is in the future. Required for creating a payment device with status `PAYMENT_DEVICE_STATUS_INACTIVE`, optional for other create requests, and output only otherwise.\n"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags assigned to this payment device. Optional for creation; otherwise this is output only.",
            "x-create-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD"
            }
          }
        },
        "title": "Generic object to represent an instrument that can originate or/and receive payments Payment devices are immutable except for the status which reflects whether the payment device can be linked to accounts using payment device tokens or not"
      },
      "payment_devicesPaymentDeviceLink": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A caller-injected or Vault auto-generated unique ID for the payment device link. When auto-generated, this is a UUID in the canonical 8-4-4-4-12 form.\n\nMax length: 36 characters.",
            "x-create-only": true
          },
          "token": {
            "type": "string",
            "description": "Token to identify this link. It has to be unique across active links. Required for create requests.",
            "x-create-only": true
          },
          "payment_device_id": {
            "type": "string",
            "description": "Payment device id this token connects an account to. Required for create requests.",
            "x-create-only": true
          },
          "account_id": {
            "type": "string",
            "description": "Account ID this token connects a payment device to. Required for create requests.",
            "x-create-only": true
          },
          "status": {
            "$ref": "#/components/schemas/payment_devicesPaymentDeviceLinkStatus",
            "description": "The status of the payment device link. Must have a value of `PAYMENT_DEVICE_LINK_STATUS_ACTIVE` or `PAYMENT_DEVICE_LINK_STATUS_INACTIVE` for create requests. Required for create requests."
          },
          "start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the link became active. Required for create requests of payment device links with status `PAYMENT_DEVICE_LINK_STATUS_INACTIVE`, output only otherwise."
          },
          "end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the link became inactive. Required for create requests of payment device links with status `PAYMENT_DEVICE_LINK_STATUS_INACTIVE`, output only otherwise."
          }
        },
        "description": "Represents a link between a payment device and an account via a token. Both payment devices and accounts can be connected via multiple such links. A payment device token can be associated with a single link at a time and moved across links. Movement can happen once a link has been soft deleted(or detokenised); the link will be made inactive and the token it used to held can be reused to create a new payment device link."
      },
      "payment_devicesPaymentDeviceLinkStatus": {
        "type": "string",
        "enum": [
          "PAYMENT_DEVICE_LINK_STATUS_UNKNOWN",
          "PAYMENT_DEVICE_LINK_STATUS_ACTIVE",
          "PAYMENT_DEVICE_LINK_STATUS_INACTIVE"
        ],
        "default": "PAYMENT_DEVICE_LINK_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "PAYMENT_DEVICE_LINK_STATUS_ACTIVE": "Link between account id and payment device can be used via the token.",
          "PAYMENT_DEVICE_LINK_STATUS_INACTIVE": "Invalid when creating a payment device link. Terminal status state, link is disabled, token can be reused.",
          "PAYMENT_DEVICE_LINK_STATUS_UNKNOWN": "Invalid when creating a payment device link."
        }
      },
      "payment_devicesPaymentDeviceStatus": {
        "type": "string",
        "enum": [
          "PAYMENT_DEVICE_STATUS_UNKNOWN",
          "PAYMENT_DEVICE_STATUS_PENDING",
          "PAYMENT_DEVICE_STATUS_ACTIVE",
          "PAYMENT_DEVICE_STATUS_INACTIVE"
        ],
        "default": "PAYMENT_DEVICE_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "PAYMENT_DEVICE_STATUS_ACTIVE": "Can transition only to PAYMENT_DEVICE_STATUS_INACTIVE. A payment device with this status can be linked to a valid account.",
          "PAYMENT_DEVICE_STATUS_INACTIVE": "Terminal status state, linking is disabled.",
          "PAYMENT_DEVICE_STATUS_PENDING": "Can transition only to PAYMENT_DEVICE_STATUS_ACTIVE or PAYMENT_DEVICE_STATUS_INACTIVE. A payment device with this status can be linked to a valid account. Clients can manage sub-statuses (e.g. card generated, card sent, card activated) within their own records.",
          "PAYMENT_DEVICE_STATUS_UNKNOWN": "Invalid when creating a payment device."
        }
      },
      "paymentsAdditionalCreditInformation": {
        "type": "object",
        "properties": {
          "redirected_internal_account_id": {
            "type": "string",
            "description": "The internal account that funds were redirected to during INBOUND Payment exception handling flows, if funds were redirected. Optional.",
            "x-example-override": ""
          },
          "redirected_party": {
            "$ref": "#/components/schemas/v1paymentsBBAN",
            "description": "The party that funds were redirected to, if funds were redirected. Only applicable to OUTBOUND Payments. Optional."
          }
        },
        "description": "AdditionalCreditInformation contains information about the creditor."
      },
      "paymentsAdditionalDebitInstructions": {
        "type": "object",
        "properties": {
          "internal_account_id": {
            "type": "string",
            "description": "If set, the internal account specified will be debited instead of the account associated with the `debitor_party` provided. If not set on creation, this field is never populated. The field can only be set for OUTBOUND payments of type RETURN.",
            "x-example-override": ""
          }
        },
        "description": "AdditionalDebitInstructions contains instructions specific to the debiting of a Payment."
      },
      "paymentsCoreRestrictions": {
        "type": "object",
        "properties": {
          "all": {
            "type": "boolean",
            "description": "If set to `true`, then all restriction checks performed by the Core API when creating postings will be overridden."
          },
          "restriction_set_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of all IDs of [RestrictionSets](/api/core_api/#Restrictions-RestrictionSet) that should be overridden by the Core API. Any restriction encountered by the Core API that belongs to one of the listed `restriction_set_ids` will be ignored. A user error will be returned if this field is populated while the `all` field is set to `true`."
          }
        },
        "description": "CoreRestrictions allows for certain restrictions in the Core API to be overridden."
      },
      "paymentsInterbankSettlementInformation": {
        "type": "object",
        "properties": {
          "interbank_settlement_date": {
            "type": "string",
            "description": "A string representation of the date that the Payment is settled within the relevant payment scheme. While no validation is performed on the format of this value, a YYYY-MM-DD format is recommended. Optional.",
            "x-example-override": "2020-05-14"
          },
          "interbank_settlement_cycle_id": {
            "type": "string",
            "description": "Indicates the settlement cycle the Payment was or will be settled in. For FPS, possible values are `1`, `2` and `3`. Optional.",
            "x-example-override": "1"
          }
        },
        "description": "InterbankSettlementInformation records additional information about the settlement of a Payment in regards to the relevant Payment scheme. This information can be considered metadata in that it will never be used to trigger an action."
      },
      "paymentsPayment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The UUID of the payment inside Payments Hub. This will be included in any postings created as a result of the payment. Optional on resource creation; if it is not set, a UUID will be generated. Required for update calls.",
            "x-example-override": "3b595fb4-3f7e-4dbb-a1b5-e59db8d5ee77"
          },
          "create_request_id": {
            "type": "string",
            "description": "The ID of the request that originally generated the payment.",
            "x-release-info": {
              "noticeVersion": {
                "major": 2,
                "minor": 8
              },
              "releaseVersion": {
                "major": 6
              },
              "changeType": "REMOVE_FIELD",
              "description": "create_request_id will be removed with no replacement. Do not use the information in this field. Access to request ID that originally created the resource is not necessary to use the API."
            },
            "x-example-override": "0693bd86-694b-439e-83ff-a3e3229c2e6c"
          },
          "scheme_transaction_id": {
            "type": "string",
            "description": "An identifier for the payment within the payment scheme that it belongs to.\n\nOptional for OUTBOUND payments. It is recommended that this field is not set when creating a `Payment`. The Payments Hub will generate a valid value when it has determined which scheme the payment will be routed through. If this field is set by the caller for OUTBOUND payments, the value must match the regex value set in `transaction_id_pattern` in the relevant SchemeConfig. For further information, see [SchemeConfig](/api/payments_hub_api/#Schemes-SchemeConfig).\n\nRequired for INBOUND payments. The Payments Hub performs no validation on this field for INBOUND payments.\n\nFor FPS, this field maps to the Transaction Reference Number (TRN).",
            "x-example-override": "TMFPS14213203K6RX7"
          },
          "scheme": {
            "type": "string",
            "description": "The intended payment [Scheme](/api/payments_hub_api/#Schemes) that the payment belongs to. This scheme must exist in the Payments Hub. A payment is eligible to have specific combinations of attributes based on the specified payment scheme. Required on resource creation. For OUTBOUND payments, the payment scheme that will be used to make the payment could be routed to OnUs if the Payments Hub detects that the creditor and debitor accounts are both held within Vault.\n\nSupport for BACS Payments is now deprecated.\n\nOptions: [BACS, FPS, OnUs]",
            "x-example-override": "FPS"
          },
          "execution_plan": {
            "type": "string",
            "description": "The intended execution plan within the given scheme. This will affect how the Payment is processed. Valid values for this field are dictated per scheme. If not populated on creation a value will be set according to the default value set in the Payments Hub configuration values. Optional.\n\nValid values:\n\n**FPS**:\n\n\"FPS_STANDARD_V1\" - Immediate requests to/responses from the scheme that are used to accept and reject payments. \"FPS_CLEARED_V1\" - Payments already cleared with the scheme upon arrival in Vault. This uses return payments rather than rejection messages. Inbound only.\n\n**OnUs**:\n\n\"ONUS_DEFAULT_V1\" - The default and only value for OnUs payments. Funds are transferred between Vault accounts using a single posting instruction.\n\n**BACS**:(deprecated)\n\n\"BACS_INBOUND_V1\" - Used for inbound credit transfers (Direct Credits). \"BACS_ARUCS_OUTBOUND_V1\" - Used for Automated Return of Unapplied Credits Service (ARUCS).",
            "x-example-override": "FPS_STANDARD_V1"
          },
          "settlement_information": {
            "$ref": "#/components/schemas/paymentsSettlementInformation",
            "description": "Scheme-specific payment settlement information. If you are using a Thought Machine-provided gateway connector, you do not need to populate this field.",
            "x-release-info": {
              "noticeVersion": {
                "major": 2,
                "minor": 4
              },
              "releaseVersion": {
                "major": 6
              },
              "changeType": "REMOVE_FIELD",
              "description": "Replaced by `interbank_settlement_information`: during the migration period, `settlement_information` and `interbank_settlement_information` contain the same information."
            }
          },
          "interbank_settlement_information": {
            "$ref": "#/components/schemas/paymentsInterbankSettlementInformation",
            "description": "Scheme-specific payment settlement information. If you are using a Thought Machine-provided gateway connector, you do not need to populate this field."
          },
          "settlement_date": {
            "type": "string",
            "description": "The date on which funds are settled within Vault, and when all associated movements of funds will be completed by. It will be in the format YYYY-MM-DD. This date can be in the future if the Payment is scheduled for settlement at a later date. For INBOUND Payments, the value of this field is dictated by the relevant payment scheme and will be set on creation. For OUTBOUND Payments, the value of this field will be calculated and populated automatically during processing and will not be populated on creation.",
            "x-example-override": "2020-06-21"
          },
          "amount": {
            "type": "string",
            "description": "A string value of the payment amount. This is an unsigned floating point number with an optional decimal point, for example, \"10.00\", \"10.1\", \"0.0123\", \"5\". It must be positive and non-zero. Required on resource creation. Optional if it is a RETURN type payment; the amount of the original payment will be used if omitted.\n\nFor FPS-only OUTBOUND RETURN payments, the amount of the original payment will be used even if the value has been set.",
            "x-example-override": "1000.00"
          },
          "currency": {
            "type": "string",
            "description": "The three-letter alphabetic currency code based on ISO 4217, for example, GBP and USD. Required on resource creation. Optional if it is a RETURN type payment; the currency of the original payment will be used if omitted.\n\nFor FPS-only OUTBOUND RETURN payments, the currency of the original payment will be used even if the value has been set.",
            "x-example-override": "GBP"
          },
          "reference": {
            "type": "string",
            "description": "Reference information associated with the payment that will be passed to the beneficiary. Optional. If omitted on a RETURN type payment, the reference of the original payment will be used.",
            "x-example-override": "Rent"
          },
          "current_status": {
            "$ref": "#/components/schemas/paymentsPaymentStatus",
            "description": "The current status of the payment. Output only.",
            "x-example-override": "PAYMENT_STATUS_SETTLED"
          },
          "status_reason": {
            "$ref": "#/components/schemas/paymentsStatusReason",
            "description": "The reason for the current status of the payment. Status reason can be used to infer why a payment was REJECTED or CANCELLED for example. Output only.",
            "x-example-override": "STATUS_REASON_ACCEPT"
          },
          "current_status_details": {
            "$ref": "#/components/schemas/v1paymentsStatusDetails",
            "description": "Provides additional information about the current status of a payment."
          },
          "target_status": {
            "$ref": "#/components/schemas/paymentsPaymentStatus",
            "description": "The target status of the payment. This can be set during a `PUT` call to the payment resource and must be set after resource creation so the payment execution engine can process the payment and perform any financial operations that might result as a consequence of the change in the target_status.\n\nOnly certain statuses can be passed as valid target statuses: For FPS:\n\nPAYMENT_STATUS_AUTHORISED, PAYMENT_STATUS_SUBMITTED, PAYMENT_STATUS_REJECTED, PAYMENT_STATUS_SETTLED, and PAYMENT_STATUS_REVERSED.\n\nIf the target_status of the payment is updated, actions will be generated in an attempt to transition the payment to its new target_status. These actions could include, for example, postings being submitted to the Postings API.",
            "x-example-override": "PAYMENT_STATUS_SETTLED"
          },
          "target_status_reason": {
            "$ref": "#/components/schemas/paymentsStatusReason",
            "description": "The justification for the target_status. For example, a payment may have a target_status of REJECTED and this could be due to STATUS_REASON_ACCOUNT_CLOSED or STATUS_REASON_INSUFFICIENT_FUNDS or many others. This field can only be set during an UpdatePayment call. Optional; Defaults to STATUS_REASON_UNKNOWN.",
            "x-example-override": "STATUS_REASON_ACCEPT"
          },
          "target_status_details": {
            "$ref": "#/components/schemas/v1paymentsStatusDetails",
            "description": "Provides additional information about the target status of a payment."
          },
          "debitor_party": {
            "$ref": "#/components/schemas/v1paymentsParty",
            "description": "The details of the party sending the Payment. Required on resource creation, except for `payment_type` RETURN where the `creditor_party` of the original Payment will be used if not specified."
          },
          "creditor_party": {
            "$ref": "#/components/schemas/v1paymentsParty",
            "description": "The details of the party receiving the payment. Required on resource creation, except for `payment_type` RETURN where the `debitor_party` of the original Payment will be used if not specified."
          },
          "direction": {
            "$ref": "#/components/schemas/paymentsPaymentDirection",
            "description": "Indicates whether the payment originates from within Vault (OUTBOUND) or from outside Vault (INBOUND). Required on resource creation.",
            "x-example-override": "PAYMENT_DIRECTION_OUTBOUND"
          },
          "payment_type": {
            "$ref": "#/components/schemas/paymentsPaymentType",
            "description": "The type of payment. The `payment_type` value used here determines what validation is applied to the payment. The Payments Hub performs the same validation on all enum values detailed here, apart from PAYMENT_TYPE_RETURN where validation differences get listed on the individual fields. Required on resource creation.",
            "x-example-override": "PAYMENT_TYPE_IMMEDIATE_PAYMENT"
          },
          "scheme_payment_type": {
            "type": "string",
            "description": "A freeform string representation of the payment type indicated by the selected payment scheme. This field is for information purposes only and will not affect processing in the core Payments Hub, unlike the `payment_type` field which may affect how a payment is validated and processed. No validation is performed on this field. Optional on resource creation.\n\n`scheme_payment_type` is set by the Thought Machine gateway connectors (both Form3 and Bottomline) for inbound payments. This field will be populated for outbound payments.",
            "x-example-override": "SIP"
          },
          "payment_channel": {
            "$ref": "#/components/schemas/paymentsPaymentChannel",
            "description": "The channel used to initiate the payment. Optional on resource creation.",
            "x-example-override": "PAYMENT_CHANNEL_INTERNET"
          },
          "processing_priority": {
            "$ref": "#/components/schemas/paymentsProcessingPriority",
            "description": "The processing priority of the payment, set by the gateway connector that processed it. Optional.\n\nNote that when processing a payment, the Payments Hub does not use this value to determine its priority.",
            "x-example-override": "PROCESSING_PRIORITY_HIGH"
          },
          "purpose": {
            "$ref": "#/components/schemas/paymentsPurpose",
            "description": "Provides the underlying reason for the Payment transaction. Optional."
          },
          "tax_reference": {
            "type": "string",
            "description": "Indicates information related to regulatory reporting, such as tax-related payroll data. Optional.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 13
              },
              "changeType": "ADD_FIELD",
              "description": "Field added to allow collection of regulatory reporting reference tag"
            },
            "x-example-override": "Example tax reference"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata related to the payment. Optional.",
            "x-example-override": "{\"Example key\": \"Example value\"}"
          },
          "value_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the payment was created. This is generated by the Payments Hub. If set, this will be used to populate the `value_timestamp` field on submission of posting instruction batches to the Postings API (applies to Payments of all schemes, except Bacs). Use `create_timestamp` rather than `value_timestamp` as the recommended field for providing the time a Payment was created. Optional."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the Payment was created.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 5
              },
              "changeType": "ADD_FIELD",
              "description": "Field added to allow displaying of time of resource creation"
            }
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the last change to the payment occurred."
          },
          "standing_order_instruction_id": {
            "type": "string",
            "description": "The standing order instruction that this Payment was created under. This field is automatically populated for payments that were created due to a\n[StandingOrderInstruction](/api/payments_hub_api/#Scheduled_payments-StandingOrderInstruction). Optional.",
            "x-example-override": "3b595fb4-3f7e-4dbb-a1b5-e59db8d5ee77"
          },
          "return_details": {
            "$ref": "#/components/schemas/relationsReturnDetails",
            "description": "Reference information relating to the original payment the current payment is returning and the reason for the return. Optional on resource creation; only required if the payment being created is a return and only supported for FPS payments. Return details must only be set on a payment that is of type RETURN.\n\nOnly payments in certain statuses can be returned:\n\nFor INBOUND: PAYMENT_STATUS_SETTLED, PAYMENT_STATUS_QUALIFIED_ACCEPTANCE, PAYMENT_STATUS_UNAPPLIED_ACCOUNT_SETTLED.\n\nFor OUTBOUND: All statuses.\n\nPreviously returned payments and payments of type RETURN cannot be returned."
          },
          "returned_by_details": {
            "$ref": "#/components/schemas/relationsReturnedByDetails",
            "description": "Holds return information if the payment is subsequently returned by another payment. Output only."
          },
          "additional_credit_information": {
            "$ref": "#/components/schemas/paymentsAdditionalCreditInformation",
            "description": "Additional information associated with this Payment; this is populated only once an attempt has been made to transfer funds to the `creditor_party`. In most cases, this field will not be populated."
          },
          "additional_debit_instructions": {
            "$ref": "#/components/schemas/paymentsAdditionalDebitInstructions",
            "description": "Additional instructions that can be used when creating outbound payments."
          },
          "overrides": {
            "$ref": "#/components/schemas/v1paymentsOverrides",
            "description": "Options to override certain checks and restrictions for the Payment."
          },
          "migration_info": {
            "$ref": "#/components/schemas/v1paymentsMigrationInfo",
            "description": "Migration information for Payments that have been migrated into Vault from another platform.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 5
              },
              "changeType": "ADD_FIELD",
              "description": "Field added so that clients can migrate a Payment from legacy system"
            }
          }
        }
      },
      "paymentsPaymentChannel": {
        "type": "string",
        "enum": [
          "PAYMENT_CHANNEL_UNKNOWN",
          "PAYMENT_CHANNEL_INTERNET",
          "PAYMENT_CHANNEL_PHONE",
          "PAYMENT_CHANNEL_BRANCH",
          "PAYMENT_CHANNEL_LETTER",
          "PAYMENT_CHANNEL_EMAIL",
          "PAYMENT_CHANNEL_PAYM"
        ],
        "default": "PAYMENT_CHANNEL_UNKNOWN",
        "x-enum-value-descriptions": {
          "PAYMENT_CHANNEL_BRANCH": "Thought Machine FPS gateway connectors map this to the FPS Payment Sub-type code 003 (branch instruction).",
          "PAYMENT_CHANNEL_EMAIL": "Thought Machine FPS gateway connectors map this to the FPS Payment Sub-type code 005 (email).",
          "PAYMENT_CHANNEL_INTERNET": "Thought Machine FPS gateway connectors map this to the FPS Payment Sub-type code 002 (internet banking).",
          "PAYMENT_CHANNEL_LETTER": "Thought Machine FPS gateway connectors map this to the FPS Payment Sub-type code 004 (letter).",
          "PAYMENT_CHANNEL_PAYM": "Thought Machine FPS gateway connectors map this to the FPS Payment Sub-type code 006 (Paym, formerly Mobile Payments Service).",
          "PAYMENT_CHANNEL_PHONE": "Thought Machine FPS gateway connectors map this to the FPS Payment Sub-type code 001 (telephone banking).",
          "PAYMENT_CHANNEL_UNKNOWN": "Default value."
        }
      },
      "paymentsPaymentDirection": {
        "type": "string",
        "enum": [
          "PAYMENT_DIRECTION_UNKNOWN",
          "PAYMENT_DIRECTION_INBOUND",
          "PAYMENT_DIRECTION_OUTBOUND"
        ],
        "default": "PAYMENT_DIRECTION_UNKNOWN",
        "x-enum-value-descriptions": {
          "PAYMENT_DIRECTION_INBOUND": "A payment whose origin is external; not Vault.",
          "PAYMENT_DIRECTION_OUTBOUND": "A payment whose origin is Vault.",
          "PAYMENT_DIRECTION_UNKNOWN": "Default value."
        }
      },
      "paymentsPaymentStatus": {
        "type": "string",
        "enum": [
          "PAYMENT_STATUS_UNKNOWN",
          "PAYMENT_STATUS_RECEIVED",
          "PAYMENT_STATUS_AWAITING_AUTHORISATION",
          "PAYMENT_STATUS_AUTHORISED",
          "PAYMENT_STATUS_SUBMITTED",
          "PAYMENT_STATUS_AWAITING_SETTLEMENT",
          "PAYMENT_STATUS_AWAITING_HARD_SETTLEMENT",
          "PAYMENT_STATUS_AWAITING_RELEASE",
          "PAYMENT_STATUS_REJECTED",
          "PAYMENT_STATUS_SETTLED",
          "PAYMENT_STATUS_RECEIVING_MEMBER_REJECTED",
          "PAYMENT_STATUS_AWAITING_REVERSAL",
          "PAYMENT_STATUS_REVERSED",
          "PAYMENT_STATUS_QUALIFIED_ACCEPTANCE",
          "PAYMENT_STATUS_AWAITING_QUALIFIED_ACCEPTANCE",
          "PAYMENT_STATUS_CANCELLED",
          "PAYMENT_STATUS_REVERSAL_REQUIRES_REVIEW",
          "PAYMENT_STATUS_AWAITING_UNAPPLIED_ACCOUNT_SETTLEMENT",
          "PAYMENT_STATUS_UNAPPLIED_ACCOUNT_SETTLED",
          "PAYMENT_STATUS_RETURNED",
          "PAYMENT_STATUS_AWAITING_SCHEME_VALIDATION",
          "PAYMENT_STATUS_AWAITING_SCHEDULED_SETTLEMENT",
          "PAYMENT_STATUS_AWAITING_SCHEME_SUBMISSION"
        ],
        "default": "PAYMENT_STATUS_UNKNOWN",
        "x-enum-value-release-info": {
          "PAYMENT_STATUS_AWAITING_SCHEME_SUBMISSION": {
            "releaseVersion": {
              "major": 2,
              "minor": 4
            },
            "changeType": "ADD_ENUM_VALUE",
            "description": "Value added to allow align statuses for payment flows"
          }
        },
        "x-enum-value-descriptions": {
          "PAYMENT_STATUS_AUTHORISED": "A payment is AUTHORISED once the check to verify if the account can receive/send the funds has been successfully run and the Auth postings have been accepted.",
          "PAYMENT_STATUS_AWAITING_AUTHORISATION": "A payment is AWAITING AUTHORISATION once its authorisation postings have been submitted to the Postings API. Payments Hub then waits for a response from the Postings API for these postings.",
          "PAYMENT_STATUS_AWAITING_HARD_SETTLEMENT": "A payment is AWAITING HARD SETTLEMENT once its hard settlement postings have been submitted to the Postings API and Payments Hub is awaiting a response.",
          "PAYMENT_STATUS_AWAITING_QUALIFIED_ACCEPTANCE": "A payment is AWAITING QUALIFIED ACCEPTANCE once postings have been submitted to the Postings API to move the funds to an exception handling account and the Payments Hub is awaiting a response.",
          "PAYMENT_STATUS_AWAITING_RELEASE": "A payment is AWAITING RELEASE once its release postings have been sent to the Postings API and Payments Hub is awaiting a response.",
          "PAYMENT_STATUS_AWAITING_REVERSAL": "A payment is AWAITING REVERSAL once postings to undo the payment have been submitted to the Postings API and Payments Hub is awaiting a response. The payment will typically be undone using release or hard settlement postings.",
          "PAYMENT_STATUS_AWAITING_SCHEDULED_SETTLEMENT": "A payment enters the AWAITING SCHEDULED SETTLEMENT status to indicate that the payment is waiting for the triggering of a given schedule in order to complete settlement. Payments that require multi-day processing will enter this state while they await the date at which the settlement processing may begin.",
          "PAYMENT_STATUS_AWAITING_SCHEME_SUBMISSION": "An OUTBOUND payment enters the AWAITING SCHEME SUBMISSION status to indicate that the payment is waiting to be submitted to the appropriate scheme. The duration a payment remains in this state is dependent on the response time for the scheme.",
          "PAYMENT_STATUS_AWAITING_SCHEME_VALIDATION": "An OUTBOUND payment enters the transient AWAITING SCHEME VALIDATION status to indicate that scheme-specific validation checks are currently being performed. Payments should not stay in this status for a prolonged period of time.",
          "PAYMENT_STATUS_AWAITING_SETTLEMENT": "A payment is AWAITING SETTLEMENT once its settlement postings have been submitted to the Postings API and Payments Hub is awaiting a response.",
          "PAYMENT_STATUS_AWAITING_UNAPPLIED_ACCOUNT_SETTLEMENT": "A cleared INBOUND payment is AWAITING UNAPPLIED ACCOUNT SETTLEMENT when it has been rejected and postings have been sent to the Postings API to place the funds in an unapplied funds account. The Payments Hub is awaiting a response at this point. The AWAITING UNAPPLIED ACCOUNT SETTLEMENT status does not get applied to an OUTBOUND payment.",
          "PAYMENT_STATUS_CANCELLED": "A payment is CANCELLED if the payment execution has been stopped. This could happen, for example, if an OUTBOUND payment cannot be validated during creation OR if the payment cannot be processed due to failed scheme validation or insufficient debitor funds.",
          "PAYMENT_STATUS_QUALIFIED_ACCEPTANCE": "An INBOUND payment can be placed into qualified acceptance; this means funds have been credited to the bank but placed in an exception handling account.",
          "PAYMENT_STATUS_RECEIVED": "A payment is RECEIVED once it has been validated and persisted in the Payments Hub.",
          "PAYMENT_STATUS_RECEIVING_MEMBER_REJECTED": "An OUTBOUND payment is RECEIVING MEMBER REJECTED when the receiving party has rejected the payment.",
          "PAYMENT_STATUS_REJECTED": "Indicates that a payment has been rejected.",
          "PAYMENT_STATUS_RETURNED": "A payment is RETURNED if it has been initially rejected and then successfully returned by a separate payment of type RETURN. A payment in this status indicates that the return payment has been completed.",
          "PAYMENT_STATUS_REVERSAL_REQUIRES_REVIEW": "If an INBOUND payment is reversed in a state from which automatic reversals are not supported, it will be given the REVERSAL REQUIRES REVIEW status. This status is a prompt that manual intervention is required to complete the reversal of the payment. It is recommended that the status of the payment is reviewed, and the ledger adjusted to reflect the reversal if required. The REVERSAL REQUIRES REVIEW status does not get applied to an OUTBOUND payment.",
          "PAYMENT_STATUS_REVERSED": "A payment may be reversed. If a payment has the status REVERSED, the reversal is complete and any movement of funds resulting from the reversal has already occurred.",
          "PAYMENT_STATUS_SETTLED": "A payment is SETTLED once the settlement postings have been accepted. Settlement is the final action of any payment process. Once settlement postings are accepted, the payment is considered SETTLED and no further action on that payment is possible/necessary.",
          "PAYMENT_STATUS_SUBMITTED": "A payment is SUBMITTED once the request to execute the payment has been submitted to the appropriate payment scheme and Payments Hub is awaiting a response.",
          "PAYMENT_STATUS_UNAPPLIED_ACCOUNT_SETTLED": "An INBOUND payment is UNAPPLIED ACCOUNT SETTLED when its funds have been placed in the unapplied funds account specified in the Payments Hub configuration. This is due to being unable to apply the funds to the customer's account for some reason. The UNAPPLIED ACCOUNT SETTLED status does not get applied to an OUTBOUND payment.",
          "PAYMENT_STATUS_UNKNOWN": "Default value."
        }
      },
      "paymentsPaymentType": {
        "type": "string",
        "enum": [
          "PAYMENT_TYPE_UNKNOWN",
          "PAYMENT_TYPE_IMMEDIATE_PAYMENT",
          "PAYMENT_TYPE_RETURN",
          "PAYMENT_TYPE_FORWARD_DATED_PAYMENT",
          "PAYMENT_TYPE_STANDING_ORDER_PAYMENT",
          "PAYMENT_TYPE_CREDIT_TRANSFER"
        ],
        "default": "PAYMENT_TYPE_UNKNOWN",
        "x-enum-value-release-info": {
          "PAYMENT_TYPE_CREDIT_TRANSFER": {
            "releaseVersion": {
              "major": 1,
              "minor": 13
            },
            "changeType": "ADD_ENUM_VALUE",
            "description": "Enum value added to indicate a generic and scheme agnostic credit transfer payment"
          }
        },
        "x-enum-value-descriptions": {
          "PAYMENT_TYPE_CREDIT_TRANSFER": "A payment that cannot be categorised using the other payment types.",
          "PAYMENT_TYPE_FORWARD_DATED_PAYMENT": "A payment that was scheduled to be processed on a specific date. This is typically an *unattended* payment (a payment that is not initiated by the customer via online banking, phone banking or in branch). Payments created as a result of a [FuturePaymentInstruction](/api/payments_hub_api/#Scheduled_payments-FuturePaymentInstruction) use this payment type.",
          "PAYMENT_TYPE_IMMEDIATE_PAYMENT": "A payment that is processed immediately. This is typically used for what are known as *attended* payments (payments that are initiated by the customer via online banking, phone banking or in branch).",
          "PAYMENT_TYPE_RETURN": "A payment that is returning a previously processed payment. This is typically created as part of an exception handling payment flow.",
          "PAYMENT_TYPE_STANDING_ORDER_PAYMENT": "A payment that was created due to a standing order. This is typically an *unattended* payment (a payment that is not initiated by the customer via online banking, phone banking or in branch). Payments created as a result of a [StandingOrderInstruction](/api/payments_hub_api/#Scheduled_payments-StandingOrderInstruction) use this payment type.",
          "PAYMENT_TYPE_UNKNOWN": "Default value. This is equivalent to a value that has not been set."
        }
      },
      "paymentsProcessingPriority": {
        "type": "string",
        "enum": [
          "PROCESSING_PRIORITY_UNKNOWN",
          "PROCESSING_PRIORITY_NORM",
          "PROCESSING_PRIORITY_HIGH"
        ],
        "default": "PROCESSING_PRIORITY_UNKNOWN",
        "x-enum-value-descriptions": {
          "PROCESSING_PRIORITY_HIGH": "High processing priority.",
          "PROCESSING_PRIORITY_NORM": "Normal processing priority.",
          "PROCESSING_PRIORITY_UNKNOWN": "Default value."
        }
      },
      "paymentsPurpose": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/code",
            "required": false
          },
          "proprietary": {
            "$ref": "#/components/schemas/proprietary",
            "required": false
          }
        },
        "description": "Purpose contains information about the underlying reason for the payment transaction, expressed as either a standard code or in a proprietary form."
      },
      "paymentsSettlementInformation": {
        "type": "object",
        "properties": {
          "settlement_date": {
            "type": "string",
            "description": "A string representation of the date that the Payment is settled within the relevant payment scheme. While no validation is performed on the format of this value, a YYYY-MM-DD format is recommended. Optional.",
            "x-example-override": "2020-05-14"
          },
          "settlement_cycle_id": {
            "type": "string",
            "description": "Indicates the settlement cycle the Payment was or will be settled in. For FPS, possible values are `1`, `2` and `3`. Optional.",
            "x-example-override": "1"
          }
        },
        "description": "SettlementInformation records additional information about the settlement of a payment. This information can be considered metadata in that it will never be used to trigger an action. Usage of this object is deprecated, and to be replaced by InterbankSettlementInformation."
      },
      "paymentsStatusReason": {
        "type": "string",
        "enum": [
          "STATUS_REASON_UNKNOWN",
          "STATUS_REASON_ACCEPT",
          "STATUS_REASON_ACCOUNT_NOT_PRESENT",
          "STATUS_REASON_ACCOUNT_CLOSED",
          "STATUS_REASON_UNSUPPORTED_CURRENCY",
          "STATUS_REASON_TERMS_AND_CONDITIONS",
          "STATUS_REASON_INSUFFICIENT_FUNDS",
          "STATUS_REASON_RESTRICTIONS_PREVENT",
          "STATUS_REASON_REJECTED_BY_RECEIVER",
          "STATUS_REASON_REQUEST_TIMED_OUT",
          "STATUS_REASON_INVALID_DEBITOR_PARTY",
          "STATUS_REASON_INVALID_CREDITOR_PARTY",
          "STATUS_REASON_SCHEME_TRANSACTION_LIMIT_BREACH",
          "STATUS_REASON_BANK_OUTBOUND_TRANSACTION_LIMIT_BREACH",
          "STATUS_REASON_INVALID_CURRENCY",
          "STATUS_REASON_PAYMENT_ORIGINATED_OVERSEAS",
          "STATUS_REASON_ACCEPT_WITH_QUALIFICATION",
          "STATUS_REASON_ACCEPT_SAME_DAY",
          "STATUS_REASON_ACCEPT_NEXT_CALENDAR_DAY",
          "STATUS_REASON_ACCEPT_NEXT_WORKING_DAY",
          "STATUS_REASON_ACCEPT_NEXT_DAY_PSD",
          "STATUS_REASON_INVALID_AMOUNT",
          "STATUS_REASON_SCHEME_VALIDATION_FAILED"
        ],
        "default": "STATUS_REASON_UNKNOWN",
        "x-enum-value-descriptions": {
          "STATUS_REASON_ACCEPT": "The payment suceeded.",
          "STATUS_REASON_ACCEPT_NEXT_CALENDAR_DAY": "The payment was accepted and funds will be applied to the creditor on the next calendar day.",
          "STATUS_REASON_ACCEPT_NEXT_DAY_PSD": "The payment was be accepted and funds will be applied to the creditor at an unspecified time within PSD guidelines. Not used.",
          "STATUS_REASON_ACCEPT_NEXT_WORKING_DAY": "The payment was accepted and funds will be applied to the creditor on the next working day.",
          "STATUS_REASON_ACCEPT_SAME_DAY": "The payment was accepted on the same day and funds will be applied to the creditor on the same day.",
          "STATUS_REASON_ACCEPT_WITH_QUALIFICATION": "The payment was accepted with qualification.",
          "STATUS_REASON_ACCOUNT_CLOSED": "Postings were rejected due to the status of the underlying Account. For example, this status reason is likely to be observed if the Account is closed.",
          "STATUS_REASON_ACCOUNT_NOT_PRESENT": "[Postings](/api/core_api/#Posting_instruction_batches-CreatePostingInstructionBatchRequest) were rejected because an [Account](/api/core_api/#Accounts) with a [PaymentDevice](/api/core_api/#Payment_devices-PaymentDevice) matching the details set in `creditor_party` for INBOUND payments or `debitor_party` for OUTBOUND payments was not found.",
          "STATUS_REASON_BANK_OUTBOUND_TRANSACTION_LIMIT_BREACH": "The payment was cancelled as it breached the individual outbound transaction limit set in the Payments Hub configuration. This configuration and status reason was only available for payments with `scheme` value of \"FPS\". As of version 1.13, `STATUS_REASON_SCHEME_TRANSACTION_LIMIT_BREACH` is used instead. However, the value `STATUS_REASON_BANK_OUTBOUND_TRANSACTION_LIMIT_BREACH` may still be applied to outbound payments that were created prior to version 1.13.",
          "STATUS_REASON_INSUFFICIENT_FUNDS": "Postings were rejected because the Balance of the underlying Account was insufficient to proceed with the payment.",
          "STATUS_REASON_INVALID_AMOUNT": "The payment was cancelled due to the specified `amount` not being valid for the specified `currency`. For example, a Payment with a `currency` of \"GBP\" and an amount of \"0.001\" would be cancelled due to the minor unit specified.",
          "STATUS_REASON_INVALID_CREDITOR_PARTY": "The OUTBOUND payment was cancelled due to the `creditor_party`. This could occur because:\n\n - For non-OnUs payments, the `bank_id` and `account_number` are not valid for the scheme specified; or\n\n - For OnUs payments, if specified, the `vault_account_id` does not match the `bank_id` and `account_number`",
          "STATUS_REASON_INVALID_CURRENCY": "The payment was cancelled due to the specified `currency` not being supported by the specified `scheme`.",
          "STATUS_REASON_INVALID_DEBITOR_PARTY": "The OUTBOUND payment was cancelled due to the `debitor_party`. This could occur because:\n\n - The `vault_account_id`, if specified, does not match the `bank_id` and `account_number` specified; or\n\n - An Account could not be identified for the `bank_id` and `account_number` specified; or\n\n - The status of the underlying Account is closed.",
          "STATUS_REASON_PAYMENT_ORIGINATED_OVERSEAS": "The payment was cancelled as it is a Payment Originating Overseas (POO).",
          "STATUS_REASON_REJECTED_BY_RECEIVER": "The OUTBOUND payment was rejected by the creditor party.",
          "STATUS_REASON_REQUEST_TIMED_OUT": "The OUTBOUND payment did not succeed because of a timeout downstream.",
          "STATUS_REASON_RESTRICTIONS_PREVENT": "Postings were rejected due to the presence of [Restrictions](/api/core_api/#Restrictions) on the underlying Account, [Customer](/api/core_api/#Customers-Customer) and/or Payment Device.",
          "STATUS_REASON_SCHEME_TRANSACTION_LIMIT_BREACH": "The payment was cancelled as it breached the individual transaction limit set in the [SchemeConfig](/api/payments_hub_api/#Schemes) of the [Scheme](/api/payments_hub_api/#Schemes).",
          "STATUS_REASON_SCHEME_VALIDATION_FAILED": "The OUTBOUND payment was cancelled because it failed the scheme validation stage.",
          "STATUS_REASON_TERMS_AND_CONDITIONS": "Postings were rejected to a breach of the terms and conditions of the financial product associated with the Account.",
          "STATUS_REASON_UNKNOWN": "Default value.",
          "STATUS_REASON_UNSUPPORTED_CURRENCY": "Postings were rejected due to the `currency` of the payment not being supported by the underlying Account."
        }
      },
      "plansAccountPlanAssoc": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for an account plan association.\n\nMax length: 36 characters."
          },
          "account_id": {
            "type": "string",
            "description": "The account ID associated with the plan."
          },
          "plan_id": {
            "type": "string",
            "description": "The plan ID associated with the account."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when this account plan association was created."
          },
          "start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when this account plan association became active."
          },
          "end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when this account plan association became inactive."
          },
          "status": {
            "$ref": "#/components/schemas/plansAccountPlanAssocStatus",
            "description": "The status of the account plan association."
          }
        }
      },
      "plansAccountPlanAssocStatus": {
        "type": "string",
        "enum": [
          "ACCOUNT_PLAN_ASSOC_STATUS_UNKNOWN",
          "ACCOUNT_PLAN_ASSOC_STATUS_ACTIVE",
          "ACCOUNT_PLAN_ASSOC_STATUS_INACTIVE"
        ],
        "default": "ACCOUNT_PLAN_ASSOC_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "ACCOUNT_PLAN_ASSOC_STATUS_ACTIVE": "The status of the account plan association is active. Can be updated to INACTIVE via plan updates.",
          "ACCOUNT_PLAN_ASSOC_STATUS_INACTIVE": "The status of the account plan association is inactive. This is a terminal status."
        }
      },
      "plansPlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for a plan. Optional for create requests.\n\nMax length: 36 characters."
          },
          "supervisor_contract_version_id": {
            "type": "string",
            "description": "The ID of the Supervisor Contract version. Required for create requests."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the plan was created."
          },
          "status": {
            "$ref": "#/components/schemas/plansPlanStatus",
            "description": "The status of the plan. Optional when creating the plan - defaults to `PLAN_STATUS_OPEN`.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 13
              },
              "changeType": "ADD_FIELD"
            }
          },
          "opening_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the plan status was updated to `PLAN_STATUS_OPEN`.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 13
              },
              "changeType": "ADD_FIELD"
            }
          },
          "activation_completed_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the activation PlanUpdate for the Plan succeeded and its status was updated to `PLAN_UPDATE_STATUS_COMPLETED`.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 13
              },
              "changeType": "ADD_FIELD"
            }
          },
          "closing_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the plan status was updated to `PLAN_STATUS_CLOSED`.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 13
              },
              "changeType": "ADD_FIELD"
            }
          },
          "closure_completed_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the closure PlanUpdate for the Plan succeeded and its status was updated to `PLAN_UPDATE_STATUS_COMPLETED`.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 13
              },
              "changeType": "ADD_FIELD"
            }
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map of unstructured fields that hold instance-specific plan metadata."
          }
        }
      },
      "plansPlanStatus": {
        "type": "string",
        "enum": [
          "PLAN_STATUS_UNKNOWN",
          "PLAN_STATUS_PENDING",
          "PLAN_STATUS_OPEN",
          "PLAN_STATUS_CLOSED"
        ],
        "default": "PLAN_STATUS_UNKNOWN"
      },
      "protobufFieldMask": {
        "type": "object",
        "properties": {
          "paths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The set of field mask paths."
          }
        },
        "description": "\"paths\": [\"f.a\", \"f.b.d\"]\n\nHere `f` represents a field in some root message, `a` and `b` fields in the message found in `f`, and `d` a field found in the message in `f.b`.\n\nFields are represented by their JSON field names.\n\n   \"paths\": [\"f.field1\", \"f.field_on_f.some_field_name\"]\n\nField masks are used to specify a subset of fields that should be, or have been, modified by an update operation.\n\nField masks are JSON encoding as a string array.",
        "title": "FieldMask represents a set of symbolic field paths, for example:"
      },
      "protobufListValue": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/googleprotobufValue"
            },
            "description": "Repeated field of dynamically typed values."
          }
        },
        "description": "`ListValue` is a wrapper around a repeated field of values.\n\nThe JSON representation for `ListValue` is JSON array."
      },
      "protobufNullValue": {
        "type": "string",
        "enum": [
          "NULL_VALUE"
        ],
        "default": "NULL_VALUE",
        "description": "`NullValue` is a singleton enumeration to represent the null value for the `Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.",
        "x-enum-value-descriptions": {
          "NULL_VALUE": "Null value."
        }
      },
      "protobufStruct": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/googleprotobufValue"
            },
            "description": "Unordered map of dynamically typed values."
          }
        },
        "description": "`Struct` represents a structured data value, consisting of fields which map to dynamically typed values. In some languages, `Struct` might be supported by a native representation. For example, in scripting languages like JS a struct is represented as an object. The details of that representation are described together with the proto support for the language.\n\nThe JSON representation for `Struct` is JSON object."
      },
      "rangesTimestampRange": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time",
            "description": "Values in this range must be greater than or equal to the value of from."
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "description": "Values in this range must be less than the value of to."
          }
        },
        "description": "Describes a range of timestamps."
      },
      "relationsReturnDetails": {
        "type": "object",
        "properties": {
          "returned_payment_id": {
            "type": "string",
            "description": "The ID of the payment that is to be returned.",
            "x-example-override": ""
          },
          "reason": {
            "type": "string",
            "description": "This is a free form string field that you can set when you create a return payment, to store additional information about the reason for that return payment. This field is optional. The contents of this field are for informational purposes only, and are not used in any later processing of the return Payment.",
            "x-example-override": ""
          },
          "external_code": {
            "type": "string",
            "description": "This is the scheme-specific code that provides the reason for the return payment. This can be set by any caller on creation of a payment of type `PAYMENT_TYPE_RETURN`. For an INBOUND payment, this will be the value of the return reason code provided by the relevant scheme/gateway component. For an OUTBOUND payment, this can be set to define the exact action code that will be used when sending the payment to the relevant scheme/gateway. If the value provided is not a valid action code for the selected scheme, the payment will be CANCELLED with status reason `STATUS_REASON_SCHEME_VALIADTION_FAILED`. Required on resource creation, unless the `return_reason` field has been populated.",
            "x-example-override": ""
          }
        }
      },
      "relationsReturnedByDetails": {
        "type": "object",
        "properties": {
          "returned_by_payment_id": {
            "type": "string",
            "description": "The ID of the original payment that created the returned payment.",
            "x-example-override": ""
          }
        }
      },
      "restrictionsRestriction": {
        "type": "object",
        "properties": {
          "restriction_type": {
            "$ref": "#/components/schemas/restrictionsRestrictionType",
            "description": "Enum value indicating which restriction type this applies to."
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "The restriction parameters. Param name (descriptor) -> Param value"
          },
          "customer_id": {
            "type": "string",
            "description": "The customer ID this restriction applies to."
          },
          "account_id": {
            "type": "string",
            "description": "The account ID this restriction applies to."
          },
          "payment_device_id": {
            "type": "string",
            "description": "The payment device ID this restriction applies to."
          },
          "effective_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the restriction applies from."
          },
          "expiry_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the restriction will expire. If empty, the restriction will not expire automatically."
          },
          "id": {
            "type": "string",
            "description": "The unique identifier for this restriction."
          }
        },
        "description": "Primitive restriction. This is an output-only object and is always part of a RestrictionSet."
      },
      "restrictionsRestrictionSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for this restriction set. Output only."
          },
          "restriction_set_definition_id": {
            "type": "string",
            "description": "The ID of a restriction set definition. Optional for create requests; if not provided for creation, a restriction set definition version ID must be provided.\n"
          },
          "restriction_set_definition_version_id": {
            "type": "string",
            "description": "The ID of a restriction set definition version. Optional for create requests; if not provided for creation, a restriction set definition ID must be provided.\n"
          },
          "name": {
            "type": "string",
            "description": "The name of the restriction set. Optional.\n"
          },
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/restrictionsRestriction"
            },
            "description": "The restrictions that constitute this restriction set. Output only."
          },
          "description": {
            "type": "string",
            "description": "A description of the restriction set. Optional.\n"
          },
          "restriction_set_parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The restriction parameters for the parameterised restriction types in the restriction set definition. For example, the restriction type LIMIT_DEBITS requires `limit_debits_amount` and`limit_debits_currency` to be included here. Optional unless the restriction set definition version contains restriction types that require parameters.\n"
          },
          "customer_id": {
            "type": "string",
            "description": "The ID of the customer the CUSTOMER level restrictions are to be applied to. Required for create requests if there is at least one restriction definition with level CUSTOMER.\n"
          },
          "account_id": {
            "type": "string",
            "description": "The ID of the account the ACCOUNT level restrictions are to be applied to. Required for create requests if there is at least one restriction definition with level ACCOUNT.\n"
          },
          "payment_device_id": {
            "type": "string",
            "description": "The ID of the payment device the PAYMENT_DEVICE level restrictions are to be applied to. Required for create requests if there is at least one restriction definition with level PAYMENT_DEVICE.\n"
          },
          "effective_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the restriction set should apply from; must be in the future. Optional; default is the current time.\n"
          },
          "expiry_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the restriction will expire; must be after the effective_timestamp. Optional; if left empty, the restriction will not expire automatically.\n"
          },
          "is_active": {
            "type": "boolean",
            "description": "Indicates if the restriction set is active at the current time or at the time provided when, for example listing restriction sets. Update only."
          }
        },
        "description": "An instantiated restriction set definition formed of restrictions that apply to specific `customer_id` or `account_id` or `payment_device_id`."
      },
      "restrictionsRestrictionType": {
        "type": "string",
        "enum": [
          "RESTRICTION_TYPE_UNKNOWN",
          "RESTRICTION_TYPE_PREVENT_CREDITS",
          "RESTRICTION_TYPE_REVIEW_CREDITS",
          "RESTRICTION_TYPE_PREVENT_DEBITS",
          "RESTRICTION_TYPE_REVIEW_DEBITS",
          "RESTRICTION_TYPE_PREVENT_CLOSURE",
          "RESTRICTION_TYPE_PREVENT_OPENING",
          "RESTRICTION_TYPE_LIMIT_DEBITS",
          "RESTRICTION_TYPE_LIMIT_CREDITS",
          "RESTRICTION_TYPE_PREVENT_UPDATES",
          "RESTRICTION_TYPE_PREVENT_ACCOUNT_CREATION"
        ],
        "default": "RESTRICTION_TYPE_UNKNOWN",
        "description": "The restriction type that should be applied.",
        "x-enum-value-descriptions": {
          "RESTRICTION_TYPE_LIMIT_CREDITS": "A restriction type that limits credits for a customer, account or payment device. Applies to individual posting amounts, not a cumulative amount across one or more postings. This restriction requires `limit_credits_amount` and `limit_credits_currency` to be included as part of the restriction_set_parameters when creating a restriction set. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Prevents the customer from receiving credits above the specified amount. [RESTRICTION_LEVEL_ACCOUNT] - Prevents the account from receiving credits above the specified amount. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Prevents the payment device from receiving credits above the specified amount.",
          "RESTRICTION_TYPE_LIMIT_DEBITS": "A restriction type that limits debits being made by a customer, account or payment device. Applies to individual posting amounts, not a cumulative amount across one or more postings. This restriction requires `limit_debits_amount` and `limit_debits_currency` to be included as part of the restriction_set_parameters when creating a restriction set. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Limits the debits the customer can make to the specified amount. [RESTRICTION_LEVEL_CUSTOMER, RESTRICTION_LEVEL_ACCOUNT] - Limits the debits the customer can make from an account to the specified amount. [RESTRICTION_LEVEL_ACCOUNT] - Limits the debits the account can make to the specified amount. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Limits the debits the payment device can make to the specified amount.",
          "RESTRICTION_TYPE_PREVENT_ACCOUNT_CREATION": "A restriction type that prevents a customer from applying for any accounts, and from being added as a new stakeholder when updating an account. A stakeholder with a restriction of this type can be removed from the stakeholder list. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Prevents the customer from applying for any accounts.",
          "RESTRICTION_TYPE_PREVENT_CLOSURE": "A restriction type that prevents closing a customer, account or payment device. Enforced restriction level combinations are: [RESTRICTION_LEVEL_ACCOUNT] - Prevents all stakeholders from closing the account. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Prevents the payment device from being made inactive.",
          "RESTRICTION_TYPE_PREVENT_CREDITS": "A restriction type that prevents credits. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Prevents the customer from receiving credits [RESTRICTION_LEVEL_ACCOUNT] - Prevents the account from receiving credits. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Prevents the payment device from receiving credits. [RESTRICTION_LEVEL_ACCOUNT, RESTRICTION_LEVEL_PAYMENT_DEVICE] - Prevents the account from receiving credits using this payment device.<br><br> The optional argument `\"prevent_credits_exemption_conditions\"`, defines arbitrary key-value pairs, which, if they are all present in the `posting_instructions[].instruction_details` field of a posting instruction batch, will allow the restriction to be bypassed. <br><br> The `\"prevent_credits_exemption_conditions\"` parameter must be formatted as a JSON string with one or more key-value pairs. For example, to prevent credits on an account except when the debtor account number is \"1234\", the `\"prevent_credits_exemption_conditions\"` parameter may look like `\"{\"debitor_account_number\":\"1234\", \"debitor_bank_id\":\"4321\"}\"`.",
          "RESTRICTION_TYPE_PREVENT_DEBITS": "A restriction type that prevents debits. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Prevents debits for the customer. [RESTRICTION_LEVEL_CUSTOMER, RESTRICTION_LEVEL_ACCOUNT] - Prevents debits for the customer on a specific account. [RESTRICTION_LEVEL_ACCOUNT] - Prevents debits for the account. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Prevents debits for the payment device.<br><br> The optional argument `\"prevent_debits_exemption_conditions\"`, defines arbitrary key-value pairs, which, if they are all present in the `posting_instructions[].instruction_details` field of a posting instruction batch, will allow the restriction to be bypassed. <br><br> The `\"prevent_debits_exemption_conditions\"` parameter must be formatted as a JSON string with one or more key-value pairs. For example, to prevent debits on an account except when the creditor account number is \"1234\", the `\"prevent_debits_exemption_conditions\"` parameter may look like `\"{\"creditor_account_number\":\"1234\", \"creditor_bank_id\":\"4321\"}\"`.",
          "RESTRICTION_TYPE_PREVENT_OPENING": "A restriction type that prevents opening a customer, account or payment device. Enforced restriction level combinations are: [RESTRICTION_LEVEL_ACCOUNT] - Prevents an account from being approved [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Prevents a payment device from being made active",
          "RESTRICTION_TYPE_PREVENT_UPDATES": "A restriction type that prevents updating a customer, account or payment device. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Prevents the customer from being updated. [RESTRICTION_LEVEL_ACCOUNT] - Prevents the account from being updated. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Prevents the payment device from being updated.",
          "RESTRICTION_TYPE_REVIEW_CREDITS": "A restriction type that will require reviewing credits. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Forces a review of credits for a customer (NOT YET IMPLEMENTED IN POSTINGS PROCESSOR). [RESTRICTION_LEVEL_ACCOUNT] - Forces a review of credits for an account. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Forces a review of credits for a payment device.",
          "RESTRICTION_TYPE_REVIEW_DEBITS": "A restriction type that requires reviewing debits. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Forces a review of customer debits. [RESTRICTION_LEVEL_ACCOUNT] - Forces a review of account debits. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Forces a review of payment device debits.",
          "RESTRICTION_TYPE_UNKNOWN": "An unknown restriction type. There are no enforced combinations."
        }
      },
      "scheduled_paymentsFuturePaymentInstruction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The UUID of the FuturePaymentInstruction, generated on creation. Required for update calls.",
            "x-output-only": true,
            "x-example-override": "3b595fb4-3f7e-4dbb-a1b5-e59db8d5ee77"
          },
          "scheme_id": {
            "type": "string",
            "description": "The intended payment scheme that the future payment belongs to. The scheme must be `ACTIVE` for the resource to be created. The allowed value is `FPS`. Required on resource creation.",
            "x-create-only": true,
            "x-example-override": "FPS"
          },
          "debitor_party": {
            "$ref": "#/components/schemas/v1scheduled_paymentsParty",
            "description": "The details of the party sending the payment. Required on resource creation.",
            "x-create-only": true
          },
          "creditor_party": {
            "$ref": "#/components/schemas/v1scheduled_paymentsParty",
            "description": "The details of the party receiving the payment. Required on resource creation."
          },
          "reference": {
            "type": "string",
            "description": "Reference information associated with the payment that will be passed to the beneficiary. Optional. For FPS FuturePaymentInstructions, if the reference is set, it must have a maximum length of 18 characters.",
            "x-example-override": "Rent 2020"
          },
          "metadata": {
            "$ref": "#/components/schemas/protobufStruct",
            "description": "Metadata related to the payment. Optional.",
            "x-create-only": true,
            "x-third-party": "GOOGLE_PROTOBUF_STRUCT"
          },
          "payment_date": {
            "type": "string",
            "description": "The date on which the future payment will occur, with format YYYY-MM-DD. Required on resource creation.",
            "x-example-override": "2020-10-20"
          },
          "currency": {
            "type": "string",
            "description": "The three-letter alphabetic currency code based on ISO 4217, for example GBP or USD. Required on resource creation.",
            "x-example-override": "GBP"
          },
          "amount": {
            "type": "string",
            "description": "A string value of the payment amount. This is an unsigned floating point number with an optional decimal point, for example \"10.00\", \"10.1\", \"0.0123\", \"5\". It must be positive and non-zero. For FPS FuturePaymentInstructions, up to two decimal places can be specified. Required on resource creation.",
            "x-example-override": "500.00"
          },
          "status": {
            "$ref": "#/components/schemas/scheduled_paymentsFuturePaymentInstructionStatus",
            "description": "The current status of the FuturePaymentInstruction.",
            "x-update-only": true
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the FuturePaymentInstruction was created.",
            "x-output-only": true,
            "x-third-party": "GOOGLE_PROTOBUF_TIMESTAMP"
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the last change to the FuturePaymentInstruction occurred.",
            "x-output-only": true,
            "x-third-party": "GOOGLE_PROTOBUF_TIMESTAMP"
          },
          "migration_info": {
            "$ref": "#/components/schemas/v1scheduled_paymentsMigrationInfo",
            "description": "Stores migration-specific information.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 5
              },
              "changeType": "ADD_FIELD"
            }
          }
        }
      },
      "scheduled_paymentsFuturePaymentInstructionStatus": {
        "type": "string",
        "enum": [
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_UNKNOWN",
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_RECEIVED",
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_ACTIVE",
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_CANCELLED",
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_COMPLETED",
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_FAILED",
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_PENDING_ACTIVATION",
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_ACTIVATION_FAILED"
        ],
        "default": "FUTURE_PAYMENT_INSTRUCTION_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_ACTIVATION_FAILED": "The future payment instruction encountered an error when attempting to be activated. No payment will be executed and no further actions are allowed on the future payment instruction.",
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_ACTIVE": "The future payment instruction is in progress and a payment will be executed.",
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_CANCELLED": "The future payment instruction has been cancelled by the client, no payment will be executed and no further actions are allowed on the future payment instruction.",
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_COMPLETED": "The payment was executed, and no further actions are allowed on the future payment instruction.",
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_FAILED": "The future payment instruction encountered an unexpected error on creation or during execution, no payment will be executed and no further actions are allowed on the future payment instruction.",
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_PENDING_ACTIVATION": "The future payment instruction has been received and is in the process of being activated.",
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_RECEIVED": "The future payment instruction has been received and further actions are needed to make it active.",
          "FUTURE_PAYMENT_INSTRUCTION_STATUS_UNKNOWN": "Default future payment instruction status."
        }
      },
      "scheduled_paymentsStandingOrderFrequency": {
        "type": "string",
        "enum": [
          "STANDING_ORDER_FREQUENCY_UNKNOWN",
          "STANDING_ORDER_FREQUENCY_INTERVAL_DAY",
          "STANDING_ORDER_FREQUENCY_INTERVAL_WEEK_DAY",
          "STANDING_ORDER_FREQUENCY_EVERY_MONTH_WEEK_DAY",
          "STANDING_ORDER_FREQUENCY_INTERVAL_MONTH_DAY",
          "STANDING_ORDER_FREQUENCY_QUARTER_DAY"
        ],
        "default": "STANDING_ORDER_FREQUENCY_UNKNOWN",
        "x-enum-value-descriptions": {
          "STANDING_ORDER_FREQUENCY_EVERY_MONTH_WEEK_DAY": "Every month, on the N1 week of the month, on the N2 day of the week. N1 is the number of the week in the month, and N2 is the day of the week on which to execute the payment. Create only: if N2 is not specified, the `first_payment_date` day of week is used. The allowed values of N1 range from \"1\" to \"4\". The allowed values of N2, if specified, range from \"0\" to \"6\", where \"0\" represents Sunday and \"6\" represents Saturday.",
          "STANDING_ORDER_FREQUENCY_INTERVAL_DAY": "Every N days. N is the interval in number of days from the `first_payment_date` and between each recurring payment. The allowed values of N range from \"1\" to \"3650\".",
          "STANDING_ORDER_FREQUENCY_INTERVAL_MONTH_DAY": "Every N1 month, on the N2 day of the month. N1 is the interval in number of months from the `first_payment_date` and between each recurring payment. N2 is the day of the month on which to execute the payment. Create only: if N2 is not specified, the `first_payment_date` day of the month is used. The allowed values of N1 range from \"1\" to \"120\". The allowed values of N2, if specified, range from \"1\" to \"31\".",
          "STANDING_ORDER_FREQUENCY_INTERVAL_WEEK_DAY": "Every N1 weeks, on the N2 day of the week. N1 is the interval in number of weeks from the `first_payment_date` and between each recurring payment. N2 is the day of the week on which to execute the payment. Create only: if N2 is not specified, the `first_payment_date` day of week is used. The allowed values of N1 range from \"1\" to \"520\". The allowed values of N2, if specified, range from \"0\" to \"6\", where \"0\" represents Sunday and \"6\" represents Saturday.",
          "STANDING_ORDER_FREQUENCY_QUARTER_DAY": "Every Q quarter day. Q is the type of quarter day. The allowed value is \"ENGLISH\". If the value of `frequency_details` is \"ENGLISH\", payments will be triggered on 25th March, 24th June, 29th September and 25th December.",
          "STANDING_ORDER_FREQUENCY_UNKNOWN": "Default frequency value."
        }
      },
      "scheduled_paymentsStandingOrderInstruction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The UUID of the StandingOrderInstruction, generated on creation. Required for update calls.",
            "x-output-only": true,
            "x-example-override": "3b595fb4-3f7e-4dbb-a1b5-e59db8d5ee77"
          },
          "scheme_id": {
            "type": "string",
            "description": "The intended payment scheme that the standing order payment belongs to. The scheme must be `ACTIVE` for the resource to be created. The allowed value is `FPS`. Required on resource creation.",
            "x-create-only": true,
            "x-example-override": "FPS"
          },
          "debitor_party": {
            "$ref": "#/components/schemas/v1scheduled_paymentsParty",
            "description": "The details of the party sending the payment. Required on resource creation.",
            "x-create-only": true
          },
          "creditor_party": {
            "$ref": "#/components/schemas/v1scheduled_paymentsParty",
            "description": "The details of the party receiving the payment. Required on resource creation."
          },
          "reference": {
            "type": "string",
            "description": "Reference information associated with the payment that will be passed to the beneficiary. Optional. For FPS FuturePaymentInstructions, if the reference is set, it must have a maximum length of 18 characters.",
            "x-example-override": "Rent 2020"
          },
          "metadata": {
            "$ref": "#/components/schemas/protobufStruct",
            "description": "Metadata related to the payment. Optional.",
            "x-create-only": true,
            "x-third-party": "GOOGLE_PROTOBUF_STRUCT"
          },
          "currency": {
            "type": "string",
            "description": "The three-letter alphabetic currency code based on ISO 4217, for example GBP or USD. Required on resource creation.",
            "x-example-override": "GBP"
          },
          "schedule": {
            "$ref": "#/components/schemas/scheduled_paymentsStandingOrderSchedule",
            "description": "The schedule of the StandingOrderInstruction. Required on resource creation."
          },
          "status": {
            "$ref": "#/components/schemas/scheduled_paymentsStandingOrderInstructionStatus",
            "description": "The current status of the StandingOrderInstruction.",
            "x-update-only": true
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the StandingOrderInstruction was created.",
            "x-output-only": true,
            "x-third-party": "GOOGLE_PROTOBUF_TIMESTAMP"
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the last change to the StandingOrderInstruction occurred.",
            "x-output-only": true,
            "x-third-party": "GOOGLE_PROTOBUF_TIMESTAMP"
          },
          "migration_info": {
            "$ref": "#/components/schemas/v1scheduled_paymentsMigrationInfo",
            "description": "Stores migration-specific information.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 5
              },
              "changeType": "ADD_FIELD"
            }
          }
        }
      },
      "scheduled_paymentsStandingOrderInstructionStatus": {
        "type": "string",
        "enum": [
          "STANDING_ORDER_INSTRUCTION_STATUS_UNKNOWN",
          "STANDING_ORDER_INSTRUCTION_STATUS_RECEIVED",
          "STANDING_ORDER_INSTRUCTION_STATUS_ACTIVE",
          "STANDING_ORDER_INSTRUCTION_STATUS_INACTIVE",
          "STANDING_ORDER_INSTRUCTION_STATUS_CANCELLED",
          "STANDING_ORDER_INSTRUCTION_STATUS_COMPLETED",
          "STANDING_ORDER_INSTRUCTION_STATUS_FAILED",
          "STANDING_ORDER_INSTRUCTION_STATUS_PENDING_ACTIVATION",
          "STANDING_ORDER_INSTRUCTION_STATUS_ACTIVATION_FAILED"
        ],
        "default": "STANDING_ORDER_INSTRUCTION_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "STANDING_ORDER_INSTRUCTION_STATUS_ACTIVATION_FAILED": "The standing order instruction encountered an error when attempting to be activated. No payment will be executed and no further actions are allowed on the standing order instruction.",
          "STANDING_ORDER_INSTRUCTION_STATUS_ACTIVE": "The standing order instruction is in progress and payments will be executed.",
          "STANDING_ORDER_INSTRUCTION_STATUS_CANCELLED": "The standing order instruction has been cancelled by the client, no further payments will be executed and no further actions are allowed on the standing order instruction.",
          "STANDING_ORDER_INSTRUCTION_STATUS_COMPLETED": "All payments were executed, and no further actions are allowed on the standing order instruction.",
          "STANDING_ORDER_INSTRUCTION_STATUS_FAILED": "The standing order instruction encountered an unexpected error on creation or during execution, no further payments will be executed and no further actions are allowed on the standing order instruction.",
          "STANDING_ORDER_INSTRUCTION_STATUS_INACTIVE": "The standing order instruction is suspended and payments will not be executed.",
          "STANDING_ORDER_INSTRUCTION_STATUS_PENDING_ACTIVATION": "The standing order instruction has been received and is in the process of being activated.",
          "STANDING_ORDER_INSTRUCTION_STATUS_RECEIVED": "The standing order instruction has been received and further actions are needed to make it active.",
          "STANDING_ORDER_INSTRUCTION_STATUS_UNKNOWN": "Default standing order instruction status."
        }
      },
      "scheduled_paymentsStandingOrderSchedule": {
        "type": "object",
        "properties": {
          "first_payment_date": {
            "type": "string",
            "description": "The date on which the first payment of the standing order will occur, with format YYYY-MM-DD. The payment will be made with `first_payment_amount` (or `recurring_amount` if it is not set). Required on resource creation.",
            "x-example-override": "2020-10-20"
          },
          "first_payment_amount": {
            "type": "string",
            "description": "The amount of the first payment. Optional on resource creation; if this is not specified, the `recurring_payment_amount` will be used on the first payment.",
            "x-example-override": "500.00"
          },
          "frequency": {
            "$ref": "#/components/schemas/scheduled_paymentsStandingOrderFrequency",
            "description": "The frequency of the standing order. Together with additional information from `frequency_details` and from the `first_payment_date`, it specifies the time interval between each payment. The maximum allowed interval between payments is ten years.",
            "x-example-override": "STANDING_ORDER_FREQUENCY_INTERVAL_MONTH_DAY"
          },
          "frequency_details": {
            "type": "string",
            "description": "Additional information for the `frequency` rules, formatted as \"Q\", \"N\" or \"N1:N2\". Create only: if the rule takes N2 but only one value (N1) is specified, N2 is computed from the day of `first_payment_date`. For example, for a recurring payment every two months on the 15th day of the months, `INTERVAL_MONTH_DAY` is set, and `frequency details` will contain \"2:15\", or only \"2\" if the day of `first_payment_date` is already 15.",
            "x-example-override": "2:20"
          },
          "frequency_start_date": {
            "type": "string",
            "description": "A payment will be made on this date and a recurring schedule will be applied from this date. This field should be set when `frequency` and `frequency_details` are updated if the `first_payment_date` has already passed. The date must be in the future. Update only.",
            "x-update-only": true,
            "x-example-override": "2020-12-20"
          },
          "recurring_payment_amount": {
            "type": "string",
            "description": "The amount of the recurring payment. Required on resource creation.",
            "x-example-override": "1000.00"
          },
          "last_payment_date": {
            "type": "string",
            "description": "The date on which the last payment of the standing order will occur, in the format YYYY-MM-DD. The payment will be made with `last_payment_amount` (or `recurring_amount` if it is not set). Optional on resource creation; if the date is not specified, the standing order will run indefinitely until the `last_payment_date` is updated or the status is updated to `CANCELLED`. NOTE: If both last and final payment date are set, `final_payment_date` will take precedence.",
            "x-release-info": {
              "noticeVersion": {
                "major": 2,
                "minor": 8
              },
              "releaseVersion": {
                "major": 4
              },
              "changeType": "REMOVE_FIELD",
              "description": "This field is replaced by final_payment_date"
            },
            "x-example-override": "2021-05-20"
          },
          "last_payment_amount": {
            "type": "string",
            "description": "The amount of the last payment. Optional on resource creation; if this is not specified, the `recurring_payment_amount` will be used on the last payment. NOTE: If both last and final payment amount are set, `final_payment_amount` will take precedence.",
            "x-release-info": {
              "noticeVersion": {
                "major": 2,
                "minor": 8
              },
              "releaseVersion": {
                "major": 4
              },
              "changeType": "REMOVE_FIELD",
              "description": "This field is replaced by final_payment_amount"
            },
            "x-example-override": "200.00"
          },
          "final_payment_date": {
            "type": "string",
            "description": "The date on which the final payment of the standing order will occur, in the format YYYY-MM-DD. The payment will be made with `final_payment_amount` (or `recurring_amount` if `final_payment_amount` is not set). Optional on resource creation; if the date is not specified, the standing order will run indefinitely until the `final_payment_date` is updated or the status is updated to `CANCELLED`. NOTE: If both final and last payment date are set, `final_payment_date` will take precedence.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 8
              },
              "changeType": "ADD_FIELD"
            },
            "x-example-override": "2021-05-20"
          },
          "final_payment_amount": {
            "type": "string",
            "description": "The amount of the final payment. Optional on resource creation; if this is not specified, the `recurring_payment_amount` will be used on the final payment. NOTE: If both final and last payment amount are set, `final_payment_amount` will take precedence.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 8
              },
              "changeType": "ADD_FIELD"
            },
            "x-example-override": "200.00"
          }
        }
      },
      "ukIBAN": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The UUID of the IBAN assigned by the Payments Hub.",
            "x-output-only": true,
            "x-example-override": "4d786761-ff4d-4b87-a2d6-7c6c8556d867"
          },
          "bic": {
            "type": "string",
            "description": "The SWIFT BIC code that will be used for the generation of the IBAN. Required on resource creation.",
            "x-create-only": true,
            "x-example-override": "BICABCXXXXX"
          },
          "bban_id": {
            "type": "string",
            "description": "The ID of the UK BBAN resource in the Payments Hub. The values of the BBAN fields are used for the generation of the IBAN. Required on resource creation.",
            "x-create-only": true,
            "x-example-override": "d4ceff32-92f4-42a3-9c37-c49b1d6715ea"
          },
          "account_number": {
            "type": "string",
            "description": "The IBAN number of the account. Optional on resource creation. If the IBAN is provided, the Modulo97 algorithm is applied to validate the IBAN's check digits. If the IBAN is not provided, the IBAN will be generated by the Payments Hub.",
            "x-example-override": "GB29BICA12345612345678"
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the IBAN was created. This is generated by the Payments Hub.",
            "x-output-only": true,
            "x-third-party": "GOOGLE_PROTOBUF_TIMESTAMP"
          }
        }
      },
      "v1BatchGetDependencyGroupsResponse": {
        "type": "object",
        "properties": {
          "dependency_groups": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1DependencyGroup"
            },
            "description": "A map of the requested dependency group ID(s) to the corresponding dependency group(s)."
          }
        }
      },
      "v1BatchGetResourceBatchesResponse": {
        "type": "object",
        "properties": {
          "resource_batches": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1ResourceBatch"
            },
            "description": "A map of the requested resource batch ID(s) to the corresponding resource batch(es)."
          }
        }
      },
      "v1DependencyGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for a dependency group."
          },
          "status": {
            "$ref": "#/components/schemas/v1DependencyGroupStatus",
            "description": "The status of the dependency group. Output only.",
            "x-output-only": true
          },
          "status_message": {
            "type": "string",
            "description": "Messages describing the status. Non-empty only on FAILURE or REJECTED. Output only."
          },
          "last_updated_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp indicating when the status was last updated. Output only."
          }
        }
      },
      "v1DependencyGroupStatus": {
        "type": "string",
        "enum": [
          "DEPENDENCY_GROUP_STATUS_UNKNOWN",
          "DEPENDENCY_GROUP_STATUS_PENDING",
          "DEPENDENCY_GROUP_STATUS_COMPLETE",
          "DEPENDENCY_GROUP_STATUS_FAILED",
          "DEPENDENCY_GROUP_STATUS_REJECTED"
        ],
        "default": "DEPENDENCY_GROUP_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "DEPENDENCY_GROUP_STATUS_UNKNOWN": "Default value."
        }
      },
      "v1ListDependencyGroupsResponse": {
        "type": "object",
        "properties": {
          "dependency_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1DependencyGroup"
            },
            "description": "A list of matching dependency groups, ordered by ascending `id`."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "v1ListResourceBatchesResponse": {
        "type": "object",
        "properties": {
          "resource_batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1ResourceBatch"
            },
            "description": "A list of matching resource batches, ordered by ascending `id`."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "v1ListResourcesResponse": {
        "type": "object",
        "properties": {
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1Resource"
            },
            "description": "A list of matching resources, ordered by ascending `id`. For a list of all supported resource types, see the Supported Resources section of the [Create resource batch requests](/api/data_loader_api/#streaming_api-create_resource_batch_requests) page."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "v1Resource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for a resource."
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of other resources this resource links to logically. Optional, however some resource types expect at least one."
          },
          "resource_batch_id": {
            "type": "string",
            "description": "The ID of the resource batch this resource belongs to. Output only."
          },
          "dependency_group_id": {
            "type": "string",
            "description": "The ID of the dependency group this resource was sorted into. Output only."
          },
          "resource_status": {
            "$ref": "#/components/schemas/v1ResourceStatus",
            "description": "The status of the resource. Output only.",
            "x-output-only": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map containing metadata needed for the resource."
          },
          "tranche_id": {
            "type": "string",
            "description": "The ID of the tranche this resource belongs to."
          },
          "update_mask": {
            "$ref": "#/components/schemas/protobufFieldMask",
            "description": "Optional, fields to be updated on given resource."
          },
          "vault_id": {
            "type": "string",
            "description": "Optional, the ID of the resource in vault, defaults to the id of this resource."
          },
          "status_message": {
            "type": "string",
            "description": "Messages describing the status. Non-empty only on FAILURE or REJECTED. Output only."
          },
          "flag_resource": {
            "$ref": "#/components/schemas/flagsFlag",
            "required": true
          }
        }
      },
      "v1ResourceBatch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for a resource batch."
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1Resource"
            },
            "description": "A list of resources to be loaded as part of the batch. For a list of all supported resource types, see the Supported Resources section of the [Create resource batch requests](/api/data_loader_api/#streaming_api-create_resource_batch_requests) page."
          },
          "status": {
            "$ref": "#/components/schemas/v1ResourceBatchStatus",
            "description": "The status of the resource. Output only.",
            "x-output-only": true
          },
          "last_updated_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp indicating when the status was last updated. Output only."
          },
          "validation_error": {
            "type": "string",
            "description": "Message indicating reason behind rejecting the resource batch. Output only."
          },
          "tranche_id": {
            "type": "string",
            "description": "The ID of the tranche that the resource batch belongs to."
          }
        }
      },
      "v1ResourceBatchStatus": {
        "type": "string",
        "enum": [
          "RESOURCE_BATCH_STATUS_UNKNOWN",
          "RESOURCE_BATCH_STATUS_PENDING",
          "RESOURCE_BATCH_STATUS_COMPLETE",
          "RESOURCE_BATCH_STATUS_FAILED",
          "RESOURCE_BATCH_STATUS_REJECTED",
          "RESOURCE_BATCH_STATUS_REJECTED_RESOURCE_DUPLICATED"
        ],
        "default": "RESOURCE_BATCH_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "RESOURCE_BATCH_STATUS_COMPLETE": "All resources within the batch have been successfully loaded.",
          "RESOURCE_BATCH_STATUS_FAILED": "At least one resource within the batch has failed loading.",
          "RESOURCE_BATCH_STATUS_PENDING": "There are resources within the batch still in progress.",
          "RESOURCE_BATCH_STATUS_REJECTED": "At least one resource within the batch has been rejected during validation.",
          "RESOURCE_BATCH_STATUS_REJECTED_RESOURCE_DUPLICATED": "At least one resource within the batch has been previously loaded.",
          "RESOURCE_BATCH_STATUS_UNKNOWN": "Default value."
        }
      },
      "v1ResourceStatus": {
        "type": "string",
        "enum": [
          "RESOURCE_STATUS_UNKNOWN",
          "RESOURCE_STATUS_PENDING",
          "RESOURCE_STATUS_LOADED",
          "RESOURCE_STATUS_FAILED",
          "RESOURCE_STATUS_REJECTED",
          "RESOURCE_STATUS_SENT",
          "RESOURCE_STATUS_ASYNC_COMPLETE"
        ],
        "default": "RESOURCE_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "RESOURCE_STATUS_ASYNC_COMPLETE": "The results of all asynchronous operations have been received and were successful",
          "RESOURCE_STATUS_FAILED": "Loading the resource has failed.",
          "RESOURCE_STATUS_LOADED": "The resource has been successfully loaded.",
          "RESOURCE_STATUS_PENDING": "The resource hasn't been picked up by the committer or is in progress.",
          "RESOURCE_STATUS_REJECTED": "The resource has been rejected during validation.",
          "RESOURCE_STATUS_SENT": "The resource has been sent to Vault and the committer is waiting on the result of an asynchronous operation (no longer in use).",
          "RESOURCE_STATUS_UNKNOWN": "Default value."
        }
      },
      "v1ResourceType": {
        "type": "string",
        "enum": [
          "RESOURCE_TYPE_UNKNOWN",
          "RESOURCE_TYPE_CUSTOMER",
          "RESOURCE_TYPE_ACCOUNT",
          "RESOURCE_TYPE_PAYMENT_DEVICE",
          "RESOURCE_TYPE_PAYMENT_DEVICE_LINK",
          "RESOURCE_TYPE_FLAG",
          "RESOURCE_TYPE_RESTRICTION_SET",
          "RESOURCE_TYPE_PLAN",
          "RESOURCE_TYPE_ACCOUNT_PLAN_ASSOC",
          "RESOURCE_TYPE_PAYMENT_HUB_BANK_ACCOUNT",
          "RESOURCE_TYPE_PAYMENT_HUB_PAYMENT",
          "RESOURCE_TYPE_PAYMENT_HUB_UK_BBAN",
          "RESOURCE_TYPE_PAYMENT_HUB_UK_IBAN",
          "RESOURCE_TYPE_XPL_PAYEE",
          "RESOURCE_TYPE_PAYMENT_HUB_STANDING_ORDER_INSTRUCTION",
          "RESOURCE_TYPE_PAYMENT_HUB_FUTURE_PAYMENT_INSTRUCTION",
          "RESOURCE_TYPE_PAYMENT_HUB_MANDATE",
          "RESOURCE_TYPE_PAYMENT_HUB_DIRECT_DEBIT",
          "RESOURCE_TYPE_PARAMETER_VALUE"
        ],
        "default": "RESOURCE_TYPE_UNKNOWN",
        "x-enum-value-release-info": {
          "RESOURCE_TYPE_PARAMETER_VALUE": {
            "releaseVersion": {
              "major": 5
            },
            "changeType": "ADD_ENUM_VALUE",
            "featureFlag": "TM_77187_DATA_LOADER_PARAMETERS_V2"
          }
        },
        "x-enum-value-descriptions": {
          "RESOURCE_TYPE_ACCOUNT": "Resource type describing an account object.",
          "RESOURCE_TYPE_ACCOUNT_PLAN_ASSOC": "Resource type describing an account plan association object.",
          "RESOURCE_TYPE_CUSTOMER": "Resource type describing a customer object.",
          "RESOURCE_TYPE_FLAG": "Resource type describing a flag object.",
          "RESOURCE_TYPE_PARAMETER_VALUE": "Resource type describing a parameter value object.",
          "RESOURCE_TYPE_PAYMENT_DEVICE": "Resource type describing a payment device object.",
          "RESOURCE_TYPE_PAYMENT_DEVICE_LINK": "Resource type describing a payment device link object.",
          "RESOURCE_TYPE_PAYMENT_HUB_BANK_ACCOUNT": "Resource type describing a payments hub bank account object.",
          "RESOURCE_TYPE_PAYMENT_HUB_DIRECT_DEBIT": "Resource type describing a payments hub direct debit object.",
          "RESOURCE_TYPE_PAYMENT_HUB_FUTURE_PAYMENT_INSTRUCTION": "Resource type describing a payments hub future payment instruction object.",
          "RESOURCE_TYPE_PAYMENT_HUB_MANDATE": "Resource type describing a payments hub mandate object.",
          "RESOURCE_TYPE_PAYMENT_HUB_PAYMENT": "Resource type describing a payments hub payment object.",
          "RESOURCE_TYPE_PAYMENT_HUB_STANDING_ORDER_INSTRUCTION": "Resource type describing a payments hub standing order instruction object.",
          "RESOURCE_TYPE_PAYMENT_HUB_UK_BBAN": "Resource type describing a payments hub uk BBAN object.",
          "RESOURCE_TYPE_PAYMENT_HUB_UK_IBAN": "Resource type describing a payments hub uk IBAN object",
          "RESOURCE_TYPE_PLAN": "Resource type describing a plan object.",
          "RESOURCE_TYPE_RESTRICTION_SET": "Resource type describing a restriction set object.",
          "RESOURCE_TYPE_UNKNOWN": "Default value.",
          "RESOURCE_TYPE_XPL_PAYEE": "Resource type describing a payments hub payee object."
        }
      },
      "v1UpdateAccountSchedulesPauseTimeResponse": {
        "type": "object",
        "properties": {
          "updated_schedules": {
            "type": "string",
            "format": "uint64",
            "description": "The number of schedules updated by the request."
          }
        }
      },
      "v1bank_accountsBankAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the `BankAccount`. This is generated by the Payments Hub on creation.",
            "x-example-override": "8b0a7e4c-4760-4cb1-a028-9af4c8f72cba"
          },
          "target_account_token": {
            "type": "string",
            "description": "The Target Account token that this `BankAccount` points to. Required if `account_id` is not populated on creation. This will be the `token` field of a [Payment Device Link](/api/core_api/#Payment_devices-PaymentDeviceLink).",
            "x-example-override": "b377b0e6-ff67-4a78-b0d6-fa7a1dded210"
          },
          "status": {
            "$ref": "#/components/schemas/bank_accountsBankAccountStatus",
            "description": "The status of this `BankAccount`.",
            "x-example-override": "BANK_ACCOUNT_STATUS_ACTIVE"
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the `BankAccount` was created. This is generated by the Payments Hub.",
            "x-third-party": "GOOGLE_PROTOBUF_TIMESTAMP"
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating the last time the `BankAccount` was updated. This is generated by the Payments Hub.",
            "x-third-party": "GOOGLE_PROTOBUF_TIMESTAMP"
          },
          "account_id": {
            "type": "string",
            "description": "The Core API Account ID that this `BankAccount` relates to. Required if `target_account_token` is not populated on creation.",
            "x-example-override": "cb6be678-f6a6-4bf9-b5b7-7465b9d50cd7"
          },
          "metadata": {
            "$ref": "#/components/schemas/protobufStruct",
            "title": "Metadata related to the `BankAccount`. Optional"
          },
          "migration_info": {
            "$ref": "#/components/schemas/v1bank_accountsMigrationInfo",
            "description": "Migration-specific information. Only populated on `BankAccount`s that have been migrated from another banking platform."
          },
          "routing_address": {
            "$ref": "#/components/schemas/bank_accountsRoutingAddress",
            "required": false
          },
          "iban": {
            "$ref": "#/components/schemas/iban",
            "required": false
          }
        }
      },
      "v1bank_accountsMigrationInfo": {
        "type": "object",
        "properties": {
          "is_migrated": {
            "type": "boolean",
            "description": "This field indicates whether the `BankAccount` has been migrated from another platform into Vault."
          },
          "tranche_id": {
            "type": "string",
            "description": "The ID of the tranche that the `BankAccount` was migrated within."
          },
          "migration_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the `BankAccount` was migrated."
          },
          "source_resource_id": {
            "type": "string",
            "description": "The ID from the source platform of the migrated `BankAccount`."
          }
        }
      },
      "v1direct_debitsMigrationInfo": {
        "type": "object",
        "properties": {
          "is_migrated": {
            "type": "boolean",
            "description": "This field indicates whether the Direct Debit has been migrated from another platform into Vault."
          },
          "tranche_id": {
            "type": "string",
            "description": "The ID of the tranche that the Direct Debit was migrated within."
          },
          "migration_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the Direct Debit was migrated."
          },
          "source_resource_id": {
            "type": "string",
            "description": "The ID from the source platform of the migrated Direct Debit."
          }
        }
      },
      "v1direct_debitsStatusDetails": {
        "type": "object",
        "properties": {
          "status_reason": {
            "$ref": "#/components/schemas/direct_debitsDirectDebitStatusReason",
            "description": "One of a set of predefined reasons for the `status` of the Direct Debit. Required."
          },
          "status_description": {
            "type": "string",
            "description": "A free-form string to give a more detailed description of the reason. It is intended to be read by human operators. Optional."
          }
        },
        "description": "Provides information for why the Direct Debit has the specific `status`."
      },
      "v1mandatesMigrationInfo": {
        "type": "object",
        "properties": {
          "is_migrated": {
            "type": "boolean",
            "description": "This field indicates whether the Mandate has been migrated from another platform into Vault.",
            "x-output-only": true
          },
          "tranche_id": {
            "type": "string",
            "description": "The ID of the tranche that the Mandate was migrated within.",
            "x-output-only": true
          },
          "migration_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the Mandate was migrated.",
            "x-output-only": true
          },
          "source_resource_id": {
            "type": "string",
            "description": "The ID from the source platform of the migrated Mandate.",
            "x-output-only": true
          }
        }
      },
      "v1parametersValue": {
        "type": "object",
        "properties": {
          "string_value": {
            "$ref": "#/components/schemas/string_value",
            "required": false
          },
          "decimal_value": {
            "$ref": "#/components/schemas/decimal_value",
            "required": false
          },
          "enumeration_value": {
            "$ref": "#/components/schemas/enumeration_value",
            "required": false
          },
          "date_time_value": {
            "$ref": "#/components/schemas/date_time_value",
            "required": false
          },
          "date_offset_value": {
            "$ref": "#/components/schemas/parametersDateOffset",
            "required": false
          },
          "account_id_value": {
            "$ref": "#/components/schemas/account_id_value",
            "required": false
          }
        }
      },
      "v1partyBankAccount": {
        "type": "object",
        "properties": {
          "bank_id_code": {
            "type": "string",
            "description": "The `bank_id_code` enables unique identification of a single BankAccount held by a branch of a bank. Together with the `bank_id`, these two fields enable the identification of a single account within a country. The allowed value is `GBDSC`, which identifies a `bank_id` that is a UK sort code."
          },
          "bank_id": {
            "type": "string",
            "description": "The ID of the bank branch the account is held in. If the `bank_id_code` is a GB Domestic Sort Code (GBDSC), this must be a UK sort code."
          },
          "account_number": {
            "type": "string",
            "description": "The account number."
          }
        }
      },
      "v1partyParty": {
        "type": "object",
        "properties": {
          "bank_account": {
            "$ref": "#/components/schemas/v1partyBankAccount",
            "description": "The BankAccount details associated with the Party."
          },
          "name": {
            "type": "string",
            "description": "The customer name associated with the Party."
          },
          "account_id": {
            "type": "string",
            "description": "The Party's Vault account ID. Output only.",
            "x-output-only": true
          }
        }
      },
      "v1payeesMigrationInfo": {
        "type": "object",
        "properties": {
          "is_migrated": {
            "type": "boolean",
            "description": "This field indicates whether the payee has been migrated from another platform into Vault."
          },
          "tranche_id": {
            "type": "string",
            "description": "The ID of the tranche that the payee was migrated within."
          },
          "migration_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the payee was migrated."
          },
          "source_resource_id": {
            "type": "string",
            "description": "The ID from the source platform of the migrated payee."
          }
        }
      },
      "v1paymentsBBAN": {
        "type": "object",
        "properties": {
          "bank_id_code": {
            "type": "string",
            "description": "The `bank_id_code` enables unique identification of a single bank account held by a branch of a bank. Together with the `bank_id`, these two fields enable the identification of a single account within a country. Use `GBDSC` here to identify a `bank_id` that is a UK sort code. Use `SWBIC` to identify a `bank_id` that is a BIC.\n\nFor OUTBOUND payments with a `scheme` value of FPS, this must be set to `GBDSC` for both the `debitor_party` and `creditor_party`.\n\nFor INBOUND payments with a `scheme` value of FPS that have originated overseas (POOs), this will be set to be `SWBIC` for the `debitor_party`. The Payments Hub will not automatically reject payments that have originated overseas. Users that intend to reject such payments should implement this logic at a product level (in the associated Smart Contract).",
            "x-example-override": "GBDSC"
          },
          "bank_id": {
            "type": "string",
            "description": "The ID of the bank branch the account is held in. Required on resource creation. If the `bank_id_code` is a GB Domestic Sort Code (GBDSC), this must be a UK sort code. If the `bank_id_code` is SWBIC, this must be a Bank Identifier Code (BIC).",
            "x-example-override": "123456"
          },
          "account_number": {
            "type": "string",
            "description": "The account number. Optional on resource creation. It is mutually exclusive with `iban`.",
            "x-example-override": "12345678"
          }
        },
        "description": "A BBAN message contains fields required to create a Basic Bank Account Number (BBAN). The exact form of any BBAN is decided by the country it applies to. However, all BBANs must contain the domestic bank account number, a branch identifier and potential routing information."
      },
      "v1paymentsMigrationInfo": {
        "type": "object",
        "properties": {
          "is_migrated": {
            "type": "boolean",
            "description": "This field indicates whether the Payment has been migrated from another platform into Vault."
          },
          "tranche_id": {
            "type": "string",
            "description": "The ID of the tranche that the Payment was migrated within."
          },
          "migration_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the Payment was migrated."
          },
          "source_resource_id": {
            "type": "string",
            "description": "The ID from the source platform of the migrated Payment."
          }
        },
        "description": "MigrationInfo contains information specific to migrated Payment resources."
      },
      "v1paymentsOverrides": {
        "type": "object",
        "properties": {
          "core_restrictions": {
            "$ref": "#/components/schemas/paymentsCoreRestrictions",
            "description": "Instructions to override [Restrictions](/api/core_api/#Restrictions) that are enforced by the Core API. These include [Account](/api/core_api/#Accounts-Account), [PaymentDevice](/api/core_api/#Payment_devices-PaymentDevice) and [Customer](/api/core_api/#Customers-Customer)-level restrictions.",
            "x-example-override": "{}"
          }
        },
        "description": "Overrides are used to override certain checks for a payment."
      },
      "v1paymentsParty": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The Vault account identifier of the specified party. Automatically populated if a Vault account matches the supplied Party information. For further information, see [BankAccount](/api/payments_hub_api/#Bank_Accounts-BankAccount). Optional."
          },
          "name": {
            "type": "string",
            "description": "The customer name associated with the account. For FPS this is required for OUTBOUND payments, but optional for INBOUND payments. For OnUs payments this is optional.",
            "x-example-override": "John Doe"
          },
          "iban": {
            "type": "string",
            "description": "The International Bank Account Number (IBAN) is a unique identifier that contains information about the owner of a bank account such as the account number, bank and branch information and country code. Optional on resource creation. It is mutually exclusive with `bban.account_number`.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2
              },
              "changeType": "ADD_FIELD",
              "description": "Field added to allow collection of IBAN routing information"
            },
            "x-example-override": "GB29BICA12345612345678"
          },
          "identification": {
            "type": "string",
            "description": "Identification of a party. It can identify an individual or an organisation. Optional.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 13
              },
              "changeType": "ADD_FIELD",
              "description": "Field added to allow collection of party identification"
            },
            "x-example-override": ""
          },
          "bban": {
            "$ref": "#/components/schemas/v1paymentsBBAN",
            "required": true
          }
        },
        "description": "The party represents either the sending or receiving party's account details."
      },
      "v1paymentsStatusDetails": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "This field is only set by the Payments Hub in particular scenarios and it informs callers why a payment reached its current status. The field is derived from the Payments Hub and the Postings API (for account, restriction and Smart Contract violations).",
            "x-example-override": "STATUS_REASON_ACCEPT"
          },
          "external_code": {
            "type": "string",
            "description": "Code explaining the scheme-specific status code associated with the payment. For OUTBOUND payments, only populated once a response has been received from an external party via the relevant gateway connector and the payment has transitioned past a `SUBMITTED` current status. For INBOUND payments, only populated if supported by the `execution_plan` of the payment.",
            "x-example-override": "0000"
          }
        },
        "description": "StatusDetails records the justification for the status including both internal and external information."
      },
      "v1scheduled_paymentsBankAccount": {
        "type": "object",
        "properties": {
          "bank_id_code": {
            "type": "string",
            "description": "The `bank_id_code` enables unique identification of a single BankAccount held by a branch of a bank. Together with the `bank_id`, these two fields enable the identification of a single account within a country. The allowed value is `GBDSC`, which identifies a `bank_id` that is a UK sort code. Required on resource creation.",
            "x-example-override": "GBDSC"
          },
          "bank_id": {
            "type": "string",
            "description": "The ID of the bank branch the account is held in. If the `bank_id_code` is a GB Domestic Sort Code (GBDSC), this must be a UK sort code. Required on resource creation.",
            "x-example-override": "123456"
          },
          "account_number": {
            "type": "string",
            "description": "The account number. Required on resource creation.",
            "x-example-override": "12345678"
          },
          "account_number_code": {
            "type": "string",
            "description": "The account number code describes the format of the `account_number`. The allowed value is \"BBAN\".",
            "x-release-info": {
              "releaseVersion": {
                "major": 2
              },
              "changeType": "ADD_FIELD"
            },
            "x-example-override": "BBAN"
          }
        }
      },
      "v1scheduled_paymentsMigrationInfo": {
        "type": "object",
        "properties": {
          "is_migrated": {
            "type": "boolean",
            "description": "This field indicates whether the FuturePaymentInstruction or StandingOrderInstruction has been migrated from another platform into Vault.",
            "x-output-only": true
          },
          "tranche_id": {
            "type": "string",
            "description": "The ID of the tranche that the FuturePaymentInstruction or StandingOrderInstruction was migrated within.",
            "x-output-only": true
          },
          "migration_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the FuturePaymentInstruction or StandingOrderInstruction was migrated.",
            "x-output-only": true
          },
          "source_resource_id": {
            "type": "string",
            "description": "The ID from the source platform of the migrated FuturePaymentInstruction or StandingOrderInstruction.",
            "x-output-only": true
          }
        }
      },
      "v1scheduled_paymentsParty": {
        "type": "object",
        "properties": {
          "bank_account": {
            "$ref": "#/components/schemas/v1scheduled_paymentsBankAccount",
            "description": "The BankAccount details associated with the Party."
          },
          "name": {
            "type": "string",
            "description": "The customer name associated with the Party. Required on resource creation."
          },
          "account_id": {
            "type": "string",
            "description": "The Party's Vault account ID. Output only.",
            "x-output-only": true
          }
        }
      },
      "v1ukBBAN": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The UUID of the BBAN assigned by the Payments Hub.",
            "x-example-override": "13822934-1a09-4b62-952b-1cefc8c15520"
          },
          "bank_id_code": {
            "type": "string",
            "description": "The Bank ID Code identifies the country in which the account is located, this is \"GBDSC\" in all UK cases.",
            "x-example-override": "GBDSC"
          },
          "bank_id": {
            "type": "string",
            "description": "The ID of the bank branch the account is held in. This is also known as the sort code. Required on resource creation.",
            "x-example-override": "123456"
          },
          "account_number": {
            "type": "string",
            "description": "The account number of the account. Optional on resource creation. If it is provided, modulus checking will be applied to verify the account number's validity. If it is not provided, the Payments Hub will generate an account number for the provided `bank_id`.",
            "x-example-override": "12345678"
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the BBAN was created. This is generated by the Payments Hub.",
            "x-third-party": "GOOGLE_PROTOBUF_TIMESTAMP"
          }
        }
      },
      "returned_by_direct_debit_id": {
        "type": "string",
        "description": "Unique identifier of the resource in the Payments Hub (UUID)."
      },
      "reversed_by_direct_debit_id": {
        "type": "string",
        "description": "Unique identifier of the resource in the Payments Hub (UUID)."
      },
      "refunded_by_claim_id": {
        "type": "string",
        "description": "Unique identifier of the resource in the Payments Hub (UUID)."
      },
      "customer_id": {
        "type": "string",
        "description": "The customer ID the flag applies to.\n"
      },
      "account_id": {
        "type": "string",
        "description": "The ID of the Account that owns this value."
      },
      "payment_device_id": {
        "type": "string",
        "description": "The payment device ID the flag applies to.\n"
      },
      "number_value": {
        "type": "string",
        "description": "Represents a double value."
      },
      "string_value": {
        "type": "string",
        "description": "The value of a string Parameter."
      },
      "bool_value": {
        "type": "string",
        "description": "Represents a boolean value."
      },
      "account_config_group_id": {
        "type": "string",
        "description": "The ID of the account config group that owns this value. When set to `account-config-group`, this is owned by the root group and is therefore global."
      },
      "account_config_entity_id": {
        "type": "string",
        "description": "The ID of the AccountConfigEntity that owns this value."
      },
      "code": {
        "type": "string",
        "description": "The purpose expressed in a standard form (the ISO20022 ExternalPurpose1Code format is recommended). It must be an alphanumerical string between one to four characters long."
      },
      "proprietary": {
        "type": "string",
        "description": "The purpose expressed in a proprietary form. It must be an alphanumerical string between one to 35 characters long."
      },
      "iban": {
        "type": "string",
        "description": "The International Bank Account Number (IBAN) is a unique identifier that contains information about the owner of a bank account such as the account number, bank and branch information and country code. Required if `routing_address` is not populated on creation."
      },
      "decimal_value": {
        "type": "string",
        "description": "The value of a decimal Parameter."
      },
      "enumeration_value": {
        "type": "string",
        "description": "The value of an enumeration Parameter."
      },
      "date_time_value": {
        "type": "string",
        "description": "The value of a date-time Parameter. UTC."
      },
      "account_id_value": {
        "type": "string",
        "description": "The ID of an Account, may be Internal or Customer."
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Auth-Token"
      }
    },
    "requestBodies": {}
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}